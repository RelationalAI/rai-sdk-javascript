{"version":3,"file":"rai-sdk-javascript.cjs","mappings":"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M,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,KAAQC,KAAM,MACvB,CAAED,MAAO,K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","sources":["webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/index.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/console-table-printer.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/internalTable/input-converter.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/internalTable/internal-table-printer.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/internalTable/internal-table.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/internalTable/table-pre-processors.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/utils/colored-console-line.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/utils/console-utils.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/utils/string-utils.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/utils/table-constants.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/console-table-printer/dist/src/utils/table-helpers.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/decimal.js/decimal.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/decode-uri-component/index.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/filter-obj/index.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/query-string/index.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/simple-wcswidth/dist/index.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/simple-wcswidth/dist/src/binary-search.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/simple-wcswidth/dist/src/non-spacing-chars.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/simple-wcswidth/dist/src/wcswidth.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/simple-wcswidth/dist/src/wcwidth.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/split-on-first/index.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/strict-uri-encode/index.js","webpack://@relationalai/rai-sdk-javascript/webpack/bootstrap","webpack://@relationalai/rai-sdk-javascript/webpack/runtime/compat get default export","webpack://@relationalai/rai-sdk-javascript/webpack/runtime/define property getters","webpack://@relationalai/rai-sdk-javascript/webpack/runtime/hasOwnProperty shorthand","webpack://@relationalai/rai-sdk-javascript/webpack/runtime/make namespace object","webpack://@relationalai/rai-sdk-javascript/./fetch.ts","webpack://@relationalai/rai-sdk-javascript/./src/errors.ts","webpack://@relationalai/rai-sdk-javascript/./src/types.ts","webpack://@relationalai/rai-sdk-javascript/./src/rest.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/base.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/database/databaseApi.ts","webpack://@relationalai/rai-sdk-javascript/./node_modules/tslib/tslib.es6.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/enum.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/pretty.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/utf8.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/compat.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/buffer.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/bn.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/type.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/math.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/set.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/row/struct.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/get.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/row/map.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/vector.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/chunk.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/bit.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/indexof.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/iterator.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/bytelength.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/vector.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/data.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/schema.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/typecomparator.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/recordbatch.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/table.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/recordbatch.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/block.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/flatbuffers/mjs/constants.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/flatbuffers/mjs/utils.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/flatbuffers/mjs/long.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/flatbuffers/mjs/encoding.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/metadata-version.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/endianness.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/dictionary-kind.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/type.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/flatbuffers/mjs/byte-buffer.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/flatbuffers/mjs/builder.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/key-value.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/int.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/dictionary-encoding.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/field.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/schema.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/footer.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/ipc/metadata/file.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/io/adapters.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/io/interfaces.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/io/stream.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/io/file.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/util/int.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/vectorloader.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/body-compression-method.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/compression-type.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/precision.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/date-unit.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/time-unit.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/interval-unit.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/union-mode.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/message-header.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/body-compression.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/buffer.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/field-node.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/record-batch.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/dictionary-batch.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/floating-point.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/decimal.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/date.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/time.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/timestamp.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/interval.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/union.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/fixed-size-binary.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/fixed-size-list.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/map.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/message.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/null.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/binary.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/bool.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/utf8.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/list.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/fb/struct_.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/visitor/typeassembler.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/ipc/metadata/json.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/ipc/metadata/message.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/ipc/message.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/ipc/reader.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/apache-arrow/ipc/serialization.mjs","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/oneof.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/base64.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/message-type.js","webpack://@relationalai/rai-sdk-javascript/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js","webpack://@relationalai/rai-sdk-javascript/./src/proto/generated/schema.ts","webpack://@relationalai/rai-sdk-javascript/./src/proto/generated/message.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/transaction/types.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/engine/types.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/transaction/transactionUtils.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/transaction/transactionApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/engine/engineApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/oauthClient/oauthClientApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/transaction/transactionAsyncApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/model/modelUtils.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/query/queryUtils.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/query/queryApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/user/types.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/user/userApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/client.ts","webpack://@relationalai/rai-sdk-javascript/./src/utils.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/edb/edbApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/model/modelApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/query/execAsyncApi.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/database/types.ts","webpack://@relationalai/rai-sdk-javascript/./src/api/oauthClient/types.ts","webpack://@relationalai/rai-sdk-javascript/./src/credentials.ts","webpack://@relationalai/rai-sdk-javascript/./src/results/resultUtils.ts","webpack://@relationalai/rai-sdk-javascript/./src/results/resultTable.ts"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.renderTable = exports.printTable = exports.Table = void 0;\nconst console_table_printer_1 = __importDefault(require(\"./src/console-table-printer\"));\nexports.Table = console_table_printer_1.default;\nconst internal_table_printer_1 = require(\"./src/internalTable/internal-table-printer\");\nObject.defineProperty(exports, \"printTable\", { enumerable: true, get: function () { return internal_table_printer_1.printSimpleTable; } });\nObject.defineProperty(exports, \"renderTable\", { enumerable: true, get: function () { return internal_table_printer_1.renderSimpleTable; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst internal_table_1 = __importDefault(require(\"./internalTable/internal-table\"));\nconst table_helpers_1 = require(\"./utils/table-helpers\");\nclass Table {\n    constructor(options) {\n        this.table = new internal_table_1.default(options);\n    }\n    addColumn(column) {\n        this.table.addColumn(column);\n        return this;\n    }\n    addColumns(columns) {\n        this.table.addColumns(columns);\n        return this;\n    }\n    addRow(text, rowOptions) {\n        this.table.addRow(text, (0, table_helpers_1.convertRawRowOptionsToStandard)(rowOptions));\n        return this;\n    }\n    addRows(toBeInsertedRows, rowOptions) {\n        this.table.addRows(toBeInsertedRows, (0, table_helpers_1.convertRawRowOptionsToStandard)(rowOptions));\n        return this;\n    }\n    printTable() {\n        const tableRendered = this.table.renderTable();\n        console.log(tableRendered);\n    }\n    render() {\n        return this.table.renderTable();\n    }\n}\nexports.default = Table;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rawColumnToInternalColumn = exports.objIfExists = void 0;\nconst table_constants_1 = require(\"../utils/table-constants\");\nconst objIfExists = (key, val) => {\n    if (!val) {\n        return {};\n    }\n    return {\n        [key]: val,\n    };\n};\nexports.objIfExists = objIfExists;\nconst rawColumnToInternalColumn = (column) => (Object.assign(Object.assign(Object.assign(Object.assign({ name: column.name, title: column.title || column.name }, (0, exports.objIfExists)('color', column.color)), (0, exports.objIfExists)('maxLen', column.maxLen)), (0, exports.objIfExists)('minLen', column.minLen)), { alignment: column.alignment || table_constants_1.DEFAULT_ROW_ALIGNMENT }));\nexports.rawColumnToInternalColumn = rawColumnToInternalColumn;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printSimpleTable = exports.renderSimpleTable = exports.renderTable = void 0;\nconst colored_console_line_1 = __importDefault(require(\"../utils/colored-console-line\"));\nconst string_utils_1 = require(\"../utils/string-utils\");\nconst table_constants_1 = require(\"../utils/table-constants\");\nconst table_helpers_1 = require(\"../utils/table-helpers\");\nconst internal_table_1 = __importDefault(require(\"./internal-table\"));\nconst table_pre_processors_1 = require(\"./table-pre-processors\");\n// ║ Index ║         ║        ║\nconst renderOneLine = (tableStyle, columns, currentLineIndex, widthLimitedColumnsArray, isHeader, row, colorMap) => {\n    const line = new colored_console_line_1.default(colorMap);\n    line.addCharsWithColor(table_constants_1.DEFAULT_ROW_FONT_COLOR, tableStyle.vertical);\n    columns.forEach((column) => {\n        const thisLineHasText = currentLineIndex < widthLimitedColumnsArray[column.name].length;\n        const textForThisLine = thisLineHasText\n            ? (0, table_helpers_1.cellText)(widthLimitedColumnsArray[column.name][currentLineIndex])\n            : '';\n        line.addCharsWithColor(table_constants_1.DEFAULT_ROW_FONT_COLOR, ' ');\n        line.addCharsWithColor((isHeader && table_constants_1.DEFAULT_HEADER_FONT_COLOR) || column.color || row.color, (0, string_utils_1.textWithPadding)(textForThisLine, column.alignment || table_constants_1.DEFAULT_ROW_ALIGNMENT, column.length || table_constants_1.DEFAULT_COLUMN_LEN));\n        line.addCharsWithColor(table_constants_1.DEFAULT_ROW_FONT_COLOR, ` ${tableStyle.vertical}`);\n    });\n    return line.renderConsole();\n};\n// ║ Bold  ║    text ║  value ║\n// ║ Index ║         ║        ║\nconst renderWidthLimitedLines = (tableStyle, columns, row, colorMap, isHeader) => {\n    // { col1: ['How', 'Is', 'Going'], col2: ['I am', 'Tom'],  }\n    const widthLimitedColumnsArray = (0, table_helpers_1.getWidthLimitedColumnsArray)(columns, row);\n    const totalLines = Object.values(widthLimitedColumnsArray).reduce((a, b) => Math.max(a, b.length), 0);\n    const ret = [];\n    for (let currentLineIndex = 0; currentLineIndex < totalLines; currentLineIndex += 1) {\n        const singleLine = renderOneLine(tableStyle, columns, currentLineIndex, widthLimitedColumnsArray, isHeader, row, colorMap);\n        ret.push(singleLine);\n    }\n    return ret;\n};\n// ║ 1     ║     I would like some red wine please ║ 10.212 ║\nconst renderRow = (table, row) => {\n    let ret = [];\n    ret = ret.concat(renderWidthLimitedLines(table.tableStyle, table.columns, row, table.colorMap));\n    return ret;\n};\n/*\n                  The analysis Result\n ╔═══════╦═══════════════════════════════════════╦════════╗\n*/\nconst renderTableTitle = (table) => {\n    const ret = [];\n    if (table.title === undefined) {\n        return ret;\n    }\n    const getTableWidth = () => {\n        const reducer = (accumulator, currentValue) => \n        // ║ cell ║, 2 spaces + cellTextSize + one border on the left\n        accumulator + currentValue + 2 + 1;\n        return table.columns\n            .map((m) => m.length || table_constants_1.DEFAULT_COLUMN_LEN)\n            .reduce(reducer, 1);\n    };\n    const titleWithPadding = (0, string_utils_1.textWithPadding)(table.title, table_constants_1.DEFAULT_HEADER_ALIGNMENT, getTableWidth());\n    const styledText = new colored_console_line_1.default(table.colorMap);\n    styledText.addCharsWithColor(table_constants_1.DEFAULT_HEADER_FONT_COLOR, titleWithPadding);\n    //                  The analysis Result\n    ret.push(styledText.renderConsole());\n    return ret;\n};\n/*\n ╔═══════╦═══════════════════════════════════════╦════════╗\n ║ index ║                                  text ║  value ║\n ╟═══════╬═══════════════════════════════════════╬════════╢\n*/\nconst renderTableHeaders = (table) => {\n    let ret = [];\n    // ╔═══════╦═══════════════════════════════════════╦════════╗\n    ret.push((0, table_helpers_1.renderTableHorizontalBorders)(table.tableStyle.headerTop, table.columns.map((m) => m.length || table_constants_1.DEFAULT_COLUMN_LEN)));\n    // ║ index ║                                  text ║  value ║\n    const row = (0, table_helpers_1.createHeaderAsRow)(table_helpers_1.createRow, table.columns);\n    ret = ret.concat(renderWidthLimitedLines(table.tableStyle, table.columns, row, table.colorMap, true));\n    // ╟═══════╬═══════════════════════════════════════╬════════╢\n    ret.push((0, table_helpers_1.renderTableHorizontalBorders)(table.tableStyle.headerBottom, table.columns.map((m) => m.length || table_constants_1.DEFAULT_COLUMN_LEN)));\n    return ret;\n};\nconst renderTableEnding = (table) => {\n    const ret = [];\n    // ╚═══════╩═══════════════════════════════════════╩════════╝\n    ret.push((0, table_helpers_1.renderTableHorizontalBorders)(table.tableStyle.tableBottom, table.columns.map((m) => m.length || table_constants_1.DEFAULT_COLUMN_LEN)));\n    return ret;\n};\nconst renderRowSeparator = (table, row) => {\n    const ret = [];\n    const lastRowIndex = table.rows.length - 1;\n    const currentRowIndex = table.rows.indexOf(row);\n    if (currentRowIndex !== lastRowIndex && row.separator) {\n        // ╟═══════╬═══════════════════════════════════════╬════════╢\n        ret.push((0, table_helpers_1.renderTableHorizontalBorders)(table.tableStyle.rowSeparator, table.columns.map((m) => m.length || table_constants_1.DEFAULT_COLUMN_LEN)));\n    }\n    return ret;\n};\nconst renderTable = (table) => {\n    (0, table_pre_processors_1.preProcessColumns)(table); // enable / disable cols, find maxLn of each col/ computed Columns\n    (0, table_pre_processors_1.preProcessRows)(table); // sort and filter\n    const ret = [];\n    renderTableTitle(table).forEach((row) => ret.push(row));\n    renderTableHeaders(table).forEach((row) => ret.push(row));\n    table.rows.forEach((row) => {\n        renderRow(table, row).forEach((row_) => ret.push(row_));\n        renderRowSeparator(table, row).forEach((row_) => ret.push(row_));\n    });\n    renderTableEnding(table).forEach((row) => ret.push(row));\n    return ret.join('\\n');\n};\nexports.renderTable = renderTable;\nconst renderSimpleTable = (rows) => {\n    const table = new internal_table_1.default();\n    table.addRows(rows);\n    return (0, exports.renderTable)(table);\n};\nexports.renderSimpleTable = renderSimpleTable;\nconst printSimpleTable = (rows) => {\n    console.log((0, exports.renderSimpleTable)(rows));\n};\nexports.printSimpleTable = printSimpleTable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst colored_console_line_1 = require(\"../utils/colored-console-line\");\nconst table_constants_1 = require(\"../utils/table-constants\");\nconst table_helpers_1 = require(\"../utils/table-helpers\");\nconst input_converter_1 = require(\"./input-converter\");\nconst internal_table_printer_1 = require(\"./internal-table-printer\");\nconst DEFAULT_ROW_SORT_FUNC = () => 0;\nconst DEFAULT_ROW_FILTER_FUNC = () => true;\nclass TableInternal {\n    constructor(options) {\n        // default construction\n        this.rows = [];\n        this.columns = [];\n        this.title = undefined;\n        this.tableStyle = table_constants_1.DEFAULT_TABLE_STYLE;\n        this.filterFunction = DEFAULT_ROW_FILTER_FUNC;\n        this.sortFunction = DEFAULT_ROW_SORT_FUNC;\n        this.enabledColumns = [];\n        this.disabledColumns = [];\n        this.computedColumns = [];\n        this.rowSeparator = table_constants_1.DEFAULT_ROW_SEPARATOR;\n        this.colorMap = colored_console_line_1.DEFAULT_COLOR_MAP;\n        if (options instanceof Array) {\n            this.initSimple(options);\n        }\n        else if (typeof options === 'object') {\n            this.initDetailed(options);\n        }\n    }\n    initSimple(columns) {\n        this.columns = columns.map((column) => ({\n            name: column,\n            title: column,\n            alignment: table_constants_1.DEFAULT_ROW_ALIGNMENT,\n        }));\n    }\n    initDetailed(options) {\n        var _a;\n        this.title = (options === null || options === void 0 ? void 0 : options.title) || this.title;\n        this.tableStyle = (options === null || options === void 0 ? void 0 : options.style) || this.tableStyle;\n        this.sortFunction = (options === null || options === void 0 ? void 0 : options.sort) || this.sortFunction;\n        this.filterFunction = (options === null || options === void 0 ? void 0 : options.filter) || this.filterFunction;\n        this.enabledColumns = (options === null || options === void 0 ? void 0 : options.enabledColumns) || this.enabledColumns;\n        this.disabledColumns = (options === null || options === void 0 ? void 0 : options.disabledColumns) || this.disabledColumns;\n        this.computedColumns = (options === null || options === void 0 ? void 0 : options.computedColumns) || this.computedColumns;\n        this.columns =\n            ((_a = options === null || options === void 0 ? void 0 : options.columns) === null || _a === void 0 ? void 0 : _a.map(input_converter_1.rawColumnToInternalColumn)) || this.columns;\n        this.rowSeparator = (options === null || options === void 0 ? void 0 : options.rowSeparator) || this.rowSeparator;\n        if (options === null || options === void 0 ? void 0 : options.colorMap) {\n            this.colorMap = Object.assign(Object.assign({}, this.colorMap), options.colorMap);\n        }\n        if (options.rows !== undefined) {\n            this.addRows(options.rows);\n        }\n    }\n    createColumnFromRow(text) {\n        const colNames = this.columns.map((col) => col.name);\n        Object.keys(text).forEach((key) => {\n            if (!colNames.includes(key)) {\n                this.columns.push((0, table_helpers_1.createColumFromOnlyName)(key));\n            }\n        });\n    }\n    addColumn(textOrObj) {\n        if (typeof textOrObj === 'string') {\n            this.columns.push((0, table_helpers_1.createColumFromOnlyName)(textOrObj));\n        }\n        else {\n            this.columns.push((0, table_helpers_1.createColumFromComputedColumn)(textOrObj));\n        }\n    }\n    addColumns(toBeInsertedColumns) {\n        toBeInsertedColumns.forEach((toBeInsertedColumn) => {\n            this.addColumn(toBeInsertedColumn);\n        });\n    }\n    addRow(text, options) {\n        this.createColumnFromRow(text);\n        this.rows.push((0, table_helpers_1.createRow)((options === null || options === void 0 ? void 0 : options.color) || table_constants_1.DEFAULT_ROW_FONT_COLOR, text, (options === null || options === void 0 ? void 0 : options.separator) !== undefined\n            ? options === null || options === void 0 ? void 0 : options.separator\n            : this.rowSeparator));\n    }\n    addRows(toBeInsertedRows, options) {\n        toBeInsertedRows.forEach((toBeInsertedRow) => {\n            this.addRow(toBeInsertedRow, options);\n        });\n    }\n    renderTable() {\n        return (0, internal_table_printer_1.renderTable)(this);\n    }\n}\nexports.default = TableInternal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.preProcessRows = exports.preProcessColumns = void 0;\nconst table_helpers_1 = require(\"../utils/table-helpers\");\nconst createComputedColumnsIfNecessary = (table) => {\n    if (table.computedColumns.length) {\n        table.computedColumns.forEach((computedColumn) => {\n            table.addColumn(computedColumn);\n            table.rows.forEach((row) => {\n                row.text[computedColumn.name] = computedColumn.function(row.text);\n            });\n        });\n    }\n};\nconst disableColumnsIfNecessary = (table) => {\n    if (table.enabledColumns.length) {\n        table.columns = table.columns.filter((col) => table.enabledColumns.includes(col.name));\n    }\n};\nconst enableColumnsIfNecessary = (table) => {\n    if (table.disabledColumns.length) {\n        table.columns = table.columns.filter((col) => !table.disabledColumns.includes(col.name));\n    }\n};\nconst findColumnWidth = (table) => {\n    table.columns.forEach((column) => {\n        column.length = (0, table_helpers_1.findLenOfColumn)(column, table.rows);\n    });\n};\nconst preProcessColumns = (table) => {\n    createComputedColumnsIfNecessary(table);\n    enableColumnsIfNecessary(table);\n    disableColumnsIfNecessary(table);\n    findColumnWidth(table);\n};\nexports.preProcessColumns = preProcessColumns;\nconst preProcessRows = (table) => {\n    const newRows = table.rows\n        .filter((r) => table.filterFunction(r.text))\n        .sort((r1, r2) => table.sortFunction(r1.text, r2.text));\n    table.rows = newRows;\n};\nexports.preProcessRows = preProcessRows;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_COLOR_MAP = void 0;\nexports.DEFAULT_COLOR_MAP = {\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m',\n    crimson: '\\x1b[38m',\n    white_bold: '\\x1b[01m',\n    reset: '\\x1b[0m',\n};\nclass ColoredConsoleLine {\n    constructor(colorMap = exports.DEFAULT_COLOR_MAP) {\n        this.text = '';\n        this.colorMap = colorMap;\n    }\n    addCharsWithColor(color, text) {\n        const colorAnsi = this.colorMap[color];\n        this.text +=\n            colorAnsi !== undefined\n                ? `${colorAnsi}${text}${this.colorMap.reset}`\n                : text;\n    }\n    renderConsole() {\n        return this.text;\n    }\n}\nexports.default = ColoredConsoleLine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst simple_wcswidth_1 = require(\"simple-wcswidth\");\n/* eslint-disable no-control-regex */\nconst colorRegex = /\\x1b\\[\\d{1,3}m/g; // \\x1b[30m  \\x1b[305m\nconst stripAnsi = (str) => str.replace(colorRegex, '');\nconst findWidthInConsole = (str) => (0, simple_wcswidth_1.wcswidth)(stripAnsi(str));\nexports.default = findWidthInConsole;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.biggestWordInSentence = exports.limitWidth = exports.textWithPadding = void 0;\nconst console_utils_1 = __importDefault(require(\"./console-utils\"));\n// (\"How are you?\",center, 20) => \"    How are you?    \"\n// (\"How are you?\",right, 20)  => \"        How are you?\"\nconst textWithPadding = (text, alignment, columnLen) => {\n    const curTextSize = (0, console_utils_1.default)(text);\n    // alignments for center padding case\n    const leftPadding = Math.floor((columnLen - curTextSize) / 2);\n    const rightPadding = columnLen - leftPadding - curTextSize;\n    // console.log(text, columnLen, curTextSize);\n    switch (alignment) {\n        case 'left':\n            return text.concat(' '.repeat(columnLen - curTextSize));\n        case 'center':\n            return ' '\n                .repeat(leftPadding)\n                .concat(text)\n                .concat(' '.repeat(rightPadding));\n        case 'right':\n        default:\n            return ' '.repeat(columnLen - curTextSize).concat(text);\n    }\n};\nexports.textWithPadding = textWithPadding;\n// (\"How are you?\",10) => [\"How are \", \"you?\"]\nconst limitWidth = (inpStr, width) => {\n    const ret = [];\n    const spaceSeparatedStrings = inpStr.split(' ');\n    let now = [];\n    let cnt = 0;\n    spaceSeparatedStrings.forEach((strWithoutSpace) => {\n        const consoleWidth = (0, console_utils_1.default)(strWithoutSpace);\n        if (cnt + consoleWidth <= width) {\n            cnt += consoleWidth + 1; // 1 for the space\n            now.push(strWithoutSpace);\n        }\n        else {\n            ret.push(now.join(' '));\n            now = [strWithoutSpace];\n            cnt = consoleWidth + 1;\n        }\n    });\n    ret.push(now.join(' '));\n    return ret;\n};\nexports.limitWidth = limitWidth;\n// (\"How are you?\",10) => [\"How are \", \"you?\"]\nconst biggestWordInSentence = (inpStr) => inpStr.split(' ').reduce((a, b) => Math.max(a, (0, console_utils_1.default)(b)), 0);\nexports.biggestWordInSentence = biggestWordInSentence;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_HEADER_ALIGNMENT = exports.DEFAULT_ROW_ALIGNMENT = exports.DEFAULT_HEADER_FONT_COLOR = exports.DEFAULT_ROW_FONT_COLOR = exports.COLORS = exports.ALIGNMENTS = exports.DEFAULT_TABLE_STYLE = exports.DEFAULT_ROW_SEPARATOR = exports.DEFAULT_COLUMN_LEN = void 0;\nexports.DEFAULT_COLUMN_LEN = 20;\nexports.DEFAULT_ROW_SEPARATOR = false;\nexports.DEFAULT_TABLE_STYLE = {\n    /*\n        Default Style\n        ┌────────────┬─────┬──────┐\n        │ foo        │ bar │ baz  │\n        │ frobnicate │ bar │ quuz │\n        └────────────┴─────┴──────┘\n        */\n    headerTop: {\n        left: '┌',\n        mid: '┬',\n        right: '┐',\n        other: '─',\n    },\n    headerBottom: {\n        left: '├',\n        mid: '┼',\n        right: '┤',\n        other: '─',\n    },\n    tableBottom: {\n        left: '└',\n        mid: '┴',\n        right: '┘',\n        other: '─',\n    },\n    vertical: '│',\n    rowSeparator: {\n        left: '├',\n        mid: '┼',\n        right: '┤',\n        other: '─',\n    },\n};\nexports.ALIGNMENTS = ['right', 'left', 'center'];\nexports.COLORS = [\n    'red',\n    'green',\n    'yellow',\n    'white',\n    'blue',\n    'magenta',\n    'cyan',\n    'crimson',\n    'white_bold',\n    'reset',\n];\nexports.DEFAULT_ROW_FONT_COLOR = 'white';\nexports.DEFAULT_HEADER_FONT_COLOR = 'white_bold';\nexports.DEFAULT_ROW_ALIGNMENT = 'right';\nexports.DEFAULT_HEADER_ALIGNMENT = 'center';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWidthLimitedColumnsArray = exports.createHeaderAsRow = exports.renderTableHorizontalBorders = exports.findLenOfColumn = exports.createRow = exports.createColumFromComputedColumn = exports.createColumFromOnlyName = exports.createTableHorizontalBorders = exports.convertRawRowOptionsToStandard = exports.cellText = void 0;\nconst input_converter_1 = require(\"../internalTable/input-converter\");\nconst console_utils_1 = __importDefault(require(\"./console-utils\"));\nconst string_utils_1 = require(\"./string-utils\");\nconst table_constants_1 = require(\"./table-constants\");\nconst max = (a, b) => Math.max(a, b);\n// takes any input that is given by user and converts to string\nconst cellText = (text) => text === undefined || text === null ? '' : `${text}`;\nexports.cellText = cellText;\nconst convertRawRowOptionsToStandard = (options) => {\n    if (options) {\n        return {\n            color: options.color,\n            separator: options.separator || table_constants_1.DEFAULT_ROW_SEPARATOR,\n        };\n    }\n    return undefined;\n};\nexports.convertRawRowOptionsToStandard = convertRawRowOptionsToStandard;\nconst createTableHorizontalBorders = ({ left, mid, right, other, }, column_lengths) => {\n    // ╚\n    let ret = left;\n    // ╚═══════╩═══════════════════════════════════════╩════════╩\n    column_lengths.forEach((len) => {\n        ret += other.repeat(len + 2);\n        ret += mid;\n    });\n    // ╚═══════╩═══════════════════════════════════════╩════════\n    ret = ret.slice(0, -mid.length);\n    // ╚═══════╩═══════════════════════════════════════╩════════╝\n    ret += right;\n    return ret;\n};\nexports.createTableHorizontalBorders = createTableHorizontalBorders;\nconst createColumFromOnlyName = (name) => ({\n    name,\n    title: name,\n});\nexports.createColumFromOnlyName = createColumFromOnlyName;\nconst createColumFromComputedColumn = (column) => (Object.assign(Object.assign(Object.assign(Object.assign({ name: column.name, title: column.title || column.name }, (0, input_converter_1.objIfExists)('color', column.color)), (0, input_converter_1.objIfExists)('maxLen', column.maxLen)), (0, input_converter_1.objIfExists)('minLen', column.minLen)), { alignment: column.alignment || table_constants_1.DEFAULT_ROW_ALIGNMENT }));\nexports.createColumFromComputedColumn = createColumFromComputedColumn;\nconst createRow = (color, text, separator) => ({\n    color,\n    separator,\n    text,\n});\nexports.createRow = createRow;\nconst findLenOfColumn = (column, rows) => {\n    const columnId = column.name;\n    const columnTitle = column.title;\n    let length = max(0, (column === null || column === void 0 ? void 0 : column.minLen) || 0);\n    if (column.maxLen) {\n        // if customer input is mentioned a max width, lets see if all other can fit here\n        // if others cant fit find the max word length so that at least the table can be printed\n        length = max(length, max(column.maxLen, (0, string_utils_1.biggestWordInSentence)(columnTitle)));\n        length = rows.reduce((acc, row) => max(acc, (0, string_utils_1.biggestWordInSentence)((0, exports.cellText)(row.text[columnId]))), length);\n        return length;\n    }\n    length = max(length, (0, console_utils_1.default)(columnTitle));\n    rows.forEach((row) => {\n        length = max(length, (0, console_utils_1.default)((0, exports.cellText)(row.text[columnId])));\n    });\n    return length;\n};\nexports.findLenOfColumn = findLenOfColumn;\nconst renderTableHorizontalBorders = (style, column_lengths) => {\n    const str = (0, exports.createTableHorizontalBorders)(style, column_lengths);\n    return str;\n};\nexports.renderTableHorizontalBorders = renderTableHorizontalBorders;\nconst createHeaderAsRow = (createRowFn, columns) => {\n    const headerColor = table_constants_1.DEFAULT_HEADER_FONT_COLOR;\n    const row = createRowFn(headerColor, {}, false);\n    columns.forEach((column) => {\n        row.text[column.name] = column.title;\n    });\n    return row;\n};\nexports.createHeaderAsRow = createHeaderAsRow;\n// { col1: ['How', 'Is', 'Going'], col2: ['I am', 'Tom'],  }\nconst getWidthLimitedColumnsArray = (columns, row) => {\n    const ret = {};\n    columns.forEach((column) => {\n        ret[column.name] = (0, string_utils_1.limitWidth)((0, exports.cellText)(row.text[column.name]), column.length || table_constants_1.DEFAULT_COLUMN_LEN);\n    });\n    return ret;\n};\nexports.getWidthLimitedColumnsArray = getWidthLimitedColumnsArray;\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wcswidth = exports.wcwidth = void 0;\nconst wcswidth_1 = __importDefault(require(\"./src/wcswidth\"));\nexports.wcswidth = wcswidth_1.default;\nconst wcwidth_1 = __importDefault(require(\"./src/wcwidth\"));\nexports.wcwidth = wcwidth_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* auxiliary function for binary search in interval table */\nconst bisearch = (ucs, table, tableSize) => {\n    let min = 0;\n    let mid;\n    let max = tableSize;\n    if (ucs < table[0].first || ucs > table[max].last)\n        return 0;\n    while (max >= min) {\n        mid = Math.floor((min + max) / 2);\n        if (ucs > table[mid].last) {\n            min = mid + 1;\n        }\n        else if (ucs < table[mid].first) {\n            max = mid - 1;\n        }\n        else {\n            return 1;\n        }\n    }\n    return 0;\n};\nexports.default = bisearch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* sorted list of non-overlapping intervals of non-spacing characters */\n/* generated by \"uniset +cat=Me +cat=Mn +cat=Cf -00AD +1160-11FF +200B c\" */\nconst combining = [\n    { first: 0x0300, last: 0x036f },\n    { first: 0x0483, last: 0x0486 },\n    { first: 0x0488, last: 0x0489 },\n    { first: 0x0591, last: 0x05bd },\n    { first: 0x05bf, last: 0x05bf },\n    { first: 0x05c1, last: 0x05c2 },\n    { first: 0x05c4, last: 0x05c5 },\n    { first: 0x05c7, last: 0x05c7 },\n    { first: 0x0600, last: 0x0603 },\n    { first: 0x0610, last: 0x0615 },\n    { first: 0x064b, last: 0x065e },\n    { first: 0x0670, last: 0x0670 },\n    { first: 0x06d6, last: 0x06e4 },\n    { first: 0x06e7, last: 0x06e8 },\n    { first: 0x06ea, last: 0x06ed },\n    { first: 0x070f, last: 0x070f },\n    { first: 0x0711, last: 0x0711 },\n    { first: 0x0730, last: 0x074a },\n    { first: 0x07a6, last: 0x07b0 },\n    { first: 0x07eb, last: 0x07f3 },\n    { first: 0x0901, last: 0x0902 },\n    { first: 0x093c, last: 0x093c },\n    { first: 0x0941, last: 0x0948 },\n    { first: 0x094d, last: 0x094d },\n    { first: 0x0951, last: 0x0954 },\n    { first: 0x0962, last: 0x0963 },\n    { first: 0x0981, last: 0x0981 },\n    { first: 0x09bc, last: 0x09bc },\n    { first: 0x09c1, last: 0x09c4 },\n    { first: 0x09cd, last: 0x09cd },\n    { first: 0x09e2, last: 0x09e3 },\n    { first: 0x0a01, last: 0x0a02 },\n    { first: 0x0a3c, last: 0x0a3c },\n    { first: 0x0a41, last: 0x0a42 },\n    { first: 0x0a47, last: 0x0a48 },\n    { first: 0x0a4b, last: 0x0a4d },\n    { first: 0x0a70, last: 0x0a71 },\n    { first: 0x0a81, last: 0x0a82 },\n    { first: 0x0abc, last: 0x0abc },\n    { first: 0x0ac1, last: 0x0ac5 },\n    { first: 0x0ac7, last: 0x0ac8 },\n    { first: 0x0acd, last: 0x0acd },\n    { first: 0x0ae2, last: 0x0ae3 },\n    { first: 0x0b01, last: 0x0b01 },\n    { first: 0x0b3c, last: 0x0b3c },\n    { first: 0x0b3f, last: 0x0b3f },\n    { first: 0x0b41, last: 0x0b43 },\n    { first: 0x0b4d, last: 0x0b4d },\n    { first: 0x0b56, last: 0x0b56 },\n    { first: 0x0b82, last: 0x0b82 },\n    { first: 0x0bc0, last: 0x0bc0 },\n    { first: 0x0bcd, last: 0x0bcd },\n    { first: 0x0c3e, last: 0x0c40 },\n    { first: 0x0c46, last: 0x0c48 },\n    { first: 0x0c4a, last: 0x0c4d },\n    { first: 0x0c55, last: 0x0c56 },\n    { first: 0x0cbc, last: 0x0cbc },\n    { first: 0x0cbf, last: 0x0cbf },\n    { first: 0x0cc6, last: 0x0cc6 },\n    { first: 0x0ccc, last: 0x0ccd },\n    { first: 0x0ce2, last: 0x0ce3 },\n    { first: 0x0d41, last: 0x0d43 },\n    { first: 0x0d4d, last: 0x0d4d },\n    { first: 0x0dca, last: 0x0dca },\n    { first: 0x0dd2, last: 0x0dd4 },\n    { first: 0x0dd6, last: 0x0dd6 },\n    { first: 0x0e31, last: 0x0e31 },\n    { first: 0x0e34, last: 0x0e3a },\n    { first: 0x0e47, last: 0x0e4e },\n    { first: 0x0eb1, last: 0x0eb1 },\n    { first: 0x0eb4, last: 0x0eb9 },\n    { first: 0x0ebb, last: 0x0ebc },\n    { first: 0x0ec8, last: 0x0ecd },\n    { first: 0x0f18, last: 0x0f19 },\n    { first: 0x0f35, last: 0x0f35 },\n    { first: 0x0f37, last: 0x0f37 },\n    { first: 0x0f39, last: 0x0f39 },\n    { first: 0x0f71, last: 0x0f7e },\n    { first: 0x0f80, last: 0x0f84 },\n    { first: 0x0f86, last: 0x0f87 },\n    { first: 0x0f90, last: 0x0f97 },\n    { first: 0x0f99, last: 0x0fbc },\n    { first: 0x0fc6, last: 0x0fc6 },\n    { first: 0x102d, last: 0x1030 },\n    { first: 0x1032, last: 0x1032 },\n    { first: 0x1036, last: 0x1037 },\n    { first: 0x1039, last: 0x1039 },\n    { first: 0x1058, last: 0x1059 },\n    { first: 0x1160, last: 0x11ff },\n    { first: 0x135f, last: 0x135f },\n    { first: 0x1712, last: 0x1714 },\n    { first: 0x1732, last: 0x1734 },\n    { first: 0x1752, last: 0x1753 },\n    { first: 0x1772, last: 0x1773 },\n    { first: 0x17b4, last: 0x17b5 },\n    { first: 0x17b7, last: 0x17bd },\n    { first: 0x17c6, last: 0x17c6 },\n    { first: 0x17c9, last: 0x17d3 },\n    { first: 0x17dd, last: 0x17dd },\n    { first: 0x180b, last: 0x180d },\n    { first: 0x18a9, last: 0x18a9 },\n    { first: 0x1920, last: 0x1922 },\n    { first: 0x1927, last: 0x1928 },\n    { first: 0x1932, last: 0x1932 },\n    { first: 0x1939, last: 0x193b },\n    { first: 0x1a17, last: 0x1a18 },\n    { first: 0x1b00, last: 0x1b03 },\n    { first: 0x1b34, last: 0x1b34 },\n    { first: 0x1b36, last: 0x1b3a },\n    { first: 0x1b3c, last: 0x1b3c },\n    { first: 0x1b42, last: 0x1b42 },\n    { first: 0x1b6b, last: 0x1b73 },\n    { first: 0x1dc0, last: 0x1dca },\n    { first: 0x1dfe, last: 0x1dff },\n    { first: 0x200b, last: 0x200f },\n    { first: 0x202a, last: 0x202e },\n    { first: 0x2060, last: 0x2063 },\n    { first: 0x206a, last: 0x206f },\n    { first: 0x20d0, last: 0x20ef },\n    { first: 0x302a, last: 0x302f },\n    { first: 0x3099, last: 0x309a },\n    { first: 0xa806, last: 0xa806 },\n    { first: 0xa80b, last: 0xa80b },\n    { first: 0xa825, last: 0xa826 },\n    { first: 0xfb1e, last: 0xfb1e },\n    { first: 0xfe00, last: 0xfe0f },\n    { first: 0xfe20, last: 0xfe23 },\n    { first: 0xfeff, last: 0xfeff },\n    { first: 0xfff9, last: 0xfffb },\n    { first: 0x10a01, last: 0x10a03 },\n    { first: 0x10a05, last: 0x10a06 },\n    { first: 0x10a0c, last: 0x10a0f },\n    { first: 0x10a38, last: 0x10a3a },\n    { first: 0x10a3f, last: 0x10a3f },\n    { first: 0x1d167, last: 0x1d169 },\n    { first: 0x1d173, last: 0x1d182 },\n    { first: 0x1d185, last: 0x1d18b },\n    { first: 0x1d1aa, last: 0x1d1ad },\n    { first: 0x1d242, last: 0x1d244 },\n    { first: 0xe0001, last: 0xe0001 },\n    { first: 0xe0020, last: 0xe007f },\n    { first: 0xe0100, last: 0xe01ef },\n];\nexports.default = combining;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wcwidth_1 = __importDefault(require(\"./wcwidth\"));\nconst mk_wcswidth = (pwcs) => {\n    let width = 0;\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < pwcs.length; i++) {\n        const charCode = pwcs.charCodeAt(i);\n        const w = wcwidth_1.default(charCode);\n        if (w < 0) {\n            return -1;\n        }\n        width += w;\n    }\n    return width;\n};\nexports.default = mk_wcswidth;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst non_spacing_chars_1 = __importDefault(require(\"./non-spacing-chars\"));\nconst binary_search_1 = __importDefault(require(\"./binary-search\"));\n/* The following two functions define the column width of an ISO 10646\n * character as follows:\n *\n *    - The null character (U+0000) has a column width of 0.\n *\n *    - Other C0/C1 control characters and DEL will lead to a return\n *      value of -1.\n *\n *    - Non-spacing and enclosing combining characters (general\n *      category code Mn or Me in the Unicode database) have a\n *      column width of 0.\n *\n *    - SOFT HYPHEN (U+00AD) has a column width of 1.\n *\n *    - Other format characters (general category code Cf in the Unicode\n *      database) and ZERO WIDTH SPACE (U+200B) have a column width of 0.\n *\n *    - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)\n *      have a column width of 0.\n *\n *    - Spacing characters in the East Asian Wide (W) or East Asian\n *      Full-width (F) category as defined in Unicode Technical\n *      Report #11 have a column width of 2.\n *\n *    - All remaining characters (including all printable\n *      ISO 8859-1 and WGL4 characters, Unicode control characters,\n *      etc.) have a column width of 1.\n *\n * This implementation assumes that wchar_t characters are encoded\n * in ISO 10646.\n */\nconst mk_wcwidth = (ucs) => {\n    /* test for 8-bit control characters */\n    if (ucs === 0) {\n        return 0;\n    }\n    if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) {\n        return -1;\n    }\n    /* binary search in table of non-spacing characters */\n    if (binary_search_1.default(ucs, non_spacing_chars_1.default, non_spacing_chars_1.default.length - 1)) {\n        return 0;\n    }\n    /* if we arrive here, ucs is not a combining or C0/C1 control character */\n    return (1 +\n        Number(ucs >= 0x1100 &&\n            (ucs <= 0x115f /* Hangul Jamo init. consonants */ ||\n                ucs === 0x2329 ||\n                ucs === 0x232a ||\n                (ucs >= 0x2e80 && ucs <= 0xa4cf && ucs !== 0x303f) /* CJK ... Yi */ ||\n                (ucs >= 0xac00 && ucs <= 0xd7a3) /* Hangul Syllables */ ||\n                (ucs >= 0xf900 && ucs <= 0xfaff) /* CJK Compatibility Ideographs */ ||\n                (ucs >= 0xfe10 && ucs <= 0xfe19) /* Vertical forms */ ||\n                (ucs >= 0xfe30 && ucs <= 0xfe6f) /* CJK Compatibility Forms */ ||\n                (ucs >= 0xff00 && ucs <= 0xff60) /* Fullwidth Forms */ ||\n                (ucs >= 0xffe0 && ucs <= 0xffe6) ||\n                (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n                (ucs >= 0x30000 && ucs <= 0x3fffd))));\n};\nexports.default = mk_wcwidth;\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n// This's just a mock to be included in the web version\nexport default () => {};\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TransactionResult } from './api/transaction/types';\n\nexport class ApiError extends Error {\n  constructor(\n    public message: string,\n    public status = '',\n    public details = '',\n    public response: Response,\n  ) {\n    super(message);\n\n    this.name = 'ApiError';\n  }\n\n  toString() {\n    return `${this.status}: ${this.message}\\n${this.details}`;\n  }\n}\n\nexport class TransactionError extends Error {\n  message: string;\n  result: TransactionResult;\n  response: Response;\n\n  constructor(result: TransactionResult, response: Response) {\n    const msg = 'Transaction error. See transaction result';\n\n    super(msg);\n\n    this.name = 'TransactionError';\n    this.message = msg;\n    this.response = response;\n    this.result = result;\n  }\n\n  toString() {\n    return `${this.message}:\\n ${JSON.stringify(this.result, undefined, 2)}`;\n  }\n}\n\nexport function makeError(body: any, response: Response) {\n  if (body?.type === 'TransactionResult') {\n    return new TransactionError(body, response);\n  }\n\n  return new ApiError(\n    body?.message || response.statusText || response.status,\n    body?.status || response.status,\n    body?.details,\n    response,\n  );\n}\n\nexport type SdkError = ApiError | TransactionError | Error;\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Credentials } from './credentials';\n\nexport const VERSION =\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  typeof __RAI_SDK_VERSION__ === 'undefined'\n    ? 'to-be-replaced'\n    : // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      __RAI_SDK_VERSION__; // replaced at build time\n\nexport type Config = {\n  host: string;\n  port: string;\n  scheme: string;\n  credentials: Credentials;\n};\n\nexport interface AccessTokenCache {\n  access_token: string;\n  expires_in: number;\n  created_on: number;\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport nodeFetch from 'node-fetch';\nimport { stringify } from 'query-string';\n\nimport { makeError } from './errors';\nimport { VERSION } from './types';\n\nconst isNode =\n  typeof process !== 'undefined' &&\n  process.versions != null &&\n  process.versions.node != null;\n\nexport type RequestOptions = {\n  method?: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n  headers?: Record<string, string>;\n  body?: any;\n  query?: Record<string, any>;\n  onResponse?: (r: Response) => void;\n};\n\nfunction addDefaultHeaders(headers: RequestInit['headers'], url: string) {\n  const sdkUserAgent = `rai-sdk-javascript/${VERSION}`;\n  const defaultHeaders: RequestInit['headers'] = {\n    Accept: 'application/json',\n    'Content-type': 'application/json',\n  };\n\n  if (isNode) {\n    // Only in Node because Browsers won't allow to set\n    const parsedUrl = new URL(url);\n\n    defaultHeaders['Host'] = parsedUrl.hostname;\n    defaultHeaders['User-agent'] = sdkUserAgent;\n  }\n\n  return { ...defaultHeaders, ...headers };\n}\n\nexport function makeUrl(scheme: string, host: string, port: string) {\n  scheme = scheme.replace(/[^A-Za-z]/, '');\n\n  return `${scheme}://${host}${port ? ':' + port : ''}`;\n}\n\nexport async function request<T>(url: string, options: RequestOptions = {}) {\n  const opts = {\n    method: options.method || 'GET',\n    body: JSON.stringify(options.body),\n    headers: addDefaultHeaders(options.headers, url),\n  };\n\n  if (typeof window === 'undefined') {\n    // See: https://github.com/node-fetch/node-fetch#custom-highwatermark\n    (opts as any).highWaterMark = 1024 * 1024;\n  }\n\n  const fullUrl =\n    options.query && Object.keys(options.query).length > 0\n      ? `${url}?${stringify(options.query, { arrayFormat: 'none' })}`\n      : url;\n\n  const fetch = globalThis.fetch || nodeFetch;\n\n  let response: Response;\n\n  try {\n    response = await fetch(fullUrl, opts);\n  } catch (error: any) {\n    const errorMsg = error.message.toLowerCase();\n\n    if (\n      errorMsg.includes('failed to fetch') || // Chrome\n      errorMsg.includes('networkerror when attempting to fetch resource') // Firefox\n    ) {\n      throw new Error(\n        'Request failed due to a connectivity issue. Please check your network connection.',\n      );\n    }\n\n    throw error;\n  }\n\n  const contentType = response.headers.get('content-type');\n  let responseBody;\n\n  const responseClone = response.clone();\n\n  try {\n    if (contentType && contentType.includes('application/json')) {\n      responseBody = await response.json();\n    } else if (contentType && contentType.includes('application/x-protobuf')) {\n      responseBody = await response.blob();\n    } else if (contentType?.includes('multipart/form-data') && response.body) {\n      responseBody = await parseMultipart(response);\n    } else {\n      responseBody = await response.text();\n    }\n  } catch (error: any) {\n    const err = new Error('Failed to read server response.');\n    (err as any).cause = error;\n\n    throw err;\n  }\n\n  if (options.onResponse) {\n    try {\n      options.onResponse(responseClone.clone());\n      // eslint-disable-next-line no-empty\n    } catch {}\n  }\n\n  if (response.ok) {\n    return responseBody as T;\n  }\n\n  throw makeError(responseBody, responseClone.clone());\n}\n\nasync function parseMultipart(response: Response) {\n  const formData = await response.formData();\n  const files = [];\n\n  for (const entry of formData) {\n    files.push({\n      name: entry[0],\n      file: entry[1],\n    });\n  }\n\n  return files;\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { makeUrl, request, RequestOptions } from '../rest';\nimport { Config } from '../types';\n\ntype OnResponse = RequestOptions['onResponse'];\n\nexport abstract class Base {\n  baseUrl: string;\n\n  private _onResponse?: OnResponse;\n\n  constructor(public config: Config, public region = 'us-east') {\n    this.baseUrl = makeUrl(config.scheme, config.host, config.port);\n  }\n\n  onResponse(onResponse: OnResponse) {\n    this._onResponse = onResponse;\n  }\n\n  protected async request<T>(\n    path: string,\n    options: Omit<RequestOptions, 'body'> = {},\n  ) {\n    const url = `${this.baseUrl}/${path}`;\n    const token = await this.config.credentials.getToken(url);\n    const opts: RequestOptions = {\n      ...options,\n\n      onResponse: this._onResponse,\n    };\n\n    if (token) {\n      opts.headers = {\n        ...{ authorization: `Bearer ${token}` },\n        ...opts.headers,\n      };\n    }\n\n    return await request<T>(url, opts);\n  }\n\n  protected async get<T>(path: string, query: RequestOptions['query'] = {}) {\n    return this.request<T>(path, { query, method: 'GET' });\n  }\n\n  protected async post<T>(\n    path: string,\n    options: Pick<RequestOptions, 'query' | 'body'>,\n  ) {\n    return this.request<T>(path, { method: 'POST', ...options });\n  }\n\n  protected async put<T>(\n    path: string,\n    options: Pick<RequestOptions, 'query' | 'body'>,\n  ) {\n    return this.request<T>(path, { method: 'PUT', ...options });\n  }\n\n  protected async patch<T>(\n    path: string,\n    options: Pick<RequestOptions, 'query' | 'body'>,\n  ) {\n    return this.request<T>(path, { method: 'PATCH', ...options });\n  }\n\n  protected async delete<T>(\n    path: string,\n    options: Pick<RequestOptions, 'query' | 'body'>,\n  ) {\n    return this.request<T>(path, { ...options, method: 'DELETE' });\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Base } from '../base';\nimport { Database, DatabaseOptions } from './types';\n\nconst ENDPOINT = 'database';\n\ntype ListReponse = { databases: Database[] };\ntype SingleReponse = { database: Database };\ntype DeleteResponse = {\n  name: string;\n  message: string;\n};\n\nexport class DatabaseApi extends Base {\n  async createDatabase(name: string, cloneDatabase?: string) {\n    const result = await this.put<SingleReponse>(ENDPOINT, {\n      body: {\n        name,\n        source_name: cloneDatabase,\n      },\n    });\n\n    return result.database;\n  }\n\n  async listDatabases(options?: DatabaseOptions) {\n    const result = await this.get<ListReponse>(ENDPOINT, options);\n\n    return result.databases;\n  }\n\n  async getDatabase(name: string) {\n    const databases = await this.listDatabases({ name });\n\n    return databases[0];\n  }\n\n  async deleteDatabase(name: string) {\n    const result = await this.delete<DeleteResponse>(ENDPOINT, {\n      body: { name },\n    });\n\n    return result;\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n////\n//\n// A few enums copied from `fb/Schema.ts` and `fb/Message.ts` because Webpack\n// v4 doesn't seem to be able to tree-shake the rest of those exports.\n//\n// We will have to keep these enums in sync when we re-generate the flatbuffers\n// code from the shchemas. See js/DEVELOP.md for info on how to run flatbuffers\n// code generation.\n//\n////\n/**\n * Logical types, vector layouts, and schemas\n *\n * @enum {number}\n */\nexport var MetadataVersion;\n(function (MetadataVersion) {\n    /**\n     * 0.1.0 (October 2016).\n     */\n    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n    /**\n     * 0.2.0 (February 2017). Non-backwards compatible with V1.\n     */\n    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n    /**\n     * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n     */\n    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n    /**\n     * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n     */\n    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n    /**\n     * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n     * metadata and IPC messages). Implementations are recommended to provide a\n     * V4 compatibility mode with V5 format changes disabled.\n     *\n     * Incompatible changes between V4 and V5:\n     * - Union buffer layout has changed. In V5, Unions don't have a validity\n     *   bitmap buffer.\n     */\n    MetadataVersion[MetadataVersion[\"V5\"] = 4] = \"V5\";\n})(MetadataVersion || (MetadataVersion = {}));\n/**\n * @enum {number}\n */\nexport var UnionMode;\n(function (UnionMode) {\n    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n})(UnionMode || (UnionMode = {}));\n/**\n * @enum {number}\n */\nexport var Precision;\n(function (Precision) {\n    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n})(Precision || (Precision = {}));\n/**\n * @enum {number}\n */\nexport var DateUnit;\n(function (DateUnit) {\n    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n})(DateUnit || (DateUnit = {}));\n/**\n * @enum {number}\n */\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n})(TimeUnit || (TimeUnit = {}));\n/**\n * @enum {number}\n */\nexport var IntervalUnit;\n(function (IntervalUnit) {\n    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n    IntervalUnit[IntervalUnit[\"MONTH_DAY_NANO\"] = 2] = \"MONTH_DAY_NANO\";\n})(IntervalUnit || (IntervalUnit = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport var MessageHeader;\n(function (MessageHeader) {\n    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n})(MessageHeader || (MessageHeader = {}));\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */ const undf = void (0);\n/** @ignore */\nexport function valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    if (ArrayBuffer.isView(x)) {\n        if (x instanceof BigInt64Array || x instanceof BigUint64Array) {\n            return `[${[...x].map(x => valueToString(x))}]`;\n        }\n        return `[${x}]`;\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x, (_, y) => typeof y === 'bigint' ? `${y}` : y);\n}\n\n//# sourceMappingURL=pretty.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst decoder = new TextDecoder('utf-8');\n/** @ignore */\nexport const decodeUtf8 = (buffer) => decoder.decode(buffer);\nconst encoder = new TextEncoder();\n/** @ignore */\nexport const encodeUtf8 = (value) => encoder.encode(value);\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport const isObservable = (x) => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nexport const isIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nexport const isAsyncIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nexport const isArrowJSON = (x) => {\n    return isObject(x) && isObject(x['schema']);\n};\n/** @ignore */\nexport const isArrayLike = (x) => {\n    return isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nexport const isIteratorResult = (x) => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n/** @ignore */\nexport const isUnderlyingSink = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n/** @ignore */\nexport const isFileHandle = (x) => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nexport const isFSReadStream = (x) => {\n    return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\nconst isReadableInterop = (x) => ('_getDOMStream' in x && '_getNodeStream' in x);\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !isReadableInterop(x);\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !isReadableInterop(x);\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !isReadableInterop(x);\n};\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !isReadableInterop(x);\n};\n/** @ignore */\nexport const isFlatbuffersByteBuffer = (x) => {\n    return isObject(x) &&\n        isFunction(x['clear']) &&\n        isFunction(x['bytes']) &&\n        isFunction(x['position']) &&\n        isFunction(x['setPosition']) &&\n        isFunction(x['capacity']) &&\n        isFunction(x['getBufferIdentifier']) &&\n        isFunction(x['createLong']);\n};\n\n//# sourceMappingURL=compat.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isFlatbuffersByteBuffer, BigInt64Array, BigUint64Array } from './compat.mjs';\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    const result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nexport function memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n/** @ignore */\nexport function joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    const result = collapseContiguousByteRanges(chunks);\n    const byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1;\n    const length = Math.min(size || Number.POSITIVE_INFINITY, byteLength);\n    for (const n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n/** @ignore */\nexport function toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = isIteratorResult(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = encodeUtf8(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (isFlatbuffersByteBuffer(value)) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : (value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT));\n}\n/** @ignore */ export const toInt8Array = (input) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nexport function* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !isIterable(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n    return new ArrayCtor();\n}\n/** @ignore */ export const toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport function toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    return __asyncGenerator(this, arguments, function* toArrayBufferViewAsyncIterator_1() {\n        // if a Promise, unwrap the Promise and iterate the resolved value\n        if (isPromise(source)) {\n            return yield __await(yield __await(yield* __asyncDelegator(__asyncValues(toArrayBufferViewAsyncIterator(ArrayCtor, yield __await(source))))));\n        }\n        const wrap = function (x) { return __asyncGenerator(this, arguments, function* () { yield yield __await(yield __await(x)); }); };\n        const emit = function (source) {\n            return __asyncGenerator(this, arguments, function* () {\n                yield __await(yield* __asyncDelegator(__asyncValues(pump((function* (it) {\n                    let r = null;\n                    do {\n                        r = it.next(yield r === null || r === void 0 ? void 0 : r.value);\n                    } while (!r.done);\n                })(source[Symbol.iterator]())))));\n            });\n        };\n        const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n            : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                    : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                        : isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                            : !isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                : source; // otherwise if AsyncIterable, use it\n        yield __await(// otherwise if AsyncIterable, use it\n        yield* __asyncDelegator(__asyncValues(pump((function (it) {\n            return __asyncGenerator(this, arguments, function* () {\n                let r = null;\n                do {\n                    r = yield __await(it.next(yield yield __await(toArrayBufferView(ArrayCtor, r))));\n                } while (!r.done);\n            });\n        })(buffers[Symbol.asyncIterator]())))));\n        return yield __await(new ArrayCtor());\n    });\n}\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport function rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n/** @ignore */\nexport function compareArrayLike(a, b) {\n    let i = 0;\n    const n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toArrayBufferView } from './buffer.mjs';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat.mjs';\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    // @ts-ignore\n    return bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    const { buffer, byteOffset, length, 'signed': signed } = bn;\n    const words = new BigUint64Array(buffer, byteOffset, length);\n    const negative = signed && words[words.length - 1] & (BigInt(1) << BigInt(63));\n    let number = negative ? BigInt(1) : BigInt(0);\n    let i = BigInt(0);\n    if (!negative) {\n        for (const word of words) {\n            number += word * (BigInt(1) << (BigInt(32) * i++));\n        }\n    }\n    else {\n        for (const word of words) {\n            number += ~word * (BigInt(1) << (BigInt(32) * i++));\n        }\n        number *= BigInt(-1);\n    }\n    return number;\n}\n/** @ignore */\nexport let bignumToString;\n/** @ignore */\nexport let bignumToBigInt;\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = bignumToString;\n}\nelse {\n    bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    const base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    const checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1;\n    const n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nexport class BN {\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n}\n\n//# sourceMappingURL=bn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum.mjs';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Interval; }\n    /** @nocollapse */ static isList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Dictionary; }\n    /** @nocollapse */ static isDenseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Sparse; }\n    get typeId() { return Type.NONE; }\n}\n_a = Symbol.toStringTag;\nDataType[_a] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return Type.Null; }\n}\n_b = Symbol.toStringTag;\nNull[_b] = ((proto) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\n_c = Symbol.toStringTag;\nInt_[_c] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n    get ArrayType() { return Int8Array; }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n    get ArrayType() { return Int16Array; }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n    get ArrayType() { return Int32Array; }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n    get ArrayType() { return BigInt64Array; }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n    get ArrayType() { return Uint8Array; }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n    get ArrayType() { return Uint16Array; }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n    get ArrayType() { return Uint32Array; }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n    get ArrayType() { return BigUint64Array; }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\n_d = Symbol.toStringTag;\nFloat[_d] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Binary; }\n    toString() { return `Binary`; }\n}\n_e = Symbol.toStringTag;\nBinary[_e] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Utf8; }\n    toString() { return `Utf8`; }\n}\n_f = Symbol.toStringTag;\nUtf8[_f] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Bool; }\n    toString() { return `Bool`; }\n}\n_g = Symbol.toStringTag;\nBool[_g] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision, bitWidth = 128) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\n_h = Symbol.toStringTag;\nDecimal[_h] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\n_j = Symbol.toStringTag;\nDate_[_j] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Time; }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n}\n_k = Symbol.toStringTag;\nTime_[_k] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return Type.Timestamp; }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\n_l = Symbol.toStringTag;\nTimestamp_[_l] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Interval; }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\n_m = Symbol.toStringTag;\nInterval_[_m] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\n_o = Symbol.toStringTag;\nList[_o] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    get typeId() { return Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_p = Symbol.toStringTag;\nStruct[_p] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null));\n    }\n    get typeId() { return Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\n_q = Symbol.toStringTag;\nUnion_[_q] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\n_r = Symbol.toStringTag;\nFixedSizeBinary[_r] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\n_s = Symbol.toStringTag;\nFixedSizeList[_s] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    get childType() { return this.children[0].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_t = Symbol.toStringTag;\nMap_[_t] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : (typeof id === 'number' ? id : id.low);\n    }\n    get typeId() { return Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\n_u = Symbol.toStringTag;\nDictionary[_u] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    const t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return type.bitWidth / 32;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum.mjs';\nimport { DataType, } from './type.mjs';\nexport class Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    getVisitFnByTypeId(typeId, throwIfNotFound = true) {\n        return getVisitFnByTypeId(this, typeId, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    if (typeof node === 'number') {\n        return getVisitFnByTypeId(visitor, node, throwIfNotFound);\n    }\n    if (typeof node === 'string' && (node in Type)) {\n        return getVisitFnByTypeId(visitor, Type[node], throwIfNotFound);\n    }\n    if (node && (node instanceof DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node), throwIfNotFound);\n    }\n    if ((node === null || node === void 0 ? void 0 : node.type) && (node.type instanceof DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node.type), throwIfNotFound);\n    }\n    return getVisitFnByTypeId(visitor, Type.NONE, throwIfNotFound);\n}\n/** @ignore */\nfunction getVisitFnByTypeId(visitor, dtype, throwIfNotFound = true) {\n    let fn = null;\n    switch (dtype) {\n        case Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case Type.List:\n            fn = visitor.visitList;\n            break;\n        case Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int: {\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            // @ts-ignore\n            return Type.Int;\n        }\n        case Type.Float:\n            switch (type.precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            // @ts-ignore\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            // @ts-ignore\n            return Type.Time;\n        case Type.Timestamp:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            // @ts-ignore\n            return Type.Timestamp;\n        case Type.Date:\n            switch (type.unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            // @ts-ignore\n            return Type.Date;\n        case Type.Interval:\n            switch (type.unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            // @ts-ignore\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch (type.mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            // @ts-ignore\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h) {\n    const expo = (h & 0x7C00) >> 10;\n    const sigf = (h & 0x03FF) / 1024;\n    const sign = Math.pow((-1), ((h & 0x8000) >> 15));\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? Number.NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (Math.pow(2, (expo - 15))) * (1 + sigf);\n}\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    const sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7FF00000), sigf = 0x0000;\n    if (expo >= 0x40F00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000FFFFF) >> 10;\n        }\n    }\n    else if (expo <= 0x3F000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000FFFFF);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3F000000) >> 10;\n        sigf = ((u32[1] & 0x000FFFFF) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\n\n//# sourceMappingURL=math.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { float64ToUint16 } from '../util/math.mjs';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.mjs';\n/** @ignore */\nexport class SetVisitor extends Visitor {\n}\n/** @ignore */\nfunction wrapSet(fn) {\n    return (data, _1, _2) => {\n        if (data.setValid(_1, _2 != null)) {\n            return fn(data, _1, _2);\n        }\n    };\n}\n/** @ignore */\nexport const setEpochMsToDays = (data, index, epochMs) => { data[index] = Math.trunc(epochMs / 86400000); };\n/** @ignore */\nexport const setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc(epochMs % 4294967296);\n    data[index + 1] = Math.trunc(epochMs / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc((epochMs * 1000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000) / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc((epochMs * 1000000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000000) / 4294967296);\n};\n/** @ignore */\nexport const setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    if (index + 1 < valueOffsets.length) {\n        const { [index]: x, [index + 1]: y } = valueOffsets;\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nexport const setInt = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setFloat = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setFloat16 = ({ values }, index, value) => { values[index] = float64ToUint16(value); };\n/* istanbul ignore next */\n/** @ignore */\nexport const setAnyFloat = (data, index, value) => {\n    switch (data.type.precision) {\n        case Precision.HALF:\n            return setFloat16(data, index, value);\n        case Precision.SINGLE:\n        case Precision.DOUBLE:\n            return setFloat(data, index, value);\n    }\n};\n/** @ignore */\nexport const setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nexport const setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nexport const setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\nexport const setDate = (data, index, value) => {\n    data.type.unit === DateUnit.DAY\n        ? setDateDay(data, index, value)\n        : setDateMillisecond(data, index, value);\n};\n/** @ignore */\nexport const setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nexport const setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nexport const setTimestamp = (data, index, value) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(data, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(data, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(data, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(data, index, value);\n    }\n};\n/** @ignore */\nexport const setTimeSecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setTimeMillisecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setTimeMicrosecond = ({ values }, index, value) => { values[index] = value; };\n/** @ignore */\nexport const setTimeNanosecond = ({ values }, index, value) => { values[index] = value; };\n/* istanbul ignore next */\n/** @ignore */\nexport const setTime = (data, index, value) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(data, index, value);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(data, index, value);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(data, index, value);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(data, index, value);\n    }\n};\n/** @ignore */\nexport const setDecimal = ({ values, stride }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setList = (data, index, value) => {\n    const values = data.children[0];\n    const valueOffsets = data.valueOffsets;\n    const set = instance.getVisitFn(values);\n    if (Array.isArray(value)) {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value[++idx]);\n        }\n    }\n    else {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value.get(++idx));\n        }\n    }\n};\n/** @ignore */\nconst setMap = (data, index, value) => {\n    const values = data.children[0];\n    const { valueOffsets } = data;\n    const set = instance.getVisitFn(values);\n    let { [index]: idx, [index + 1]: end } = valueOffsets;\n    const entries = value instanceof Map ? value.entries() : Object.entries(value);\n    for (const val of entries) {\n        set(values, idx, val);\n        if (++idx >= end)\n            break;\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (set, c, _, i) => c && set(c, o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (set, c, _, i) => c && set(c, o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (set, c, f, _) => c && set(c, o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (set, c, f, _) => c && set(c, o, v[f.name]);\n/** @ignore */\nconst setStruct = (data, index, value) => {\n    const childSetters = data.type.children.map((f) => instance.getVisitFn(f.type));\n    const set = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    // eslint-disable-next-line unicorn/no-array-for-each\n    data.type.children.forEach((f, i) => set(childSetters[i], data.children[i], f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (data, index, value) => {\n    data.type.mode === UnionMode.Dense ?\n        setDenseUnion(data, index, value) :\n        setSparseUnion(data, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (data, index, value) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, data.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (data, index, value) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, index, value);\n};\n/** @ignore */\nconst setDictionary = (data, index, value) => {\n    var _a;\n    (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.set(data.values[index], value);\n};\n/* istanbul ignore next */\n/** @ignore */\nexport const setIntervalValue = (data, index, value) => {\n    (data.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(data, index, value)\n        : setIntervalYearMonth(data, index, value);\n};\n/** @ignore */\nexport const setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nexport const setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nconst setFixedSizeList = (data, index, value) => {\n    const { stride } = data;\n    const child = data.children[0];\n    const set = instance.getVisitFn(child);\n    if (Array.isArray(value)) {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value[idx]);\n        }\n    }\n    else {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value.get(idx));\n        }\n    }\n};\nSetVisitor.prototype.visitBool = wrapSet(setBool);\nSetVisitor.prototype.visitInt = wrapSet(setInt);\nSetVisitor.prototype.visitInt8 = wrapSet(setInt);\nSetVisitor.prototype.visitInt16 = wrapSet(setInt);\nSetVisitor.prototype.visitInt32 = wrapSet(setInt);\nSetVisitor.prototype.visitInt64 = wrapSet(setInt);\nSetVisitor.prototype.visitUint8 = wrapSet(setInt);\nSetVisitor.prototype.visitUint16 = wrapSet(setInt);\nSetVisitor.prototype.visitUint32 = wrapSet(setInt);\nSetVisitor.prototype.visitUint64 = wrapSet(setInt);\nSetVisitor.prototype.visitFloat = wrapSet(setAnyFloat);\nSetVisitor.prototype.visitFloat16 = wrapSet(setFloat16);\nSetVisitor.prototype.visitFloat32 = wrapSet(setFloat);\nSetVisitor.prototype.visitFloat64 = wrapSet(setFloat);\nSetVisitor.prototype.visitUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitFixedSizeBinary = wrapSet(setFixedSizeBinary);\nSetVisitor.prototype.visitDate = wrapSet(setDate);\nSetVisitor.prototype.visitDateDay = wrapSet(setDateDay);\nSetVisitor.prototype.visitDateMillisecond = wrapSet(setDateMillisecond);\nSetVisitor.prototype.visitTimestamp = wrapSet(setTimestamp);\nSetVisitor.prototype.visitTimestampSecond = wrapSet(setTimestampSecond);\nSetVisitor.prototype.visitTimestampMillisecond = wrapSet(setTimestampMillisecond);\nSetVisitor.prototype.visitTimestampMicrosecond = wrapSet(setTimestampMicrosecond);\nSetVisitor.prototype.visitTimestampNanosecond = wrapSet(setTimestampNanosecond);\nSetVisitor.prototype.visitTime = wrapSet(setTime);\nSetVisitor.prototype.visitTimeSecond = wrapSet(setTimeSecond);\nSetVisitor.prototype.visitTimeMillisecond = wrapSet(setTimeMillisecond);\nSetVisitor.prototype.visitTimeMicrosecond = wrapSet(setTimeMicrosecond);\nSetVisitor.prototype.visitTimeNanosecond = wrapSet(setTimeNanosecond);\nSetVisitor.prototype.visitDecimal = wrapSet(setDecimal);\nSetVisitor.prototype.visitList = wrapSet(setList);\nSetVisitor.prototype.visitStruct = wrapSet(setStruct);\nSetVisitor.prototype.visitUnion = wrapSet(setUnion);\nSetVisitor.prototype.visitDenseUnion = wrapSet(setDenseUnion);\nSetVisitor.prototype.visitSparseUnion = wrapSet(setSparseUnion);\nSetVisitor.prototype.visitDictionary = wrapSet(setDictionary);\nSetVisitor.prototype.visitInterval = wrapSet(setIntervalValue);\nSetVisitor.prototype.visitIntervalDayTime = wrapSet(setIntervalDayTime);\nSetVisitor.prototype.visitIntervalYearMonth = wrapSet(setIntervalYearMonth);\nSetVisitor.prototype.visitFixedSizeList = wrapSet(setFixedSizeList);\nSetVisitor.prototype.visitMap = wrapSet(setMap);\n/** @ignore */\nexport const instance = new SetVisitor();\n\n//# sourceMappingURL=set.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty.mjs';\nimport { instance as getVisitor } from '../visitor/get.mjs';\nimport { instance as setVisitor } from '../visitor/set.mjs';\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\nexport class StructRow {\n    constructor(parent, rowIndex) {\n        this[kParent] = parent;\n        this[kRowIndex] = rowIndex;\n        return new Proxy(this, new StructRowProxyHandler());\n    }\n    toArray() { return Object.values(this.toJSON()); }\n    toJSON() {\n        const i = this[kRowIndex];\n        const parent = this[kParent];\n        const keys = parent.type.children;\n        const json = {};\n        for (let j = -1, n = keys.length; ++j < n;) {\n            json[keys[j].name] = getVisitor.visit(parent.children[j], i);\n        }\n        return json;\n    }\n    toString() {\n        return `{${[...this].map(([key, val]) => `${valueToString(key)}: ${valueToString(val)}`).join(', ')}}`;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n    [Symbol.iterator]() {\n        return new StructRowIterator(this[kParent], this[kRowIndex]);\n    }\n}\nclass StructRowIterator {\n    constructor(data, rowIndex) {\n        this.childIndex = 0;\n        this.children = data.children;\n        this.rowIndex = rowIndex;\n        this.childFields = data.type.children;\n        this.numChildren = this.childFields.length;\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        const i = this.childIndex;\n        if (i < this.numChildren) {\n            this.childIndex = i + 1;\n            return {\n                done: false,\n                value: [\n                    this.childFields[i].name,\n                    getVisitor.visit(this.children[i], this.rowIndex)\n                ]\n            };\n        }\n        return { done: true, value: null };\n    }\n}\nObject.defineProperties(StructRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n    [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n});\nclass StructRowProxyHandler {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row) {\n        return row[kParent].type.children.map((f) => f.name);\n    }\n    has(row, key) {\n        return row[kParent].type.children.findIndex((f) => f.name === key) !== -1;\n    }\n    getOwnPropertyDescriptor(row, key) {\n        if (row[kParent].type.children.findIndex((f) => f.name === key) !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row, key) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return row[key];\n        }\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            const val = getVisitor.visit(row[kParent].children[idx], row[kRowIndex]);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row, key, val) {\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            setVisitor.visit(row[kParent].children[idx], row[kRowIndex], val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        }\n        else if (Reflect.has(row, key) || typeof key === 'symbol') {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BN } from '../util/bn.mjs';\nimport { Vector } from '../vector.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { MapRow } from '../row/map.mjs';\nimport { StructRow } from '../row/struct.mjs';\nimport { decodeUtf8 } from '../util/utf8.mjs';\nimport { uint16ToFloat64 } from '../util/math.mjs';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.mjs';\n/** @ignore */\nexport class GetVisitor extends Visitor {\n}\n/** @ignore */\nfunction wrapGet(fn) {\n    return (data, _1) => data.getValid(_1) ? fn(data, _1) : null;\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_data, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    if (index + 1 >= valueOffsets.length) {\n        return null;\n    }\n    const x = valueOffsets[index];\n    const y = valueOffsets[index + 1];\n    return values.subarray(x, y);\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ values }, index) => values[index];\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = ({ type, values }, index) => (type.precision !== Precision.HALF ? values[index] : uint16ToFloat64(values[index]));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (data, index) => (data.type.unit === DateUnit.DAY\n    ? getDateDay(data, index)\n    : getDateMillisecond(data, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (data, index) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(data, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(data, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(data, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeMillisecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (data, index) => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(data, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(data, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(data, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values, stride }, index) => BN.decimal(values.subarray(stride * index, stride * (index + 1)));\n/** @ignore */\nconst getList = (data, index) => {\n    const { valueOffsets, stride, children } = data;\n    const { [index * stride]: begin, [index * stride + 1]: end } = valueOffsets;\n    const child = children[0];\n    const slice = child.slice(begin, end - begin);\n    return new Vector([slice]);\n};\n/** @ignore */\nconst getMap = (data, index) => {\n    const { valueOffsets, children } = data;\n    const { [index]: begin, [index + 1]: end } = valueOffsets;\n    const child = children[0];\n    return new MapRow(child.slice(begin, end - begin));\n};\n/** @ignore */\nconst getStruct = (data, index) => {\n    return new StructRow(data, index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (data, index) => {\n    return data.type.mode === UnionMode.Dense ?\n        getDenseUnion(data, index) :\n        getSparseUnion(data, index);\n};\n/** @ignore */\nconst getDenseUnion = (data, index) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return instance.visit(child, data.valueOffsets[index]);\n};\n/** @ignore */\nconst getSparseUnion = (data, index) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return instance.visit(child, index);\n};\n/** @ignore */\nconst getDictionary = (data, index) => {\n    var _a;\n    return (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.get(data.values[index]);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (data, index) => (data.type.unit === IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(data, index)\n    : getIntervalYearMonth(data, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = Math.trunc(interval / 12); /* years */\n    int32s[1] = Math.trunc(interval % 12); /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (data, index) => {\n    const { stride, children } = data;\n    const child = children[0];\n    const slice = child.slice(index * stride, stride);\n    return new Vector([slice]);\n};\nGetVisitor.prototype.visitNull = wrapGet(getNull);\nGetVisitor.prototype.visitBool = wrapGet(getBool);\nGetVisitor.prototype.visitInt = wrapGet(getInt);\nGetVisitor.prototype.visitInt8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitUint8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitFloat = wrapGet(getFloat);\nGetVisitor.prototype.visitFloat16 = wrapGet(getFloat16);\nGetVisitor.prototype.visitFloat32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitFloat64 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUtf8 = wrapGet(getUtf8);\nGetVisitor.prototype.visitBinary = wrapGet(getBinary);\nGetVisitor.prototype.visitFixedSizeBinary = wrapGet(getFixedSizeBinary);\nGetVisitor.prototype.visitDate = wrapGet(getDate);\nGetVisitor.prototype.visitDateDay = wrapGet(getDateDay);\nGetVisitor.prototype.visitDateMillisecond = wrapGet(getDateMillisecond);\nGetVisitor.prototype.visitTimestamp = wrapGet(getTimestamp);\nGetVisitor.prototype.visitTimestampSecond = wrapGet(getTimestampSecond);\nGetVisitor.prototype.visitTimestampMillisecond = wrapGet(getTimestampMillisecond);\nGetVisitor.prototype.visitTimestampMicrosecond = wrapGet(getTimestampMicrosecond);\nGetVisitor.prototype.visitTimestampNanosecond = wrapGet(getTimestampNanosecond);\nGetVisitor.prototype.visitTime = wrapGet(getTime);\nGetVisitor.prototype.visitTimeSecond = wrapGet(getTimeSecond);\nGetVisitor.prototype.visitTimeMillisecond = wrapGet(getTimeMillisecond);\nGetVisitor.prototype.visitTimeMicrosecond = wrapGet(getTimeMicrosecond);\nGetVisitor.prototype.visitTimeNanosecond = wrapGet(getTimeNanosecond);\nGetVisitor.prototype.visitDecimal = wrapGet(getDecimal);\nGetVisitor.prototype.visitList = wrapGet(getList);\nGetVisitor.prototype.visitStruct = wrapGet(getStruct);\nGetVisitor.prototype.visitUnion = wrapGet(getUnion);\nGetVisitor.prototype.visitDenseUnion = wrapGet(getDenseUnion);\nGetVisitor.prototype.visitSparseUnion = wrapGet(getSparseUnion);\nGetVisitor.prototype.visitDictionary = wrapGet(getDictionary);\nGetVisitor.prototype.visitInterval = wrapGet(getInterval);\nGetVisitor.prototype.visitIntervalDayTime = wrapGet(getIntervalDayTime);\nGetVisitor.prototype.visitIntervalYearMonth = wrapGet(getIntervalYearMonth);\nGetVisitor.prototype.visitFixedSizeList = wrapGet(getFixedSizeList);\nGetVisitor.prototype.visitMap = wrapGet(getMap);\n/** @ignore */\nexport const instance = new GetVisitor();\n\n//# sourceMappingURL=get.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector.mjs';\nimport { valueToString } from '../util/pretty.mjs';\nimport { instance as getVisitor } from '../visitor/get.mjs';\nimport { instance as setVisitor } from '../visitor/set.mjs';\n/** @ignore */ export const kKeys = Symbol.for('keys');\n/** @ignore */ export const kVals = Symbol.for('vals');\nexport class MapRow {\n    constructor(slice) {\n        this[kKeys] = new Vector([slice.children[0]]).memoize();\n        this[kVals] = slice.children[1];\n        return new Proxy(this, new MapRowProxyHandler());\n    }\n    [Symbol.iterator]() {\n        return new MapRowIterator(this[kKeys], this[kVals]);\n    }\n    get size() { return this[kKeys].length; }\n    toArray() { return Object.values(this.toJSON()); }\n    toJSON() {\n        const keys = this[kKeys];\n        const vals = this[kVals];\n        const json = {};\n        for (let i = -1, n = keys.length; ++i < n;) {\n            json[keys.get(i)] = getVisitor.visit(vals, i);\n        }\n        return json;\n    }\n    toString() {\n        return `{${[...this].map(([key, val]) => `${valueToString(key)}: ${valueToString(val)}`).join(', ')}}`;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n}\nclass MapRowIterator {\n    constructor(keys, vals) {\n        this.keys = keys;\n        this.vals = vals;\n        this.keyIndex = 0;\n        this.numKeys = keys.length;\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        const i = this.keyIndex;\n        if (i === this.numKeys) {\n            return { done: true, value: null };\n        }\n        this.keyIndex++;\n        return {\n            done: false,\n            value: [\n                this.keys.get(i),\n                getVisitor.visit(this.vals, i),\n            ]\n        };\n    }\n}\n/** @ignore */\nclass MapRowProxyHandler {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row) {\n        return row[kKeys].toArray().map(String);\n    }\n    has(row, key) {\n        return row[kKeys].includes(key);\n    }\n    getOwnPropertyDescriptor(row, key) {\n        const idx = row[kKeys].indexOf(key);\n        if (idx !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row, key) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return row[key];\n        }\n        const idx = row[kKeys].indexOf(key);\n        if (idx !== -1) {\n            const val = getVisitor.visit(Reflect.get(row, kVals), idx);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row, key, val) {\n        const idx = row[kKeys].indexOf(key);\n        if (idx !== -1) {\n            setVisitor.visit(Reflect.get(row, kVals), idx, val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        }\n        else if (Reflect.has(row, key)) {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\nObject.defineProperties(MapRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [kKeys]: { writable: true, enumerable: false, configurable: false, value: null },\n    [kVals]: { writable: true, enumerable: false, configurable: false, value: null },\n});\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector.mjs';\nimport { MapRow } from '../row/map.mjs';\nimport { StructRow } from '../row/struct.mjs';\nimport { compareArrayLike } from '../util/buffer.mjs';\n/** @ignore */\nexport function clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nexport function clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    const { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nexport function createElementComparator(search) {\n    const typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return (value) => value === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return createMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof Vector) {\n        return createVectorComparator(search);\n    }\n    return createObjectComparator(search, true);\n    // Compare non-empty Objects\n    // return createObjectComparator(search, search instanceof Proxy);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createMapComparator(lhs) {\n    let i = -1;\n    const comparators = [];\n    for (const v of lhs.values())\n        comparators[++i] = createElementComparator(v);\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs, allowEmpty = false) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (!allowEmpty && keys.length === 0) {\n        return () => false;\n    }\n    const comparators = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n                return compareObject(comparators, rhs, rhs.keys());\n            case MapRow:\n            case StructRow:\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\nfunction compareArray(comparators, arr) {\n    const n = comparators.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparators, vec) {\n    const n = comparators.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparators, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    const n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport class ChunkedIterator {\n    constructor(numChunks = 0, getChunkIterator) {\n        this.numChunks = numChunks;\n        this.getChunkIterator = getChunkIterator;\n        this.chunkIndex = 0;\n        this.chunkIterator = this.getChunkIterator(0);\n    }\n    next() {\n        while (this.chunkIndex < this.numChunks) {\n            const next = this.chunkIterator.next();\n            if (!next.done) {\n                return next;\n            }\n            if (++this.chunkIndex < this.numChunks) {\n                this.chunkIterator = this.getChunkIterator(this.chunkIndex);\n            }\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/** @ignore */\nexport function computeChunkNullCounts(chunks) {\n    return chunks.reduce((nullCount, chunk) => nullCount + chunk.nullCount, 0);\n}\n/** @ignore */\nexport function computeChunkOffsets(chunks) {\n    return chunks.reduce((offsets, chunk, index) => {\n        offsets[index + 1] = offsets[index] + chunk.length;\n        return offsets;\n    }, new Uint32Array(chunks.length + 1));\n}\n/** @ignore */\nexport function sliceChunks(chunks, offsets, begin, end) {\n    const slices = [];\n    for (let i = -1, n = chunks.length; ++i < n;) {\n        const chunk = chunks[i];\n        const offset = offsets[i];\n        const { length } = chunk;\n        // Stop if the child is to the right of the slice boundary\n        if (offset >= end) {\n            break;\n        }\n        // Exclude children to the left of of the slice boundary\n        if (begin >= offset + length) {\n            continue;\n        }\n        // Include entire child if between both left and right boundaries\n        if (offset >= begin && (offset + length) <= end) {\n            slices.push(chunk);\n            continue;\n        }\n        // Include the child slice that overlaps one of the slice boundaries\n        const from = Math.max(0, begin - offset);\n        const to = Math.min(end - offset, length);\n        slices.push(chunk.slice(from, to - from));\n    }\n    if (slices.length === 0) {\n        slices.push(chunks[0].slice(0, 0));\n    }\n    return slices;\n}\n/** @ignore */\nexport function binarySearch(chunks, offsets, idx, fn) {\n    let lhs = 0, mid = 0, rhs = offsets.length - 1;\n    do {\n        if (lhs >= rhs - 1) {\n            return (idx < offsets[rhs]) ? fn(chunks, lhs, idx - offsets[lhs]) : null;\n        }\n        mid = lhs + (Math.trunc((rhs - lhs) * .5));\n        idx < offsets[mid] ? (rhs = mid) : (lhs = mid);\n    } while (lhs < rhs);\n}\n/** @ignore */\nexport function isChunkedValid(data, index) {\n    return data.getValid(index);\n}\n/** @ignore */\nexport function wrapChunkedCall1(fn) {\n    function chunkedFn(chunks, i, j) { return fn(chunks[i], j); }\n    return function (index) {\n        const data = this.data;\n        return binarySearch(data, this._offsets, index, chunkedFn);\n    };\n}\n/** @ignore */\nexport function wrapChunkedCall2(fn) {\n    let _2;\n    function chunkedFn(chunks, i, j) { return fn(chunks[i], j, _2); }\n    return function (index, value) {\n        const data = this.data;\n        _2 = value;\n        const result = binarySearch(data, this._offsets, index, chunkedFn);\n        _2 = undefined;\n        return result;\n    };\n}\n/** @ignore */\nexport function wrapChunkedIndexOf(indexOf) {\n    let _1;\n    function chunkedIndexOf(data, chunkIndex, fromIndex) {\n        let begin = fromIndex, index = 0, total = 0;\n        for (let i = chunkIndex - 1, n = data.length; ++i < n;) {\n            const chunk = data[i];\n            if (~(index = indexOf(chunk, _1, begin))) {\n                return total + index;\n            }\n            begin = 0;\n            total += chunk.length;\n        }\n        return -1;\n    }\n    return function (element, offset) {\n        _1 = element;\n        const data = this.data;\n        const result = typeof offset !== 'number'\n            ? chunkedIndexOf(data, 0, 0)\n            : binarySearch(data, this._offsets, offset, chunkedIndexOf);\n        _1 = undefined;\n        return result;\n    };\n}\n\n//# sourceMappingURL=chunk.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(new BitIterator(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    const xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    const b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport class BitIterator {\n    constructor(bytes, begin, length, context, get) {\n        this.bytes = bytes;\n        this.length = length;\n        this.context = context;\n        this.get = get;\n        this.bit = begin % 8;\n        this.byteIndex = begin >> 3;\n        this.byte = bytes[this.byteIndex++];\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.length) {\n            if (this.bit === 8) {\n                this.bit = 0;\n                this.byte = this.bytes[this.byteIndex++];\n            }\n            return {\n                value: this.get(this.context, this.index++, this.byte, this.bit++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of new BitIterator(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = Math.trunc(byteOffset);\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = Math.trunc(uint32);\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { instance as getVisitor } from './get.mjs';\nimport { getBool, BitIterator } from '../util/bit.mjs';\nimport { createElementComparator } from '../util/vector.mjs';\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullIndexOf(data, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && data.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(data, fromIndex) {\n    const { nullBitmap } = data;\n    if (!nullBitmap || data.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of new BitIterator(nullBitmap, data.offset + (fromIndex || 0), data.length, nullBitmap, getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(data, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(data, fromIndex);\n    }\n    const get = getVisitor.getVisitFn(data);\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = data.length; ++i < n;) {\n        if (compare(get(data, i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(data, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const get = getVisitor.getVisitFn(data);\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = data.length; ++i < n;) {\n        if (compare(get(data, i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\nimport { Type, Precision } from '../enum.mjs';\nimport { Float, Int, Time, } from '../type.mjs';\nimport { ChunkedIterator } from '../util/chunk.mjs';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    const { type } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.nullCount === 0 && vector.stride === 1 && ((type.typeId === Type.Timestamp) ||\n        (type instanceof Int && type.bitWidth !== 64) ||\n        (type instanceof Time && type.bitWidth !== 64) ||\n        (type instanceof Float && type.precision !== Precision.HALF))) {\n        return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n            const data = vector.data[chunkIndex];\n            return data.values.subarray(0, data.length)[Symbol.iterator]();\n        });\n    }\n    // Otherwise, iterate manually\n    let offset = 0;\n    return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n        const data = vector.data[chunkIndex];\n        const length = data.length;\n        const inner = vector.slice(offset, offset + length);\n        offset += length;\n        return new VectorIterator(inner);\n    });\n}\n/** @ignore */\nclass VectorIterator {\n    constructor(vector) {\n        this.vector = vector;\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.vector.length) {\n            return {\n                value: this.vector.get(this.index++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n","/* istanbul ignore file */\nimport { Visitor } from '../visitor.mjs';\nimport { TimeUnit, UnionMode } from '../enum.mjs';\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */\nexport class GetByteLengthVisitor extends Visitor {\n    visitNull(____, _) {\n        return 0;\n    }\n    visitInt(data, _) {\n        return data.type.bitWidth / 8;\n    }\n    visitFloat(data, _) {\n        return data.type.ArrayType.BYTES_PER_ELEMENT;\n    }\n    visitBool(____, _) {\n        return 1 / 8;\n    }\n    visitDecimal(data, _) {\n        return data.type.bitWidth / 8;\n    }\n    visitDate(data, _) {\n        return (data.type.unit + 1) * 4;\n    }\n    visitTime(data, _) {\n        return data.type.bitWidth / 8;\n    }\n    visitTimestamp(data, _) {\n        return data.type.unit === TimeUnit.SECOND ? 4 : 8;\n    }\n    visitInterval(data, _) {\n        return (data.type.unit + 1) * 4;\n    }\n    visitStruct(data, i) {\n        return data.children.reduce((total, child) => total + instance.visit(child, i), 0);\n    }\n    visitFixedSizeBinary(data, _) {\n        return data.type.byteWidth;\n    }\n    visitMap(data, i) {\n        // 4 + 4 for the indices\n        return 8 + data.children.reduce((total, child) => total + instance.visit(child, i), 0);\n    }\n    visitDictionary(data, i) {\n        var _a;\n        return (data.type.indices.bitWidth / 8) + (((_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.getByteLength(data.values[i])) || 0);\n    }\n}\n/** @ignore */\nconst getUtf8ByteLength = ({ valueOffsets }, index) => {\n    // 4 + 4 for the indices, `end - start` for the data bytes\n    return 8 + (valueOffsets[index + 1] - valueOffsets[index]);\n};\n/** @ignore */\nconst getBinaryByteLength = ({ valueOffsets }, index) => {\n    // 4 + 4 for the indices, `end - start` for the data bytes\n    return 8 + (valueOffsets[index + 1] - valueOffsets[index]);\n};\n/** @ignore */\nconst getListByteLength = ({ valueOffsets, stride, children }, index) => {\n    const child = children[0];\n    const { [index * stride]: start } = valueOffsets;\n    const { [index * stride + 1]: end } = valueOffsets;\n    const visit = instance.getVisitFn(child.type);\n    const slice = child.slice(start, end - start);\n    let size = 8; // 4 + 4 for the indices\n    for (let idx = -1, len = end - start; ++idx < len;) {\n        size += visit(slice, idx);\n    }\n    return size;\n};\n/** @ignore */\nconst getFixedSizeListByteLength = ({ stride, children }, index) => {\n    const child = children[0];\n    const slice = child.slice(index * stride, stride);\n    const visit = instance.getVisitFn(child.type);\n    let size = 0;\n    for (let idx = -1, len = slice.length; ++idx < len;) {\n        size += visit(slice, idx);\n    }\n    return size;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnionByteLength = (data, index) => {\n    return data.type.mode === UnionMode.Dense ?\n        getDenseUnionByteLength(data, index) :\n        getSparseUnionByteLength(data, index);\n};\n/** @ignore */\nconst getDenseUnionByteLength = ({ type, children, typeIds, valueOffsets }, index) => {\n    const childIndex = type.typeIdToChildIndex[typeIds[index]];\n    // 4 for the typeId, 4 for the valueOffsets, then the child at the offset\n    return 8 + instance.visit(children[childIndex], valueOffsets[index]);\n};\n/** @ignore */\nconst getSparseUnionByteLength = ({ children }, index) => {\n    // 4 for the typeId, then once each for the children at this index\n    return 4 + instance.visitMany(children, children.map(() => index)).reduce(sum, 0);\n};\nGetByteLengthVisitor.prototype.visitUtf8 = getUtf8ByteLength;\nGetByteLengthVisitor.prototype.visitBinary = getBinaryByteLength;\nGetByteLengthVisitor.prototype.visitList = getListByteLength;\nGetByteLengthVisitor.prototype.visitFixedSizeList = getFixedSizeListByteLength;\nGetByteLengthVisitor.prototype.visitUnion = getUnionByteLength;\nGetByteLengthVisitor.prototype.visitDenseUnion = getDenseUnionByteLength;\nGetByteLengthVisitor.prototype.visitSparseUnion = getSparseUnionByteLength;\n/** @ignore */\nexport const instance = new GetByteLengthVisitor();\n\n//# sourceMappingURL=bytelength.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a;\nimport { Type } from './enum.mjs';\nimport { clampRange } from './util/vector.mjs';\nimport { DataType, strideForType } from './type.mjs';\nimport { Data, makeData } from './data.mjs';\nimport { isChunkedValid, computeChunkOffsets, computeChunkNullCounts, sliceChunks, wrapChunkedCall1, wrapChunkedCall2, wrapChunkedIndexOf, } from './util/chunk.mjs';\nimport { instance as getVisitor } from './visitor/get.mjs';\nimport { instance as setVisitor } from './visitor/set.mjs';\nimport { instance as indexOfVisitor } from './visitor/indexof.mjs';\nimport { instance as iteratorVisitor } from './visitor/iterator.mjs';\nimport { instance as byteLengthVisitor } from './visitor/bytelength.mjs';\nconst visitorsByTypeId = {};\nconst vectorPrototypesByTypeId = {};\n/**\n * Array-like data structure. Use the convenience method {@link makeVector} and {@link vectorFromArray} to create vectors.\n */\nexport class Vector {\n    constructor(input) {\n        var _b, _c, _d;\n        const data = input[0] instanceof Vector\n            ? input.flatMap(x => x.data)\n            : input;\n        if (data.some((x) => !(x instanceof Data))) {\n            throw new TypeError('Vector constructor expects an Array of Data instances.');\n        }\n        const type = (_b = data[0]) === null || _b === void 0 ? void 0 : _b.type;\n        switch (data.length) {\n            case 0:\n                this._offsets = [0];\n                break;\n            case 1: {\n                // special case for unchunked vectors\n                const { get, set, indexOf, byteLength } = visitorsByTypeId[type.typeId];\n                const unchunkedData = data[0];\n                this.isValid = (index) => isChunkedValid(unchunkedData, index);\n                this.get = (index) => get(unchunkedData, index);\n                this.set = (index, value) => set(unchunkedData, index, value);\n                this.indexOf = (index) => indexOf(unchunkedData, index);\n                this.getByteLength = (index) => byteLength(unchunkedData, index);\n                this._offsets = [0, unchunkedData.length];\n                break;\n            }\n            default:\n                Object.setPrototypeOf(this, vectorPrototypesByTypeId[type.typeId]);\n                this._offsets = computeChunkOffsets(data);\n                break;\n        }\n        this.data = data;\n        this.type = type;\n        this.stride = strideForType(type);\n        this.numChildren = (_d = (_c = type.children) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0;\n        this.length = this._offsets[this._offsets.length - 1];\n    }\n    /**\n     * The aggregate size (in bytes) of this Vector's buffers and/or child Vectors.\n     */\n    get byteLength() {\n        if (this._byteLength === -1) {\n            this._byteLength = this.data.reduce((byteLength, data) => byteLength + data.byteLength, 0);\n        }\n        return this._byteLength;\n    }\n    /**\n     * The number of null elements in this Vector.\n     */\n    get nullCount() {\n        if (this._nullCount === -1) {\n            this._nullCount = computeChunkNullCounts(this.data);\n        }\n        return this._nullCount;\n    }\n    /**\n     * The Array or TypedAray constructor used for the JS representation\n     *  of the element's values in {@link Vector.prototype.toArray `toArray()`}.\n     */\n    get ArrayType() { return this.type.ArrayType; }\n    /**\n     * The name that should be printed when the Vector is logged in a message.\n     */\n    get [Symbol.toStringTag]() {\n        return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`;\n    }\n    /**\n     * The name of this Vector.\n     */\n    get VectorName() { return `${Type[this.type.typeId]}Vector`; }\n    /**\n     * Check whether an element is null.\n     * @param index The index at which to read the validity bitmap.\n     */\n    // @ts-ignore\n    isValid(index) { return false; }\n    /**\n     * Get an element value by position.\n     * @param index The index of the element to read.\n     */\n    // @ts-ignore\n    get(index) { return null; }\n    /**\n     * Set an element value by position.\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    // @ts-ignore\n    set(index, value) { return; }\n    /**\n     * Retrieve the index of the first occurrence of a value in an Vector.\n     * @param element The value to locate in the Vector.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    // @ts-ignore\n    indexOf(element, offset) { return -1; }\n    includes(element, offset) { return this.indexOf(element, offset) > 0; }\n    /**\n     * Get the size in bytes of an element by index.\n     * @param index The index at which to get the byteLength.\n     */\n    // @ts-ignore\n    getByteLength(index) { return 0; }\n    /**\n     * Iterator for the Vector's elements.\n     */\n    [Symbol.iterator]() {\n        return iteratorVisitor.visit(this);\n    }\n    /**\n     * Combines two or more Vectors of the same type.\n     * @param others Additional Vectors to add to the end of this Vector.\n     */\n    concat(...others) {\n        return new Vector(this.data.concat(others.flatMap((x) => x.data).flat(Number.POSITIVE_INFINITY)));\n    }\n    /**\n     * Return a zero-copy sub-section of this Vector.\n     * @param start The beginning of the specified portion of the Vector.\n     * @param end The end of the specified portion of the Vector. This is exclusive of the element at the index 'end'.\n     */\n    slice(begin, end) {\n        return new Vector(clampRange(this, begin, end, ({ data, _offsets }, begin, end) => sliceChunks(data, _offsets, begin, end)));\n    }\n    toJSON() { return [...this]; }\n    /**\n     * Return a JavaScript Array or TypedArray of the Vector's elements.\n     *\n     * @note If this Vector contains a single Data chunk and the Vector's type is a\n     *  primitive numeric type corresponding to one of the JavaScript TypedArrays, this\n     *  method returns a zero-copy slice of the underlying TypedArray values. If there's\n     *  more than one chunk, the resulting TypedArray will be a copy of the data from each\n     *  chunk's underlying TypedArray values.\n     *\n     * @returns An Array or TypedArray of the Vector's elements, based on the Vector's DataType.\n     */\n    toArray() {\n        const { type, data, length, stride, ArrayType } = this;\n        // Fast case, return subarray if possible\n        switch (type.typeId) {\n            case Type.Int:\n            case Type.Float:\n            case Type.Decimal:\n            case Type.Time:\n            case Type.Timestamp:\n                switch (data.length) {\n                    case 0: return new ArrayType();\n                    case 1: return data[0].values.subarray(0, length * stride);\n                    default: return data.reduce((memo, { values }) => {\n                        memo.array.set(values, memo.offset);\n                        memo.offset += values.length;\n                        return memo;\n                    }, { array: new ArrayType(length * stride), offset: 0 }).array;\n                }\n        }\n        // Otherwise if not primitive, slow copy\n        return [...this];\n    }\n    /**\n     * Returns a string representation of the Vector.\n     *\n     * @returns A string representation of the Vector.\n     */\n    toString() {\n        return `[${[...this].join(',')}]`;\n    }\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     * @param name The name of the child to retrieve.\n     */\n    getChild(name) {\n        var _b;\n        return this.getChildAt((_b = this.type.children) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name));\n    }\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     * @param index The index of the child to retrieve.\n     */\n    getChildAt(index) {\n        if (index > -1 && index < this.numChildren) {\n            return new Vector(this.data.map(({ children }) => children[index]));\n        }\n        return null;\n    }\n    get isMemoized() {\n        if (DataType.isDictionary(this.type)) {\n            return this.data[0].dictionary.isMemoized;\n        }\n        return false;\n    }\n    /**\n     * Adds memoization to the Vector's {@link get} method. For dictionary\n     * vectors, this method return a vector that memoizes only the dictionary\n     * values.\n     *\n     * Memoization is very useful when decoding a value is expensive such as\n     * Uft8. The memoization creates a cache of the size of the Vector and\n     * therfore increases memory usage.\n     *\n     * @returns A new vector that memoizes calls to {@link get}.\n     */\n    memoize() {\n        if (DataType.isDictionary(this.type)) {\n            const dictionary = new MemoizedVector(this.data[0].dictionary);\n            const newData = this.data.map((data) => {\n                const cloned = data.clone();\n                cloned.dictionary = dictionary;\n                return cloned;\n            });\n            return new Vector(newData);\n        }\n        return new MemoizedVector(this);\n    }\n    /**\n     * Returns a vector without memoization of the {@link get} method. If this\n     * vector is not memoized, this method returns this vector.\n     *\n     * @returns A a vector without memoization.\n     */\n    unmemoize() {\n        if (DataType.isDictionary(this.type) && this.isMemoized) {\n            const dictionary = this.data[0].dictionary.unmemoize();\n            const newData = this.data.map((data) => {\n                const newData = data.clone();\n                newData.dictionary = dictionary;\n                return newData;\n            });\n            return new Vector(newData);\n        }\n        return this;\n    }\n}\n_a = Symbol.toStringTag;\n// Initialize this static property via an IIFE so bundlers don't tree-shake\n// out this logic, but also so we're still compliant with `\"sideEffects\": false`\nVector[_a] = ((proto) => {\n    proto.type = DataType.prototype;\n    proto.data = [];\n    proto.length = 0;\n    proto.stride = 1;\n    proto.numChildren = 0;\n    proto._nullCount = -1;\n    proto._byteLength = -1;\n    proto._offsets = new Uint32Array([0]);\n    proto[Symbol.isConcatSpreadable] = true;\n    const typeIds = Object.keys(Type)\n        .map((T) => Type[T])\n        .filter((T) => typeof T === 'number' && T !== Type.NONE);\n    for (const typeId of typeIds) {\n        const get = getVisitor.getVisitFnByTypeId(typeId);\n        const set = setVisitor.getVisitFnByTypeId(typeId);\n        const indexOf = indexOfVisitor.getVisitFnByTypeId(typeId);\n        const byteLength = byteLengthVisitor.getVisitFnByTypeId(typeId);\n        visitorsByTypeId[typeId] = { get, set, indexOf, byteLength };\n        vectorPrototypesByTypeId[typeId] = Object.create(proto, {\n            ['isValid']: { value: wrapChunkedCall1(isChunkedValid) },\n            ['get']: { value: wrapChunkedCall1(getVisitor.getVisitFnByTypeId(typeId)) },\n            ['set']: { value: wrapChunkedCall2(setVisitor.getVisitFnByTypeId(typeId)) },\n            ['indexOf']: { value: wrapChunkedIndexOf(indexOfVisitor.getVisitFnByTypeId(typeId)) },\n            ['getByteLength']: { value: wrapChunkedCall1(byteLengthVisitor.getVisitFnByTypeId(typeId)) },\n        });\n    }\n    return 'Vector';\n})(Vector.prototype);\nclass MemoizedVector extends Vector {\n    constructor(vector) {\n        super(vector.data);\n        const get = this.get;\n        const set = this.set;\n        const slice = this.slice;\n        const cache = new Array(this.length);\n        Object.defineProperty(this, 'get', {\n            value(index) {\n                const cachedValue = cache[index];\n                if (cachedValue !== undefined) {\n                    return cachedValue;\n                }\n                const value = get.call(this, index);\n                cache[index] = value;\n                return value;\n            }\n        });\n        Object.defineProperty(this, 'set', {\n            value(index, value) {\n                set.call(this, index, value);\n                cache[index] = value;\n            }\n        });\n        Object.defineProperty(this, 'slice', {\n            value: (begin, end) => new MemoizedVector(slice.call(this, begin, end))\n        });\n        Object.defineProperty(this, 'isMemoized', { value: true });\n        Object.defineProperty(this, 'unmemoize', {\n            value: () => new Vector(this.data)\n        });\n        Object.defineProperty(this, 'memoize', {\n            value: () => this\n        });\n    }\n}\nimport * as dtypes from './type.mjs';\nexport function makeVector(init) {\n    if (init) {\n        if (init instanceof Data) {\n            return new Vector([init]);\n        }\n        if (init instanceof Vector) {\n            return new Vector(init.data);\n        }\n        if (init.type instanceof DataType) {\n            return new Vector([makeData(init)]);\n        }\n        if (Array.isArray(init)) {\n            return new Vector(init.flatMap(v => unwrapInputs(v)));\n        }\n        if (ArrayBuffer.isView(init)) {\n            if (init instanceof DataView) {\n                init = new Uint8Array(init.buffer);\n            }\n            const props = { offset: 0, length: init.length, nullCount: 0, data: init };\n            if (init instanceof Int8Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Int8 }))]);\n            }\n            if (init instanceof Int16Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Int16 }))]);\n            }\n            if (init instanceof Int32Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Int32 }))]);\n            }\n            if (init instanceof BigInt64Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Int64 }))]);\n            }\n            if (init instanceof Uint8Array || init instanceof Uint8ClampedArray) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Uint8 }))]);\n            }\n            if (init instanceof Uint16Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Uint16 }))]);\n            }\n            if (init instanceof Uint32Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Uint32 }))]);\n            }\n            if (init instanceof BigUint64Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Uint64 }))]);\n            }\n            if (init instanceof Float32Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Float32 }))]);\n            }\n            if (init instanceof Float64Array) {\n                return new Vector([makeData(Object.assign(Object.assign({}, props), { type: new dtypes.Float64 }))]);\n            }\n            throw new Error('Unrecognized input');\n        }\n    }\n    throw new Error('Unrecognized input');\n}\nfunction unwrapInputs(x) {\n    return x instanceof Data ? [x] : (x instanceof Vector ? x.data : makeVector(x).data);\n}\n\n//# sourceMappingURL=vector.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector.mjs';\nimport { BufferType, Type } from './enum.mjs';\nimport { DataType, strideForType } from './type.mjs';\nimport { popcnt_bit_range, truncateBitmap } from './util/bit.mjs';\n/** @ignore */ export const kUnknownNullCount = -1;\n/**\n * Data structure underlying {@link Vector}s. Use the convenience method {@link makeData}.\n */\nexport class Data {\n    constructor(type, offset, length, nullCount, buffers, children = [], dictionary) {\n        this.type = type;\n        this.children = children;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n        this.nullable = this._nullCount !== 0 && this.nullBitmap && this.nullBitmap.byteLength > 0;\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        const { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.children.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    getValid(index) {\n        if (this.nullable && this.nullCount > 0) {\n            const pos = this.offset + index;\n            const val = this.nullBitmap[pos >> 3];\n            return (val & (1 << (pos % 8))) !== 0;\n        }\n        return true;\n    }\n    setValid(index, value) {\n        // Don't interact w/ nullBitmap if not nullable\n        if (!this.nullable) {\n            return value;\n        }\n        // If no null bitmap, initialize one on the fly\n        if (!this.nullBitmap || this.nullBitmap.byteLength <= (index >> 3)) {\n            const { nullBitmap } = this._changeLengthAndBackfillNullBitmap(this.length);\n            Object.assign(this, { nullBitmap, _nullCount: 0 });\n        }\n        const { nullBitmap, offset } = this;\n        const pos = (offset + index) >> 3;\n        const bit = (offset + index) % 8;\n        const val = (nullBitmap[pos] >> bit) & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `_nullCount`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `_nullCount`.\n        value ? val === 0 && ((nullBitmap[pos] |= (1 << bit)), (this._nullCount = this.nullCount + 1))\n            : val === 1 && ((nullBitmap[pos] &= ~(1 << bit)), (this._nullCount = this.nullCount - 1));\n        return value;\n    }\n    clone(type = this.type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, children = this.children) {\n        return new Data(type, offset, length, nullCount, buffers, children, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, children } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (children.length === 0 || this.valueOffsets) ? children : this._sliceChildren(children, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr;\n        const { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(children, offset, length) {\n        return children.map((child) => child.slice(offset, length));\n    }\n}\nData.prototype.children = Object.freeze([]);\nimport { Visitor } from './visitor.mjs';\nimport { toArrayBufferView, toInt32Array, toUint8Array } from './util/buffer.mjs';\nclass MakeDataVisitor extends Visitor {\n    visit(props) {\n        return this.getVisitFn(props['type']).call(this, props);\n    }\n    visitNull(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['length']: length = 0, } = props;\n        return new Data(type, offset, length, 0);\n    }\n    visitBool(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length >> 3, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitInt(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFloat(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitUtf8(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitFixedSizeBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDate(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTimestamp(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTime(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDecimal(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n    visitStruct(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { length = children.reduce((len, { length }) => Math.max(len, length), 0), nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], children);\n    }\n    visitUnion(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const typeIds = toArrayBufferView(type.ArrayType, props['typeIds']);\n        const { ['length']: length = typeIds.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        if (DataType.isSparseUnion(type)) {\n            return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap, typeIds], children);\n        }\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap, typeIds], children);\n    }\n    visitDictionary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.indices.ArrayType, props['data']);\n        const { ['dictionary']: dictionary = new Vector([new MakeDataVisitor().visit({ type: type.dictionary })]) } = props;\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap], [], dictionary);\n    }\n    visitInterval(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFixedSizeList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.valueType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { ['length']: length = child.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], [child]);\n    }\n    visitMap(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.childType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n}\nexport function makeData(props) {\n    return new MakeDataVisitor().visit(props);\n}\n\n//# sourceMappingURL=data.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DataType } from './type.mjs';\nexport class Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    get names() { return this.fields.map((f) => f.name); }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    /**\n     * Construct a new Schema containing only specified fields.\n     *\n     * @param fieldNames Names of fields to keep.\n     * @returns A new Schema of fields matching the specified names.\n     */\n    select(fieldNames) {\n        const names = new Set(fieldNames);\n        const fields = this.fields.filter((f) => names.has(f.name));\n        return new Schema(fields, this.metadata);\n    }\n    /**\n     * Construct a new Schema containing only fields at the specified indices.\n     *\n     * @param fieldIndices Indices of fields to keep.\n     * @returns A new Schema of fields at the specified indices.\n     */\n    selectAt(fieldIndices) {\n        const fields = fieldIndices.map((i) => this.fields[i]).filter(Boolean);\n        return new Schema(fields, this.metadata);\n    }\n    assign(...args) {\n        const other = (args[0] instanceof Schema\n            ? args[0]\n            : Array.isArray(args[0])\n                ? new Schema(args[0])\n                : new Schema(args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nexport class Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n\n//# sourceMappingURL=schema.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor.mjs';\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            this.compareManyFields(schema.fields, other.fields));\n    }\n    compareManyFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => this.compareFields(f, others[i])));\n    }\n    compareFields(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            this.visit(field.type, other.type));\n    }\n}\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareManyFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexport const instance = new TypeComparator();\nexport function compareSchemas(schema, other) {\n    return instance.compareSchemas(schema, other);\n}\nexport function compareFields(field, other) {\n    return instance.compareFields(field, other);\n}\nexport function compareTypes(type, other) {\n    return instance.visit(type, other);\n}\n\n//# sourceMappingURL=typecomparator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a;\nimport { Data, makeData } from './data.mjs';\nimport { Table } from './table.mjs';\nimport { Vector } from './vector.mjs';\nimport { Schema, Field } from './schema.mjs';\nimport { DataType, Struct, Null } from './type.mjs';\nimport { instance as getVisitor } from './visitor/get.mjs';\nimport { instance as setVisitor } from './visitor/set.mjs';\nimport { instance as indexOfVisitor } from './visitor/indexof.mjs';\nimport { instance as iteratorVisitor } from './visitor/iterator.mjs';\nimport { instance as byteLengthVisitor } from './visitor/bytelength.mjs';\n/** @ignore */\nexport class RecordBatch {\n    constructor(...args) {\n        switch (args.length) {\n            case 2: {\n                [this.schema] = args;\n                if (!(this.schema instanceof Schema)) {\n                    throw new TypeError('RecordBatch constructor expects a [Schema, Data] pair.');\n                }\n                [,\n                    this.data = makeData({\n                        nullCount: 0,\n                        type: new Struct(this.schema.fields),\n                        children: this.schema.fields.map((f) => makeData({ type: f.type, nullCount: 0 }))\n                    })\n                ] = args;\n                if (!(this.data instanceof Data)) {\n                    throw new TypeError('RecordBatch constructor expects a [Schema, Data] pair.');\n                }\n                [this.schema, this.data] = ensureSameLengthData(this.schema, this.data.children);\n                break;\n            }\n            case 1: {\n                const [obj] = args;\n                const { fields, children, length } = Object.keys(obj).reduce((memo, name, i) => {\n                    memo.children[i] = obj[name];\n                    memo.length = Math.max(memo.length, obj[name].length);\n                    memo.fields[i] = Field.new({ name, type: obj[name].type, nullable: true });\n                    return memo;\n                }, {\n                    length: 0,\n                    fields: new Array(),\n                    children: new Array(),\n                });\n                const schema = new Schema(fields);\n                const data = makeData({ type: new Struct(fields), length, children, nullCount: 0 });\n                [this.schema, this.data] = ensureSameLengthData(schema, data.children, length);\n                break;\n            }\n            default: throw new TypeError('RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.');\n        }\n    }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = collectDictionaries(this.schema.fields, this.data.children));\n    }\n    /**\n     * The number of columns in this RecordBatch.\n     */\n    get numCols() { return this.schema.fields.length; }\n    /**\n     * The number of rows in this RecordBatch.\n     */\n    get numRows() { return this.data.length; }\n    /**\n     * The number of null rows in this RecordBatch.\n     */\n    get nullCount() {\n        return this.data.nullCount;\n    }\n    /**\n     * Check whether an element is null.\n     * @param index The index at which to read the validity bitmap.\n     */\n    isValid(index) {\n        return this.data.getValid(index);\n    }\n    /**\n     * Get a row by position.\n     * @param index The index of the element to read.\n     */\n    get(index) {\n        return getVisitor.visit(this.data, index);\n    }\n    /**\n     * Set a row by position.\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    set(index, value) {\n        return setVisitor.visit(this.data, index, value);\n    }\n    /**\n     * Retrieve the index of the first occurrence of a row in an RecordBatch.\n     * @param element The row to locate in the RecordBatch.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    indexOf(element, offset) {\n        return indexOfVisitor.visit(this.data, element, offset);\n    }\n    /**\n     * Get the size (in bytes) of a row by index.\n     * @param index The row index for which to compute the byteLength.\n     */\n    getByteLength(index) {\n        return byteLengthVisitor.visit(this.data, index);\n    }\n    /**\n     * Iterator for rows in this RecordBatch.\n     */\n    [Symbol.iterator]() {\n        return iteratorVisitor.visit(new Vector([this.data]));\n    }\n    /**\n     * Return a JavaScript Array of the RecordBatch rows.\n     * @returns An Array of RecordBatch rows.\n     */\n    toArray() {\n        return [...this];\n    }\n    /**\n     * Combines two or more RecordBatch of the same schema.\n     * @param others Additional RecordBatch to add to the end of this RecordBatch.\n     */\n    concat(...others) {\n        return new Table(this.schema, [this, ...others]);\n    }\n    /**\n     * Return a zero-copy sub-section of this RecordBatch.\n     * @param start The beginning of the specified portion of the RecordBatch.\n     * @param end The end of the specified portion of the RecordBatch. This is exclusive of the element at the index 'end'.\n     */\n    slice(begin, end) {\n        const [slice] = new Vector([this.data]).slice(begin, end).data;\n        return new RecordBatch(this.schema, slice);\n    }\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     * @param name The name of the child to retrieve.\n     */\n    getChild(name) {\n        var _b;\n        return this.getChildAt((_b = this.schema.fields) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name));\n    }\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     * @param index The index of the child to retrieve.\n     */\n    getChildAt(index) {\n        if (index > -1 && index < this.schema.fields.length) {\n            return new Vector([this.data.children[index]]);\n        }\n        return null;\n    }\n    /**\n     * Sets a child Vector by name.\n     * @param name The name of the child to overwrite.\n     * @returns A new RecordBatch with the new child for the specified name.\n     */\n    setChild(name, child) {\n        var _b;\n        return this.setChildAt((_b = this.schema.fields) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name), child);\n    }\n    setChildAt(index, child) {\n        let schema = this.schema;\n        let data = this.data;\n        if (index > -1 && index < this.numCols) {\n            if (!child) {\n                child = new Vector([makeData({ type: new Null, length: this.numRows })]);\n            }\n            const fields = schema.fields.slice();\n            const children = data.children.slice();\n            const field = fields[index].clone({ type: child.type });\n            [fields[index], children[index]] = [field, child.data[0]];\n            schema = new Schema(fields, new Map(this.schema.metadata));\n            data = makeData({ type: new Struct(fields), children });\n        }\n        return new RecordBatch(schema, data);\n    }\n    /**\n     * Construct a new RecordBatch containing only specified columns.\n     *\n     * @param columnNames Names of columns to keep.\n     * @returns A new RecordBatch of columns matching the specified names.\n     */\n    select(columnNames) {\n        const schema = this.schema.select(columnNames);\n        const type = new Struct(schema.fields);\n        const children = [];\n        for (const name of columnNames) {\n            const index = this.schema.fields.findIndex((f) => f.name === name);\n            if (~index) {\n                children[index] = this.data.children[index];\n            }\n        }\n        return new RecordBatch(schema, makeData({ type, length: this.numRows, children }));\n    }\n    /**\n     * Construct a new RecordBatch containing only columns at the specified indices.\n     *\n     * @param columnIndices Indices of columns to keep.\n     * @returns A new RecordBatch of columns matching at the specified indices.\n     */\n    selectAt(columnIndices) {\n        const schema = this.schema.selectAt(columnIndices);\n        const children = columnIndices.map((i) => this.data.children[i]).filter(Boolean);\n        const subset = makeData({ type: new Struct(schema.fields), length: this.numRows, children });\n        return new RecordBatch(schema, subset);\n    }\n}\n_a = Symbol.toStringTag;\n// Initialize this static property via an IIFE so bundlers don't tree-shake\n// out this logic, but also so we're still compliant with `\"sideEffects\": false`\nRecordBatch[_a] = ((proto) => {\n    proto._nullCount = -1;\n    proto[Symbol.isConcatSpreadable] = true;\n    return 'RecordBatch';\n})(RecordBatch.prototype);\n/** @ignore */\nfunction ensureSameLengthData(schema, chunks, maxLength = chunks.reduce((max, col) => Math.max(max, col.length), 0)) {\n    var _b;\n    const fields = [...schema.fields];\n    const children = [...chunks];\n    const nullBitmapSize = ((maxLength + 63) & ~63) >> 3;\n    for (const [idx, field] of schema.fields.entries()) {\n        const chunk = chunks[idx];\n        if (!chunk || chunk.length !== maxLength) {\n            fields[idx] = field.clone({ nullable: true });\n            children[idx] = (_b = chunk === null || chunk === void 0 ? void 0 : chunk._changeLengthAndBackfillNullBitmap(maxLength)) !== null && _b !== void 0 ? _b : makeData({\n                type: field.type,\n                length: maxLength,\n                nullCount: maxLength,\n                nullBitmap: new Uint8Array(nullBitmapSize)\n            });\n        }\n    }\n    return [\n        schema.assign(fields),\n        makeData({ type: new Struct(fields), length: maxLength, children })\n    ];\n}\n/** @ignore */\nfunction collectDictionaries(fields, children, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        const data = children[i];\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                if (data.dictionary) {\n                    dictionaries.set(type.id, data.dictionary);\n                }\n            }\n            else if (dictionaries.get(type.id) !== data.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            collectDictionaries(type.children, data.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\nexport class _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        const children = schema.fields.map((f) => makeData({ type: f.type }));\n        const data = makeData({ type: new Struct(schema.fields), nullCount: 0, children });\n        super(schema, data);\n    }\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a;\nimport { Type } from './enum.mjs';\nimport { Data, makeData } from './data.mjs';\nimport { vectorFromArray } from './factories.mjs';\nimport { makeVector, Vector } from './vector.mjs';\nimport { Field, Schema } from './schema.mjs';\nimport { Null, Struct } from './type.mjs';\nimport { compareSchemas } from './visitor/typecomparator.mjs';\nimport { distributeVectorsIntoRecordBatches } from './util/recordbatch.mjs';\nimport { isChunkedValid, computeChunkOffsets, computeChunkNullCounts, wrapChunkedCall1, wrapChunkedCall2, wrapChunkedIndexOf, sliceChunks, } from './util/chunk.mjs';\nimport { instance as getVisitor } from './visitor/get.mjs';\nimport { instance as setVisitor } from './visitor/set.mjs';\nimport { instance as indexOfVisitor } from './visitor/indexof.mjs';\nimport { instance as iteratorVisitor } from './visitor/iterator.mjs';\nimport { instance as byteLengthVisitor } from './visitor/bytelength.mjs';\nimport { clampRange } from './util/vector.mjs';\nimport { RecordBatch } from './recordbatch.mjs';\n/**\n * Tables are collections of {@link Vector}s and have a {@link Schema}. Use the convenience methods {@link makeTable}\n * or {@link tableFromArrays} to create a table in JavaScript. To create a table from the IPC format, use\n * {@link tableFromIPC}.\n */\nexport class Table {\n    constructor(...args) {\n        var _b, _c;\n        if (args.length === 0) {\n            this.batches = [];\n            this.schema = new Schema([]);\n            this._offsets = [0];\n            return this;\n        }\n        let schema;\n        let offsets;\n        if (args[0] instanceof Schema) {\n            schema = args.shift();\n        }\n        if (args[args.length - 1] instanceof Uint32Array) {\n            offsets = args.pop();\n        }\n        const unwrap = (x) => {\n            if (x) {\n                if (x instanceof RecordBatch) {\n                    return [x];\n                }\n                else if (x instanceof Table) {\n                    return x.batches;\n                }\n                else if (x instanceof Data) {\n                    if (x.type instanceof Struct) {\n                        return [new RecordBatch(new Schema(x.type.children), x)];\n                    }\n                }\n                else if (Array.isArray(x)) {\n                    return x.flatMap(v => unwrap(v));\n                }\n                else if (typeof x[Symbol.iterator] === 'function') {\n                    return [...x].flatMap(v => unwrap(v));\n                }\n                else if (typeof x === 'object') {\n                    const keys = Object.keys(x);\n                    const vecs = keys.map((k) => new Vector([x[k]]));\n                    const schema = new Schema(keys.map((k, i) => new Field(String(k), vecs[i].type)));\n                    const [, batches] = distributeVectorsIntoRecordBatches(schema, vecs);\n                    return batches.length === 0 ? [new RecordBatch(x)] : batches;\n                }\n            }\n            return [];\n        };\n        const batches = args.flatMap(v => unwrap(v));\n        schema = (_c = schema !== null && schema !== void 0 ? schema : (_b = batches[0]) === null || _b === void 0 ? void 0 : _b.schema) !== null && _c !== void 0 ? _c : new Schema([]);\n        if (!(schema instanceof Schema)) {\n            throw new TypeError('Table constructor expects a [Schema, RecordBatch[]] pair.');\n        }\n        for (const batch of batches) {\n            if (!(batch instanceof RecordBatch)) {\n                throw new TypeError('Table constructor expects a [Schema, RecordBatch[]] pair.');\n            }\n            if (!compareSchemas(schema, batch.schema)) {\n                throw new TypeError('Table and inner RecordBatch schemas must be equivalent.');\n            }\n        }\n        this.schema = schema;\n        this.batches = batches;\n        this._offsets = offsets !== null && offsets !== void 0 ? offsets : computeChunkOffsets(this.data);\n    }\n    /**\n     * The contiguous {@link RecordBatch `RecordBatch`} chunks of the Table rows.\n     */\n    get data() { return this.batches.map(({ data }) => data); }\n    /**\n     * The number of columns in this Table.\n     */\n    get numCols() { return this.schema.fields.length; }\n    /**\n     * The number of rows in this Table.\n     */\n    get numRows() {\n        return this.data.reduce((numRows, data) => numRows + data.length, 0);\n    }\n    /**\n     * The number of null rows in this Table.\n     */\n    get nullCount() {\n        if (this._nullCount === -1) {\n            this._nullCount = computeChunkNullCounts(this.data);\n        }\n        return this._nullCount;\n    }\n    /**\n     * Check whether an element is null.\n     *\n     * @param index The index at which to read the validity bitmap.\n     */\n    // @ts-ignore\n    isValid(index) { return false; }\n    /**\n     * Get an element value by position.\n     *\n     * @param index The index of the element to read.\n     */\n    // @ts-ignore\n    get(index) { return null; }\n    /**\n     * Set an element value by position.\n     *\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    // @ts-ignore\n    set(index, value) { return; }\n    /**\n     * Retrieve the index of the first occurrence of a value in an Vector.\n     *\n     * @param element The value to locate in the Vector.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    // @ts-ignore\n    indexOf(element, offset) { return -1; }\n    /**\n     * Get the size in bytes of an element by index.\n     * @param index The index at which to get the byteLength.\n     */\n    // @ts-ignore\n    getByteLength(index) { return 0; }\n    /**\n     * Iterator for rows in this Table.\n     */\n    [Symbol.iterator]() {\n        return iteratorVisitor.visit(new Vector(this.data));\n    }\n    /**\n     * Return a JavaScript Array of the Table rows.\n     *\n     * @returns An Array of Table rows.\n     */\n    toArray() {\n        return [...this];\n    }\n    /**\n     * Returns a string representation of the Table rows.\n     *\n     * @returns A string representation of the Table rows.\n     */\n    toString() {\n        return `[\\n  ${this.toArray().join(',\\n  ')}\\n]`;\n    }\n    /**\n     * Combines two or more Tables of the same schema.\n     *\n     * @param others Additional Tables to add to the end of this Tables.\n     */\n    concat(...others) {\n        const schema = this.schema;\n        const data = this.data.concat(others.flatMap(({ data }) => data));\n        return new Table(schema, data.map((data) => new RecordBatch(schema, data)));\n    }\n    /**\n     * Return a zero-copy sub-section of this Table.\n     *\n     * @param begin The beginning of the specified portion of the Table.\n     * @param end The end of the specified portion of the Table. This is exclusive of the element at the index 'end'.\n     */\n    slice(begin, end) {\n        const schema = this.schema;\n        [begin, end] = clampRange({ length: this.numRows }, begin, end);\n        const data = sliceChunks(this.data, this._offsets, begin, end);\n        return new Table(schema, data.map((chunk) => new RecordBatch(schema, chunk)));\n    }\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     *\n     * @param name The name of the child to retrieve.\n     */\n    getChild(name) {\n        return this.getChildAt(this.schema.fields.findIndex((f) => f.name === name));\n    }\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     *\n     * @param index The index of the child to retrieve.\n     */\n    getChildAt(index) {\n        if (index > -1 && index < this.schema.fields.length) {\n            const data = this.data.map((data) => data.children[index]);\n            if (data.length === 0) {\n                const { type } = this.schema.fields[index];\n                const empty = makeData({ type, length: 0, nullCount: 0 });\n                data.push(empty._changeLengthAndBackfillNullBitmap(this.numRows));\n            }\n            return new Vector(data);\n        }\n        return null;\n    }\n    /**\n     * Sets a child Vector by name.\n     *\n     * @param name The name of the child to overwrite.\n     * @returns A new Table with the supplied child for the specified name.\n     */\n    setChild(name, child) {\n        var _b;\n        return this.setChildAt((_b = this.schema.fields) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name), child);\n    }\n    setChildAt(index, child) {\n        let schema = this.schema;\n        let batches = [...this.batches];\n        if (index > -1 && index < this.numCols) {\n            if (!child) {\n                child = new Vector([makeData({ type: new Null, length: this.numRows })]);\n            }\n            const fields = schema.fields.slice();\n            const field = fields[index].clone({ type: child.type });\n            const children = this.schema.fields.map((_, i) => this.getChildAt(i));\n            [fields[index], children[index]] = [field, child];\n            [schema, batches] = distributeVectorsIntoRecordBatches(schema, children);\n        }\n        return new Table(schema, batches);\n    }\n    /**\n     * Construct a new Table containing only specified columns.\n     *\n     * @param columnNames Names of columns to keep.\n     * @returns A new Table of columns matching the specified names.\n     */\n    select(columnNames) {\n        const nameToIndex = this.schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    /**\n     * Construct a new Table containing only columns at the specified indices.\n     *\n     * @param columnIndices Indices of columns to keep.\n     * @returns A new Table of columns at the specified indices.\n     */\n    selectAt(columnIndices) {\n        const schema = this.schema.selectAt(columnIndices);\n        const data = this.batches.map((batch) => batch.selectAt(columnIndices));\n        return new Table(schema, data);\n    }\n    assign(other) {\n        const fields = this.schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this.schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_, i) => [i, oldToNew[i]]).map(([i, j]) => (j === undefined ? this.getChildAt(i) : other.getChildAt(j))),\n            ...indices.map((i) => other.getChildAt(i))\n        ].filter(Boolean);\n        return new Table(...distributeVectorsIntoRecordBatches(schema, columns));\n    }\n}\n_a = Symbol.toStringTag;\n// Initialize this static property via an IIFE so bundlers don't tree-shake\n// out this logic, but also so we're still compliant with `\"sideEffects\": false`\nTable[_a] = ((proto) => {\n    proto.schema = null;\n    proto.batches = [];\n    proto._offsets = new Uint32Array([0]);\n    proto._nullCount = -1;\n    proto[Symbol.isConcatSpreadable] = true;\n    proto['isValid'] = wrapChunkedCall1(isChunkedValid);\n    proto['get'] = wrapChunkedCall1(getVisitor.getVisitFn(Type.Struct));\n    proto['set'] = wrapChunkedCall2(setVisitor.getVisitFn(Type.Struct));\n    proto['indexOf'] = wrapChunkedIndexOf(indexOfVisitor.getVisitFn(Type.Struct));\n    proto['getByteLength'] = wrapChunkedCall1(byteLengthVisitor.getVisitFn(Type.Struct));\n    return 'Table';\n})(Table.prototype);\n/**\n * Creates a new Table from an object of typed arrays.\n *\n*  @example\n * ```ts\n * const table = makeTable({\n *   a: new Int8Array([1, 2, 3]),\n * })\n * ```\n *\n * @param input Input an object of typed arrays.\n * @returns A new Table.\n */\nexport function makeTable(input) {\n    const vecs = {};\n    const inputs = Object.entries(input);\n    for (const [key, col] of inputs) {\n        vecs[key] = makeVector(col);\n    }\n    return new Table(vecs);\n}\n/**\n * Creates a new Table from an object of typed arrays or JavaScript arrays.\n *\n *  @example\n * ```ts\n * const table = tableFromArrays({\n *   a: [1, 2, 3],\n *   b: new Int8Array([1, 2, 3]),\n * })\n * ```\n *\n * @param input Input an object of typed arrays or JavaScript arrays.\n * @returns A new Table.\n */\nexport function tableFromArrays(input) {\n    const vecs = {};\n    const inputs = Object.entries(input);\n    for (const [key, col] of inputs) {\n        vecs[key] = vectorFromArray(col);\n    }\n    return new Table(vecs);\n}\n\n//# sourceMappingURL=table.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { makeData } from '../data.mjs';\nimport { Struct } from '../type.mjs';\nimport { RecordBatch } from '../recordbatch.mjs';\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v.data.concat()));\n}\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, cols) {\n    const fields = [...schema.fields];\n    const batches = [];\n    const memo = { numBatches: cols.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1;\n    const numColumns = cols.length;\n    let child, children = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            children[i] = child = cols[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (Number.isFinite(batchLength)) {\n            children = distributeChildren(fields, batchLength, children, cols, memo);\n            if (batchLength > 0) {\n                batches[numBatches++] = makeData({\n                    type: new Struct(fields),\n                    length: batchLength,\n                    nullCount: 0,\n                    children: children.slice()\n                });\n            }\n        }\n    }\n    return [\n        schema = schema.assign(fields),\n        batches.map((data) => new RecordBatch(schema, data))\n    ];\n}\n/** @ignore */\nfunction distributeChildren(fields, batchLength, children, columns, memo) {\n    var _a;\n    const nullBitmapSize = ((batchLength + 63) & ~63) >> 3;\n    for (let i = -1, n = columns.length; ++i < n;) {\n        const child = children[i];\n        const length = child === null || child === void 0 ? void 0 : child.length;\n        if (length >= batchLength) {\n            if (length === batchLength) {\n                children[i] = child;\n            }\n            else {\n                children[i] = child.slice(0, batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(child.slice(batchLength, length - batchLength)));\n            }\n        }\n        else {\n            const field = fields[i];\n            fields[i] = field.clone({ nullable: true });\n            children[i] = (_a = child === null || child === void 0 ? void 0 : child._changeLengthAndBackfillNullBitmap(batchLength)) !== null && _a !== void 0 ? _a : makeData({\n                type: field.type,\n                length: batchLength,\n                nullCount: batchLength,\n                nullBitmap: new Uint8Array(nullBitmapSize)\n            });\n        }\n    }\n    return children;\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport class Block {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * Index to the start of the RecordBlock (note this is past the Message header)\n     */\n    offset() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * Length of the metadata\n     */\n    metaDataLength() {\n        return this.bb.readInt32(this.bb_pos + 8);\n    }\n    /**\n     * Length of the data (this is aligned so there can be a gap between this and\n     * the metadata).\n     */\n    bodyLength() {\n        return this.bb.readInt64(this.bb_pos + 16);\n    }\n    static sizeOf() {\n        return 24;\n    }\n    static createBlock(builder, offset, metaDataLength, bodyLength) {\n        builder.prep(8, 24);\n        builder.writeInt64(bodyLength);\n        builder.pad(4);\n        builder.writeInt32(metaDataLength);\n        builder.writeInt64(offset);\n        return builder.offset();\n    }\n}\n\n//# sourceMappingURL=block.mjs.map\n","export const SIZEOF_SHORT = 2;\r\nexport const SIZEOF_INT = 4;\r\nexport const FILE_IDENTIFIER_LENGTH = 4;\r\nexport const SIZE_PREFIX_LENGTH = 4;\r\n","export const int32 = new Int32Array(2);\r\nexport const float32 = new Float32Array(int32.buffer);\r\nexport const float64 = new Float64Array(int32.buffer);\r\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n","export function createLong(low, high) {\r\n    return Long.create(low, high);\r\n}\r\nexport class Long {\r\n    constructor(low, high) {\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n    }\r\n    static create(low, high) {\r\n        // Special-case zero to avoid GC overhead for default values\r\n        return low == 0 && high == 0 ? Long.ZERO : new Long(low, high);\r\n    }\r\n    toFloat64() {\r\n        return (this.low >>> 0) + this.high * 0x100000000;\r\n    }\r\n    equals(other) {\r\n        return this.low == other.low && this.high == other.high;\r\n    }\r\n}\r\nLong.ZERO = new Long(0, 0);\r\n","export var Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n","// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * Logical types, vector layouts, and schemas\n * Format Version History.\n * Version 1.0 - Forward and backwards compatibility guaranteed.\n * Version 1.1 - Add Decimal256 (No format release).\n * Version 1.2 (Pending)- Add Interval MONTH_DAY_NANO\n */\nexport var MetadataVersion;\n(function (MetadataVersion) {\n    /**\n     * 0.1.0 (October 2016).\n     */\n    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n    /**\n     * 0.2.0 (February 2017). Non-backwards compatible with V1.\n     */\n    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n    /**\n     * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n     */\n    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n    /**\n     * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n     */\n    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n    /**\n     * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n     * metadata and IPC messages). Implementations are recommended to provide a\n     * V4 compatibility mode with V5 format changes disabled.\n     *\n     * Incompatible changes between V4 and V5:\n     * - Union buffer layout has changed. In V5, Unions don't have a validity\n     *   bitmap buffer.\n     */\n    MetadataVersion[MetadataVersion[\"V5\"] = 4] = \"V5\";\n})(MetadataVersion || (MetadataVersion = {}));\n\n//# sourceMappingURL=metadata-version.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n */\nexport var Endianness;\n(function (Endianness) {\n    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n})(Endianness || (Endianness = {}));\n\n//# sourceMappingURL=endianness.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n * Maintained for forwards compatibility, in the future\n * Dictionaries might be explicit maps between integers and values\n * allowing for non-contiguous index values\n */\nexport var DictionaryKind;\n(function (DictionaryKind) {\n    DictionaryKind[DictionaryKind[\"DenseArray\"] = 0] = \"DenseArray\";\n})(DictionaryKind || (DictionaryKind = {}));\n\n//# sourceMappingURL=dictionary-kind.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport { Binary } from './binary.mjs';\nimport { Bool } from './bool.mjs';\nimport { Date } from './date.mjs';\nimport { Decimal } from './decimal.mjs';\nimport { Duration } from './duration.mjs';\nimport { FixedSizeBinary } from './fixed-size-binary.mjs';\nimport { FixedSizeList } from './fixed-size-list.mjs';\nimport { FloatingPoint } from './floating-point.mjs';\nimport { Int } from './int.mjs';\nimport { Interval } from './interval.mjs';\nimport { LargeBinary } from './large-binary.mjs';\nimport { LargeList } from './large-list.mjs';\nimport { LargeUtf8 } from './large-utf8.mjs';\nimport { List } from './list.mjs';\nimport { Map } from './map.mjs';\nimport { Null } from './null.mjs';\nimport { Struct_ } from './struct_.mjs';\nimport { Time } from './time.mjs';\nimport { Timestamp } from './timestamp.mjs';\nimport { Union } from './union.mjs';\nimport { Utf8 } from './utf8.mjs';\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n */\nexport var Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Duration\"] = 18] = \"Duration\";\n    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n})(Type || (Type = {}));\nexport function unionToType(type, accessor) {\n    switch (Type[type]) {\n        case 'NONE': return null;\n        case 'Null': return accessor(new Null());\n        case 'Int': return accessor(new Int());\n        case 'FloatingPoint': return accessor(new FloatingPoint());\n        case 'Binary': return accessor(new Binary());\n        case 'Utf8': return accessor(new Utf8());\n        case 'Bool': return accessor(new Bool());\n        case 'Decimal': return accessor(new Decimal());\n        case 'Date': return accessor(new Date());\n        case 'Time': return accessor(new Time());\n        case 'Timestamp': return accessor(new Timestamp());\n        case 'Interval': return accessor(new Interval());\n        case 'List': return accessor(new List());\n        case 'Struct_': return accessor(new Struct_());\n        case 'Union': return accessor(new Union());\n        case 'FixedSizeBinary': return accessor(new FixedSizeBinary());\n        case 'FixedSizeList': return accessor(new FixedSizeList());\n        case 'Map': return accessor(new Map());\n        case 'Duration': return accessor(new Duration());\n        case 'LargeBinary': return accessor(new LargeBinary());\n        case 'LargeUtf8': return accessor(new LargeUtf8());\n        case 'LargeList': return accessor(new LargeList());\n        default: return null;\n    }\n}\nexport function unionListToType(type, accessor, index) {\n    switch (Type[type]) {\n        case 'NONE': return null;\n        case 'Null': return accessor(index, new Null());\n        case 'Int': return accessor(index, new Int());\n        case 'FloatingPoint': return accessor(index, new FloatingPoint());\n        case 'Binary': return accessor(index, new Binary());\n        case 'Utf8': return accessor(index, new Utf8());\n        case 'Bool': return accessor(index, new Bool());\n        case 'Decimal': return accessor(index, new Decimal());\n        case 'Date': return accessor(index, new Date());\n        case 'Time': return accessor(index, new Time());\n        case 'Timestamp': return accessor(index, new Timestamp());\n        case 'Interval': return accessor(index, new Interval());\n        case 'List': return accessor(index, new List());\n        case 'Struct_': return accessor(index, new Struct_());\n        case 'Union': return accessor(index, new Union());\n        case 'FixedSizeBinary': return accessor(index, new FixedSizeBinary());\n        case 'FixedSizeList': return accessor(index, new FixedSizeList());\n        case 'Map': return accessor(index, new Map());\n        case 'Duration': return accessor(index, new Duration());\n        case 'LargeBinary': return accessor(index, new LargeBinary());\n        case 'LargeUtf8': return accessor(index, new LargeUtf8());\n        case 'LargeList': return accessor(index, new LargeList());\n        default: return null;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils\";\r\nimport { Encoding } from \"./encoding\";\r\nexport class ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return new Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n    readUint64(offset) {\r\n        return new Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n    readFloat32(offset) {\r\n        int32[0] = this.readInt32(offset);\r\n        return float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, value.low);\r\n        this.writeInt32(offset + 4, value.high);\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n    writeFloat32(offset, value) {\r\n        float32[0] = value;\r\n        this.writeInt32(offset, int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        float64[0] = value;\r\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n            FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += SIZEOF_INT;\r\n        if (opt_encoding === Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import { ByteBuffer } from \"./byte-buffer\";\r\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nexport class Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || !value.equals(defaultValue)) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, SIZEOF_INT +\r\n                FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n */\nexport class KeyValue {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsKeyValue(bb, obj) {\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsKeyValue(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    key(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    value(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static startKeyValue(builder) {\n        builder.startObject(2);\n    }\n    static addKey(builder, keyOffset) {\n        builder.addFieldOffset(0, keyOffset, 0);\n    }\n    static addValue(builder, valueOffset) {\n        builder.addFieldOffset(1, valueOffset, 0);\n    }\n    static endKeyValue(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createKeyValue(builder, keyOffset, valueOffset) {\n        KeyValue.startKeyValue(builder);\n        KeyValue.addKey(builder, keyOffset);\n        KeyValue.addValue(builder, valueOffset);\n        return KeyValue.endKeyValue(builder);\n    }\n}\n\n//# sourceMappingURL=key-value.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class Int {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsInt(bb, obj) {\n        return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsInt(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    bitWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    isSigned() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startInt(builder) {\n        builder.startObject(2);\n    }\n    static addBitWidth(builder, bitWidth) {\n        builder.addFieldInt32(0, bitWidth, 0);\n    }\n    static addIsSigned(builder, isSigned) {\n        builder.addFieldInt8(1, +isSigned, +false);\n    }\n    static endInt(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createInt(builder, bitWidth, isSigned) {\n        Int.startInt(builder);\n        Int.addBitWidth(builder, bitWidth);\n        Int.addIsSigned(builder, isSigned);\n        return Int.endInt(builder);\n    }\n}\n\n//# sourceMappingURL=int.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { DictionaryKind } from './dictionary-kind.mjs';\nimport { Int } from './int.mjs';\nexport class DictionaryEncoding {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDictionaryEncoding(bb, obj) {\n        return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDictionaryEncoding(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * The known dictionary id in the application where this data is used. In\n     * the file or streaming formats, the dictionary ids are found in the\n     * DictionaryBatch messages\n     */\n    id() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    /**\n     * The dictionary indices are constrained to be non-negative integers. If\n     * this field is null, the indices must be signed int32. To maximize\n     * cross-language compatibility and performance, implementations are\n     * recommended to prefer signed integer types over unsigned integer types\n     * and to avoid uint64 indices unless they are required by an application.\n     */\n    indexType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * By default, dictionaries are not ordered, or the order does not have\n     * semantic meaning. In some statistical, applications, dictionary-encoding\n     * is used to represent ordered categorical data, and we provide a way to\n     * preserve that metadata here\n     */\n    isOrdered() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    dictionaryKind() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : DictionaryKind.DenseArray;\n    }\n    static startDictionaryEncoding(builder) {\n        builder.startObject(4);\n    }\n    static addId(builder, id) {\n        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n    }\n    static addIndexType(builder, indexTypeOffset) {\n        builder.addFieldOffset(1, indexTypeOffset, 0);\n    }\n    static addIsOrdered(builder, isOrdered) {\n        builder.addFieldInt8(2, +isOrdered, +false);\n    }\n    static addDictionaryKind(builder, dictionaryKind) {\n        builder.addFieldInt16(3, dictionaryKind, DictionaryKind.DenseArray);\n    }\n    static endDictionaryEncoding(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\n\n//# sourceMappingURL=dictionary-encoding.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { DictionaryEncoding } from './dictionary-encoding.mjs';\nimport { KeyValue } from './key-value.mjs';\nimport { Type } from './type.mjs';\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n */\nexport class Field {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsField(bb, obj) {\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsField(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    /**\n     * Whether or not this field can contain nulls. Should be true in general.\n     */\n    nullable() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    typeType() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : Type.NONE;\n    }\n    /**\n     * This is the type of the decoded value if the field is dictionary encoded.\n     */\n    // @ts-ignore\n    type(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    /**\n     * Present only if the field is dictionary encoded.\n     */\n    dictionary(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new DictionaryEncoding()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * children apply only to nested data types like Struct, List and Union. For\n     * primitive types children will have length 0.\n     */\n    children(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? (obj || new Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    childrenLength() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * User-defined metadata\n     */\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? (obj || new KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startField(builder) {\n        builder.startObject(7);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addNullable(builder, nullable) {\n        builder.addFieldInt8(1, +nullable, +false);\n    }\n    static addTypeType(builder, typeType) {\n        builder.addFieldInt8(2, typeType, Type.NONE);\n    }\n    static addType(builder, typeOffset) {\n        builder.addFieldOffset(3, typeOffset, 0);\n    }\n    static addDictionary(builder, dictionaryOffset) {\n        builder.addFieldOffset(4, dictionaryOffset, 0);\n    }\n    static addChildren(builder, childrenOffset) {\n        builder.addFieldOffset(5, childrenOffset, 0);\n    }\n    static createChildrenVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startChildrenVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(6, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endField(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\n\n//# sourceMappingURL=field.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { Endianness } from './endianness.mjs';\nimport { Field } from './field.mjs';\nimport { KeyValue } from './key-value.mjs';\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n */\nexport class Schema {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSchema(bb, obj) {\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSchema(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * endianness of the buffer\n     * it is Little Endian by default\n     * if endianness doesn't match the underlying system then the vectors need to be converted\n     */\n    endianness() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : Endianness.Little;\n    }\n    fields(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    fieldsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Features used in the stream/file.\n     */\n    features(index) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);\n    }\n    featuresLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startSchema(builder) {\n        builder.startObject(4);\n    }\n    static addEndianness(builder, endianness) {\n        builder.addFieldInt16(0, endianness, Endianness.Little);\n    }\n    static addFields(builder, fieldsOffset) {\n        builder.addFieldOffset(1, fieldsOffset, 0);\n    }\n    static createFieldsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startFieldsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(2, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addFeatures(builder, featuresOffset) {\n        builder.addFieldOffset(3, featuresOffset, 0);\n    }\n    static createFeaturesVector(builder, data) {\n        builder.startVector(8, data.length, 8);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt64(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startFeaturesVector(builder, numElems) {\n        builder.startVector(8, numElems, 8);\n    }\n    static endSchema(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static finishSchemaBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedSchemaBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset, featuresOffset) {\n        Schema.startSchema(builder);\n        Schema.addEndianness(builder, endianness);\n        Schema.addFields(builder, fieldsOffset);\n        Schema.addCustomMetadata(builder, customMetadataOffset);\n        Schema.addFeatures(builder, featuresOffset);\n        return Schema.endSchema(builder);\n    }\n}\n\n//# sourceMappingURL=schema.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { Block } from './block.mjs';\nimport { KeyValue } from './key-value.mjs';\nimport { MetadataVersion } from './metadata-version.mjs';\nimport { Schema } from './schema.mjs';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n */\nexport class Footer {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFooter(bb, obj) {\n        return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFooter(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    version() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : MetadataVersion.V1;\n    }\n    schema(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    dictionaries(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n    }\n    dictionariesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    recordBatches(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n    }\n    recordBatchesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * User-defined metadata\n     */\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startFooter(builder) {\n        builder.startObject(5);\n    }\n    static addVersion(builder, version) {\n        builder.addFieldInt16(0, version, MetadataVersion.V1);\n    }\n    static addSchema(builder, schemaOffset) {\n        builder.addFieldOffset(1, schemaOffset, 0);\n    }\n    static addDictionaries(builder, dictionariesOffset) {\n        builder.addFieldOffset(2, dictionariesOffset, 0);\n    }\n    static startDictionariesVector(builder, numElems) {\n        builder.startVector(24, numElems, 8);\n    }\n    static addRecordBatches(builder, recordBatchesOffset) {\n        builder.addFieldOffset(3, recordBatchesOffset, 0);\n    }\n    static startRecordBatchesVector(builder, numElems) {\n        builder.startVector(24, numElems, 8);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(4, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endFooter(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static finishFooterBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedFooterBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n}\n\n//# sourceMappingURL=footer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { Block as _Block } from '../../fb/block.mjs';\nimport { Footer as _Footer } from '../../fb/footer.mjs';\nimport * as flatbuffers from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { Schema } from '../../schema.mjs';\nimport { MetadataVersion } from '../../enum.mjs';\nimport { toUint8Array } from '../../util/buffer.mjs';\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        for (const rb of [...footer.recordBatches()].slice().reverse()) {\n            FileBlock.encode(b, rb);\n        }\n        const recordBatchesOffset = b.endVector();\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        for (const db of [...footer.dictionaryBatches()].slice().reverse()) {\n            FileBlock.encode(b, db);\n        }\n        const dictionaryBatchesOffset = b.endVector();\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nexport class FileBlock {\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __asyncGenerator, __await, __awaiter } from \"tslib\";\nimport { toUint8Array, joinUint8Arrays, toUint8ArrayIterator, toUint8ArrayAsyncIterator } from '../util/buffer.mjs';\n/** @ignore */\nexport default {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    const it = toUint8ArrayIterator(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = Number.isNaN(size - bufferLength) ?\n                it.next() : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return(null));\n    }\n    return null;\n}\n/** @ignore */\nfunction fromAsyncIterable(source) {\n    return __asyncGenerator(this, arguments, function* fromAsyncIterable_1() {\n        let done, threw = false;\n        let buffers = [], buffer;\n        let cmd, size, bufferLength = 0;\n        function byteRange() {\n            if (cmd === 'peek') {\n                return joinUint8Arrays(buffers, size)[0];\n            }\n            [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n            return buffer;\n        }\n        // Yield so the caller can inject the read command before creating the source AsyncIterator\n        ({ cmd, size } = (yield yield __await(null)));\n        // initialize the iterator\n        const it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n        try {\n            do {\n                // read the next value\n                ({ done, value: buffer } = Number.isNaN(size - bufferLength)\n                    ? yield __await(it.next())\n                    : yield __await(it.next(size - bufferLength)));\n                // if chunk is not null or empty, push it onto the queue\n                if (!done && buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n                // If we have enough bytes in our buffer, yield chunks until we don't\n                if (done || size <= bufferLength) {\n                    do {\n                        ({ cmd, size } = yield yield __await(byteRange()));\n                    } while (size < bufferLength);\n                }\n            } while (!done);\n        }\n        catch (e) {\n            (threw = true) && (typeof it.throw === 'function') && (yield __await(it.throw(e)));\n        }\n        finally {\n            (threw === false) && (typeof it.return === 'function') && (yield __await(it.return(new Uint8Array(0))));\n        }\n        return yield __await(null);\n    });\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nfunction fromDOMStream(source) {\n    return __asyncGenerator(this, arguments, function* fromDOMStream_1() {\n        let done = false, threw = false;\n        let buffers = [], buffer;\n        let cmd, size, bufferLength = 0;\n        function byteRange() {\n            if (cmd === 'peek') {\n                return joinUint8Arrays(buffers, size)[0];\n            }\n            [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n            return buffer;\n        }\n        // Yield so the caller can inject the read command before we establish the ReadableStream lock\n        ({ cmd, size } = yield yield __await(null));\n        // initialize the reader and lock the stream\n        const it = new AdaptiveByteReader(source);\n        try {\n            do {\n                // read the next value\n                ({ done, value: buffer } = Number.isNaN(size - bufferLength)\n                    ? yield __await(it['read']())\n                    : yield __await(it['read'](size - bufferLength)));\n                // if chunk is not null or empty, push it onto the queue\n                if (!done && buffer.byteLength > 0) {\n                    buffers.push(toUint8Array(buffer));\n                    bufferLength += buffer.byteLength;\n                }\n                // If we have enough bytes in our buffer, yield chunks until we don't\n                if (done || size <= bufferLength) {\n                    do {\n                        ({ cmd, size } = yield yield __await(byteRange()));\n                    } while (size < bufferLength);\n                }\n            } while (!done);\n        }\n        catch (e) {\n            (threw = true) && (yield __await(it['cancel'](e)));\n        }\n        finally {\n            (threw === false) ? (yield __await(it['cancel']()))\n                : source['locked'] && it.releaseLock();\n        }\n        return yield __await(null);\n    });\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.reader = null;\n        this.reader = this.source['getReader']();\n        // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n        // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n        // about why these errors are raised, but I'm sure there's some important spec reason that\n        // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n        // only solution in this case :/\n        this.reader['closed'].catch(() => { });\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = null;\n    }\n    cancel(reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { reader, source } = this;\n            reader && (yield reader['cancel'](reason).catch(() => { }));\n            source && (source['locked'] && this.releaseLock());\n        });\n    }\n    read(size) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (size === 0) {\n                return { done: this.reader == null, value: new Uint8Array(0) };\n            }\n            const result = yield this.reader.read();\n            !result.done && (result.value = toUint8Array(result));\n            return result;\n        });\n    }\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    const handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nfunction fromNodeStream(stream) {\n    return __asyncGenerator(this, arguments, function* fromNodeStream_1() {\n        const events = [];\n        let event = 'error';\n        let done = false, err = null;\n        let cmd, size, bufferLength = 0;\n        let buffers = [], buffer;\n        function byteRange() {\n            if (cmd === 'peek') {\n                return joinUint8Arrays(buffers, size)[0];\n            }\n            [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n            return buffer;\n        }\n        // Yield so the caller can inject the read command before we\n        // add the listener for the source stream's 'readable' event.\n        ({ cmd, size } = yield yield __await(null));\n        // ignore stdin if it's a TTY\n        if (stream['isTTY']) {\n            yield yield __await(new Uint8Array(0));\n            return yield __await(null);\n        }\n        try {\n            // initialize the stream event handlers\n            events[0] = onEvent(stream, 'end');\n            events[1] = onEvent(stream, 'error');\n            do {\n                events[2] = onEvent(stream, 'readable');\n                // wait on the first message event from the stream\n                [event, err] = yield __await(Promise.race(events.map((x) => x[2])));\n                // if the stream emitted an Error, rethrow it\n                if (event === 'error') {\n                    break;\n                }\n                if (!(done = event === 'end')) {\n                    // If the size is NaN, request to read everything in the stream's internal buffer\n                    if (!Number.isFinite(size - bufferLength)) {\n                        buffer = toUint8Array(stream['read']());\n                    }\n                    else {\n                        buffer = toUint8Array(stream['read'](size - bufferLength));\n                        // If the byteLength is 0, then the requested amount is more than the stream has\n                        // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                        // continue emitting readable events, so request to read everything the stream\n                        // has in its internal buffer right now.\n                        if (buffer.byteLength < (size - bufferLength)) {\n                            buffer = toUint8Array(stream['read']());\n                        }\n                    }\n                    // if chunk is not null or empty, push it onto the queue\n                    if (buffer.byteLength > 0) {\n                        buffers.push(buffer);\n                        bufferLength += buffer.byteLength;\n                    }\n                }\n                // If we have enough bytes in our buffer, yield chunks until we don't\n                if (done || size <= bufferLength) {\n                    do {\n                        ({ cmd, size } = yield yield __await(byteRange()));\n                    } while (size < bufferLength);\n                }\n            } while (!done);\n        }\n        finally {\n            yield __await(cleanup(events, event === 'error' ? err : null));\n        }\n        return yield __await(null);\n        function cleanup(events, err) {\n            buffer = buffers = null;\n            return new Promise((resolve, reject) => {\n                for (const [evt, fn] of events) {\n                    stream['off'](evt, fn);\n                }\n                try {\n                    // Some stream implementations don't call the destroy callback,\n                    // because it's really a node-internal API. Just calling `destroy`\n                    // here should be enough to conform to the ReadableStream contract\n                    const destroy = stream['destroy'];\n                    destroy && destroy.call(stream, err);\n                    err = undefined;\n                }\n                catch (e) {\n                    err = e || err;\n                }\n                finally {\n                    err != null ? reject(err) : resolve();\n                }\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=adapters.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __awaiter } from \"tslib\";\nimport streamAdapters from './adapters.mjs';\n/** @ignore */\nexport const ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nexport class ArrowJSON {\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\n/** @ignore */\nexport class ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n/** @ignore */\nexport class AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    cancel(reason) {\n        return __awaiter(this, void 0, void 0, function* () { yield this.return(reason); });\n    }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return streamAdapters.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return streamAdapters.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    throw(_) {\n        return __awaiter(this, void 0, void 0, function* () { yield this.abort(_); return ITERATOR_DONE; });\n    }\n    return(_) {\n        return __awaiter(this, void 0, void 0, function* () { yield this.close(); return ITERATOR_DONE; });\n    }\n    read(size) {\n        return __awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'read')).value; });\n    }\n    peek(size) {\n        return __awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'peek')).value; });\n    }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`AsyncQueue is closed`);\n    }\n}\n\n//# sourceMappingURL=interfaces.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __asyncValues, __awaiter } from \"tslib\";\nimport streamAdapters from './adapters.mjs';\nimport { decodeUtf8 } from '../util/utf8.mjs';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces.mjs';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer.mjs';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat.mjs';\n/** @ignore */\nexport class AsyncByteQueue extends AsyncQueue {\n    write(value) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values)[0] : (() => __awaiter(this, void 0, void 0, function* () {\n            var e_1, _a;\n            const buffers = [];\n            let byteLength = 0;\n            try {\n                for (var _b = __asyncValues(this), _c; _c = yield _b.next(), !_c.done;) {\n                    const chunk = _c.value;\n                    buffers.push(chunk);\n                    byteLength += chunk.byteLength;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        }))();\n    }\n}\n/** @ignore */\nexport class ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nexport class AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        }\n        else if (isReadableDOMStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        }\n        else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n        }\n        else if (isIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        }\n        else if (isPromise(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isAsyncIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    cancel(reason) {\n        return __awaiter(this, void 0, void 0, function* () { yield this.return(reason); });\n    }\n    get closed() { return this._closedPromise; }\n    read(size) {\n        return __awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'read')).value; });\n    }\n    peek(size) {\n        return __awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'peek')).value; });\n    }\n    next(size, cmd = 'read') {\n        return __awaiter(this, void 0, void 0, function* () { return (yield this.source.next({ cmd, size })); });\n    }\n    throw(value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = (this.source.throw && (yield this.source.throw(value))) || ITERATOR_DONE;\n            this._closedPromiseResolve && this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n            return Object.create(result);\n        });\n    }\n    return(value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = (this.source.return && (yield this.source.return(value))) || ITERATOR_DONE;\n            this._closedPromiseResolve && this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n            return Object.create(result);\n        });\n    }\n}\n\n//# sourceMappingURL=stream.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __awaiter } from \"tslib\";\nimport { ByteStream, AsyncByteStream } from './stream.mjs';\nimport { toUint8Array } from '../util/buffer.mjs';\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Number.POSITIVE_INFINITY;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (() => __awaiter(this, void 0, void 0, function* () {\n                this.size = (yield file.stat()).size;\n                delete this._pending;\n            }))();\n        }\n    }\n    readInt32(position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { buffer, byteOffset } = yield this.readAt(position, 4);\n            return new DataView(buffer, byteOffset).getInt32(0, true);\n        });\n    }\n    seek(position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._pending && (yield this._pending);\n            this.position = Math.min(position, this.size);\n            return position < this.size;\n        });\n    }\n    read(nBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._pending && (yield this._pending);\n            const { _handle: file, size, position } = this;\n            if (file && position < size) {\n                if (typeof nBytes !== 'number') {\n                    nBytes = Number.POSITIVE_INFINITY;\n                }\n                let pos = position, offset = 0, bytesRead = 0;\n                const end = Math.min(size, pos + Math.min(size - pos, nBytes));\n                const buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n                while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                    ({ bytesRead } = yield file.read(buffer, offset, buffer.byteLength - offset, pos));\n                }\n                return buffer;\n            }\n            return null;\n        });\n    }\n    readAt(position, nBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._pending && (yield this._pending);\n            const { _handle: file, size } = this;\n            if (file && (position + nBytes) < size) {\n                const end = Math.min(size, position + nBytes);\n                const buffer = new Uint8Array(end - position);\n                return (yield file.read(buffer, 0, nBytes, position)).buffer;\n            }\n            return new Uint8Array(nBytes);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () { const f = this._handle; this._handle = null; f && (yield f.close()); });\n    }\n    throw(value) {\n        return __awaiter(this, void 0, void 0, function* () { yield this.close(); return { done: true, value }; });\n    }\n    return(value) {\n        return __awaiter(this, void 0, void 0, function* () { yield this.close(); return { done: true, value }; });\n    }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [\n    1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000\n];\n/** @ignore */\nexport class BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        const out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        const rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        const rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        // eslint-disable-next-line unicorn/prefer-math-trunc\n        const this_high = this.buffer[1] << 0;\n        // eslint-disable-next-line unicorn/prefer-math-trunc\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        const out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        const rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        const rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        const sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        const high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        const sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        const rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        const rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        const out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { makeData } from '../data.mjs';\nimport { Field } from '../schema.mjs';\nimport { DataType } from '../type.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { packBools } from '../util/bit.mjs';\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { Int64, Int128 } from '../util/int.mjs';\nimport { UnionMode, DateUnit } from '../enum.mjs';\nimport { toArrayBufferView } from '../util/buffer.mjs';\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n    visitNull(type, { length } = this.nextFieldNode()) {\n        return makeData({ type, length });\n    }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), children: this.visitMany(type.children) });\n    }\n    visitUnion(type) {\n        return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type);\n    }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), valueOffsets: this.readOffsets(type), children: this.visitMany(type.children) });\n    }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), children: this.visitMany(type.children) });\n    }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type.indices), dictionary: this.readDictionary(type) });\n    }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), 'child': this.visit(type.children[0]) });\n    }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n        }\n        else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (DataType.isBool(type)) {\n            return packBools(sources[offset]);\n        }\n        else if (DataType.isUtf8(type)) {\n            return encodeUtf8(sources[offset].join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = Number.parseInt(joined.slice(i, i + 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * Provided for forward compatibility in case we need to support different\n * strategies for compressing the IPC message body (like whole-body\n * compression rather than buffer-level) in the future\n */\nexport var BodyCompressionMethod;\n(function (BodyCompressionMethod) {\n    /**\n     * Each constituent buffer is first compressed with the indicated\n     * compressor, and then written with the uncompressed length in the first 8\n     * bytes as a 64-bit little-endian signed integer followed by the compressed\n     * buffer bytes (and then padding as required by the protocol). The\n     * uncompressed length may be set to -1 to indicate that the data that\n     * follows is not compressed, which can be useful for cases where\n     * compression does not yield appreciable savings.\n     */\n    BodyCompressionMethod[BodyCompressionMethod[\"BUFFER\"] = 0] = \"BUFFER\";\n})(BodyCompressionMethod || (BodyCompressionMethod = {}));\n\n//# sourceMappingURL=body-compression-method.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var CompressionType;\n(function (CompressionType) {\n    CompressionType[CompressionType[\"LZ4_FRAME\"] = 0] = \"LZ4_FRAME\";\n    CompressionType[CompressionType[\"ZSTD\"] = 1] = \"ZSTD\";\n})(CompressionType || (CompressionType = {}));\n\n//# sourceMappingURL=compression-type.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var Precision;\n(function (Precision) {\n    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n})(Precision || (Precision = {}));\n\n//# sourceMappingURL=precision.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var DateUnit;\n(function (DateUnit) {\n    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n})(DateUnit || (DateUnit = {}));\n\n//# sourceMappingURL=date-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n})(TimeUnit || (TimeUnit = {}));\n\n//# sourceMappingURL=time-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var IntervalUnit;\n(function (IntervalUnit) {\n    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n    IntervalUnit[IntervalUnit[\"MONTH_DAY_NANO\"] = 2] = \"MONTH_DAY_NANO\";\n})(IntervalUnit || (IntervalUnit = {}));\n\n//# sourceMappingURL=interval-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var UnionMode;\n(function (UnionMode) {\n    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n})(UnionMode || (UnionMode = {}));\n\n//# sourceMappingURL=union-mode.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport { DictionaryBatch } from './dictionary-batch.mjs';\nimport { RecordBatch } from './record-batch.mjs';\nimport { Schema } from './schema.mjs';\nimport { SparseTensor } from './sparse-tensor.mjs';\nimport { Tensor } from './tensor.mjs';\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n */\nexport var MessageHeader;\n(function (MessageHeader) {\n    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n})(MessageHeader || (MessageHeader = {}));\nexport function unionToMessageHeader(type, accessor) {\n    switch (MessageHeader[type]) {\n        case 'NONE': return null;\n        case 'Schema': return accessor(new Schema());\n        case 'DictionaryBatch': return accessor(new DictionaryBatch());\n        case 'RecordBatch': return accessor(new RecordBatch());\n        case 'Tensor': return accessor(new Tensor());\n        case 'SparseTensor': return accessor(new SparseTensor());\n        default: return null;\n    }\n}\nexport function unionListToMessageHeader(type, accessor, index) {\n    switch (MessageHeader[type]) {\n        case 'NONE': return null;\n        case 'Schema': return accessor(index, new Schema());\n        case 'DictionaryBatch': return accessor(index, new DictionaryBatch());\n        case 'RecordBatch': return accessor(index, new RecordBatch());\n        case 'Tensor': return accessor(index, new Tensor());\n        case 'SparseTensor': return accessor(index, new SparseTensor());\n        default: return null;\n    }\n}\n\n//# sourceMappingURL=message-header.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { BodyCompressionMethod } from './body-compression-method.mjs';\nimport { CompressionType } from './compression-type.mjs';\n/**\n * Optional compression for the memory buffers constituting IPC message\n * bodies. Intended for use with RecordBatch but could be used for other\n * message types\n */\nexport class BodyCompression {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBodyCompression(bb, obj) {\n        return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBodyCompression(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Compressor library.\n     * For LZ4_FRAME, each compressed buffer must consist of a single frame.\n     */\n    codec() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : CompressionType.LZ4_FRAME;\n    }\n    /**\n     * Indicates the way the record batch body was compressed\n     */\n    method() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : BodyCompressionMethod.BUFFER;\n    }\n    static startBodyCompression(builder) {\n        builder.startObject(2);\n    }\n    static addCodec(builder, codec) {\n        builder.addFieldInt8(0, codec, CompressionType.LZ4_FRAME);\n    }\n    static addMethod(builder, method) {\n        builder.addFieldInt8(1, method, BodyCompressionMethod.BUFFER);\n    }\n    static endBodyCompression(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBodyCompression(builder, codec, method) {\n        BodyCompression.startBodyCompression(builder);\n        BodyCompression.addCodec(builder, codec);\n        BodyCompression.addMethod(builder, method);\n        return BodyCompression.endBodyCompression(builder);\n    }\n}\n\n//# sourceMappingURL=body-compression.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n */\nexport class Buffer {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * The relative offset into the shared memory page where the bytes for this\n     * buffer starts\n     */\n    offset() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * The absolute length (in bytes) of the memory buffer. The memory is found\n     * from offset (inclusive) to offset + length (non-inclusive). When building\n     * messages using the encapsulated IPC message, padding bytes may be written\n     * after a buffer, but such padding bytes do not need to be accounted for in\n     * the size here.\n     */\n    length() {\n        return this.bb.readInt64(this.bb_pos + 8);\n    }\n    static sizeOf() {\n        return 16;\n    }\n    static createBuffer(builder, offset, length) {\n        builder.prep(8, 16);\n        builder.writeInt64(length);\n        builder.writeInt64(offset);\n        return builder.offset();\n    }\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values `[[1, 2, 3], null, [4], [5, 6], null]`\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n */\nexport class FieldNode {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * The number of value slots in the Arrow array at this level of a nested\n     * tree\n     */\n    length() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * The number of observed nulls. Fields with null_count == 0 may choose not\n     * to write their physical validity bitmap out as a materialized buffer,\n     * instead setting the length of the bitmap buffer to 0.\n     */\n    nullCount() {\n        return this.bb.readInt64(this.bb_pos + 8);\n    }\n    static sizeOf() {\n        return 16;\n    }\n    static createFieldNode(builder, length, null_count) {\n        builder.prep(8, 16);\n        builder.writeInt64(null_count);\n        builder.writeInt64(length);\n        return builder.offset();\n    }\n}\n\n//# sourceMappingURL=field-node.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { BodyCompression } from './body-compression.mjs';\nimport { Buffer } from './buffer.mjs';\nimport { FieldNode } from './field-node.mjs';\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n */\nexport class RecordBatch {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsRecordBatch(bb, obj) {\n        return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsRecordBatch(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * number of records / rows. The arrays in the batch should all have this\n     * length\n     */\n    length() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    /**\n     * Nodes correspond to the pre-ordered flattened logical schema\n     */\n    nodes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new FieldNode()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n    }\n    nodesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Buffers correspond to the pre-ordered flattened buffer tree\n     *\n     * The number of buffers appended to this list depends on the schema. For\n     * example, most primitive arrays will have 2 buffers, 1 for the validity\n     * bitmap and 1 for the values. For struct arrays, there will only be a\n     * single buffer for the validity (nulls) bitmap\n     */\n    buffers(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new Buffer()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n    }\n    buffersLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Optional compression of the message body\n     */\n    compression(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new BodyCompression()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    static startRecordBatch(builder) {\n        builder.startObject(4);\n    }\n    static addLength(builder, length) {\n        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n    }\n    static addNodes(builder, nodesOffset) {\n        builder.addFieldOffset(1, nodesOffset, 0);\n    }\n    static startNodesVector(builder, numElems) {\n        builder.startVector(16, numElems, 8);\n    }\n    static addBuffers(builder, buffersOffset) {\n        builder.addFieldOffset(2, buffersOffset, 0);\n    }\n    static startBuffersVector(builder, numElems) {\n        builder.startVector(16, numElems, 8);\n    }\n    static addCompression(builder, compressionOffset) {\n        builder.addFieldOffset(3, compressionOffset, 0);\n    }\n    static endRecordBatch(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\n\n//# sourceMappingURL=record-batch.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { RecordBatch } from './record-batch.mjs';\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n */\nexport class DictionaryBatch {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDictionaryBatch(bb, obj) {\n        return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDictionaryBatch(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    id() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    data(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new RecordBatch()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * If isDelta is true the values in the dictionary are to be appended to a\n     * dictionary with the indicated id. If isDelta is false this dictionary\n     * should replace the existing dictionary.\n     */\n    isDelta() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startDictionaryBatch(builder) {\n        builder.startObject(3);\n    }\n    static addId(builder, id) {\n        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n    }\n    static addData(builder, dataOffset) {\n        builder.addFieldOffset(1, dataOffset, 0);\n    }\n    static addIsDelta(builder, isDelta) {\n        builder.addFieldInt8(2, +isDelta, +false);\n    }\n    static endDictionaryBatch(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\n\n//# sourceMappingURL=dictionary-batch.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { Precision } from './precision.mjs';\nexport class FloatingPoint {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFloatingPoint(bb, obj) {\n        return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFloatingPoint(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    precision() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : Precision.HALF;\n    }\n    static startFloatingPoint(builder) {\n        builder.startObject(1);\n    }\n    static addPrecision(builder, precision) {\n        builder.addFieldInt16(0, precision, Precision.HALF);\n    }\n    static endFloatingPoint(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createFloatingPoint(builder, precision) {\n        FloatingPoint.startFloatingPoint(builder);\n        FloatingPoint.addPrecision(builder, precision);\n        return FloatingPoint.endFloatingPoint(builder);\n    }\n}\n\n//# sourceMappingURL=floating-point.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * Exact decimal value represented as an integer value in two's\n * complement. Currently only 128-bit (16-byte) and 256-bit (32-byte) integers\n * are used. The representation uses the endianness indicated\n * in the Schema.\n */\nexport class Decimal {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDecimal(bb, obj) {\n        return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDecimal(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Total number of decimal digits\n     */\n    precision() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Number of digits after the decimal point \".\"\n     */\n    scale() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Number of bits per value. The only accepted widths are 128 and 256.\n     * We use bitWidth for consistency with Int::bitWidth.\n     */\n    bitWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 128;\n    }\n    static startDecimal(builder) {\n        builder.startObject(3);\n    }\n    static addPrecision(builder, precision) {\n        builder.addFieldInt32(0, precision, 0);\n    }\n    static addScale(builder, scale) {\n        builder.addFieldInt32(1, scale, 0);\n    }\n    static addBitWidth(builder, bitWidth) {\n        builder.addFieldInt32(2, bitWidth, 128);\n    }\n    static endDecimal(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createDecimal(builder, precision, scale, bitWidth) {\n        Decimal.startDecimal(builder);\n        Decimal.addPrecision(builder, precision);\n        Decimal.addScale(builder, scale);\n        Decimal.addBitWidth(builder, bitWidth);\n        return Decimal.endDecimal(builder);\n    }\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { DateUnit } from './date-unit.mjs';\n/**\n * Date is either a 32-bit or 64-bit signed integer type representing an\n * elapsed time since UNIX epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n */\nexport class Date {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDate(bb, obj) {\n        return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDate(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : DateUnit.MILLISECOND;\n    }\n    static startDate(builder) {\n        builder.startObject(1);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, DateUnit.MILLISECOND);\n    }\n    static endDate(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createDate(builder, unit) {\n        Date.startDate(builder);\n        Date.addUnit(builder, unit);\n        return Date.endDate(builder);\n    }\n}\n\n//# sourceMappingURL=date.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { TimeUnit } from './time-unit.mjs';\n/**\n * Time is either a 32-bit or 64-bit signed integer type representing an\n * elapsed time since midnight, stored in either of four units: seconds,\n * milliseconds, microseconds or nanoseconds.\n *\n * The integer `bitWidth` depends on the `unit` and must be one of the following:\n * * SECOND and MILLISECOND: 32 bits\n * * MICROSECOND and NANOSECOND: 64 bits\n *\n * The allowed values are between 0 (inclusive) and 86400 (=24*60*60) seconds\n * (exclusive), adjusted for the time unit (for example, up to 86400000\n * exclusive for the MILLISECOND unit).\n * This definition doesn't allow for leap seconds. Time values from\n * measurements with leap seconds will need to be corrected when ingesting\n * into Arrow (for example by replacing the value 86400 with 86399).\n */\nexport class Time {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsTime(bb, obj) {\n        return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsTime(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : TimeUnit.MILLISECOND;\n    }\n    bitWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n    }\n    static startTime(builder) {\n        builder.startObject(2);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, TimeUnit.MILLISECOND);\n    }\n    static addBitWidth(builder, bitWidth) {\n        builder.addFieldInt32(1, bitWidth, 32);\n    }\n    static endTime(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createTime(builder, unit, bitWidth) {\n        Time.startTime(builder);\n        Time.addUnit(builder, unit);\n        Time.addBitWidth(builder, bitWidth);\n        return Time.endTime(builder);\n    }\n}\n\n//# sourceMappingURL=time.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { TimeUnit } from './time-unit.mjs';\n/**\n * Timestamp is a 64-bit signed integer representing an elapsed time since a\n * fixed epoch, stored in either of four units: seconds, milliseconds,\n * microseconds or nanoseconds, and is optionally annotated with a timezone.\n *\n * Timestamp values do not include any leap seconds (in other words, all\n * days are considered 86400 seconds long).\n *\n * Timestamps with a non-empty timezone\n * ------------------------------------\n *\n * If a Timestamp column has a non-empty timezone value, its epoch is\n * 1970-01-01 00:00:00 (January 1st 1970, midnight) in the *UTC* timezone\n * (the Unix epoch), regardless of the Timestamp's own timezone.\n *\n * Therefore, timestamp values with a non-empty timezone correspond to\n * physical points in time together with some additional information about\n * how the data was obtained and/or how to display it (the timezone).\n *\n *   For example, the timestamp value 0 with the timezone string \"Europe/Paris\"\n *   corresponds to \"January 1st 1970, 00h00\" in the UTC timezone, but the\n *   application may prefer to display it as \"January 1st 1970, 01h00\" in\n *   the Europe/Paris timezone (which is the same physical point in time).\n *\n * One consequence is that timestamp values with a non-empty timezone\n * can be compared and ordered directly, since they all share the same\n * well-known point of reference (the Unix epoch).\n *\n * Timestamps with an unset / empty timezone\n * -----------------------------------------\n *\n * If a Timestamp column has no timezone value, its epoch is\n * 1970-01-01 00:00:00 (January 1st 1970, midnight) in an *unknown* timezone.\n *\n * Therefore, timestamp values without a timezone cannot be meaningfully\n * interpreted as physical points in time, but only as calendar / clock\n * indications (\"wall clock time\") in an unspecified timezone.\n *\n *   For example, the timestamp value 0 with an empty timezone string\n *   corresponds to \"January 1st 1970, 00h00\" in an unknown timezone: there\n *   is not enough information to interpret it as a well-defined physical\n *   point in time.\n *\n * One consequence is that timestamp values without a timezone cannot\n * be reliably compared or ordered, since they may have different points of\n * reference.  In particular, it is *not* possible to interpret an unset\n * or empty timezone as the same as \"UTC\".\n *\n * Conversion between timezones\n * ----------------------------\n *\n * If a Timestamp column has a non-empty timezone, changing the timezone\n * to a different non-empty value is a metadata-only operation:\n * the timestamp values need not change as their point of reference remains\n * the same (the Unix epoch).\n *\n * However, if a Timestamp column has no timezone value, changing it to a\n * non-empty value requires to think about the desired semantics.\n * One possibility is to assume that the original timestamp values are\n * relative to the epoch of the timezone being set; timestamp values should\n * then adjusted to the Unix epoch (for example, changing the timezone from\n * empty to \"Europe/Paris\" would require converting the timestamp values\n * from \"Europe/Paris\" to \"UTC\", which seems counter-intuitive but is\n * nevertheless correct).\n *\n * Guidelines for encoding data from external libraries\n * ----------------------------------------------------\n *\n * Date & time libraries often have multiple different data types for temporal\n * data. In order to ease interoperability between different implementations the\n * Arrow project has some recommendations for encoding these types into a Timestamp\n * column.\n *\n * An \"instant\" represents a physical point in time that has no relevant timezone\n * (for example, astronomical data). To encode an instant, use a Timestamp with\n * the timezone string set to \"UTC\", and make sure the Timestamp values\n * are relative to the UTC epoch (January 1st 1970, midnight).\n *\n * A \"zoned date-time\" represents a physical point in time annotated with an\n * informative timezone (for example, the timezone in which the data was\n * recorded).  To encode a zoned date-time, use a Timestamp with the timezone\n * string set to the name of the timezone, and make sure the Timestamp values\n * are relative to the UTC epoch (January 1st 1970, midnight).\n *\n *  (There is some ambiguity between an instant and a zoned date-time with the\n *   UTC timezone.  Both of these are stored the same in Arrow.  Typically,\n *   this distinction does not matter.  If it does, then an application should\n *   use custom metadata or an extension type to distinguish between the two cases.)\n *\n * An \"offset date-time\" represents a physical point in time combined with an\n * explicit offset from UTC.  To encode an offset date-time, use a Timestamp\n * with the timezone string set to the numeric timezone offset string\n * (e.g. \"+03:00\"), and make sure the Timestamp values are relative to\n * the UTC epoch (January 1st 1970, midnight).\n *\n * A \"naive date-time\" (also called \"local date-time\" in some libraries)\n * represents a wall clock time combined with a calendar date, but with\n * no indication of how to map this information to a physical point in time.\n * Naive date-times must be handled with care because of this missing\n * information, and also because daylight saving time (DST) may make\n * some values ambiguous or non-existent. A naive date-time may be\n * stored as a struct with Date and Time fields. However, it may also be\n * encoded into a Timestamp column with an empty timezone. The timestamp\n * values should be computed \"as if\" the timezone of the date-time values\n * was UTC; for example, the naive date-time \"January 1st 1970, 00h00\" would\n * be encoded as timestamp value 0.\n */\nexport class Timestamp {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsTimestamp(bb, obj) {\n        return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsTimestamp(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : TimeUnit.SECOND;\n    }\n    timezone(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static startTimestamp(builder) {\n        builder.startObject(2);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, TimeUnit.SECOND);\n    }\n    static addTimezone(builder, timezoneOffset) {\n        builder.addFieldOffset(1, timezoneOffset, 0);\n    }\n    static endTimestamp(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createTimestamp(builder, unit, timezoneOffset) {\n        Timestamp.startTimestamp(builder);\n        Timestamp.addUnit(builder, unit);\n        Timestamp.addTimezone(builder, timezoneOffset);\n        return Timestamp.endTimestamp(builder);\n    }\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { IntervalUnit } from './interval-unit.mjs';\nexport class Interval {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsInterval(bb, obj) {\n        return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsInterval(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : IntervalUnit.YEAR_MONTH;\n    }\n    static startInterval(builder) {\n        builder.startObject(1);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, IntervalUnit.YEAR_MONTH);\n    }\n    static endInterval(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createInterval(builder, unit) {\n        Interval.startInterval(builder);\n        Interval.addUnit(builder, unit);\n        return Interval.endInterval(builder);\n    }\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { UnionMode } from './union-mode.mjs';\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child `typeIds[offset]` is the id used in the type vector\n */\nexport class Union {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsUnion(bb, obj) {\n        return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsUnion(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    mode() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : UnionMode.Sparse;\n    }\n    typeIds(index) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n    typeIdsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    typeIdsArray() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n    }\n    static startUnion(builder) {\n        builder.startObject(2);\n    }\n    static addMode(builder, mode) {\n        builder.addFieldInt16(0, mode, UnionMode.Sparse);\n    }\n    static addTypeIds(builder, typeIdsOffset) {\n        builder.addFieldOffset(1, typeIdsOffset, 0);\n    }\n    static createTypeIdsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt32(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startTypeIdsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endUnion(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createUnion(builder, mode, typeIdsOffset) {\n        Union.startUnion(builder);\n        Union.addMode(builder, mode);\n        Union.addTypeIds(builder, typeIdsOffset);\n        return Union.endUnion(builder);\n    }\n}\n\n//# sourceMappingURL=union.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class FixedSizeBinary {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFixedSizeBinary(bb, obj) {\n        return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFixedSizeBinary(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Number of bytes per value\n     */\n    byteWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    static startFixedSizeBinary(builder) {\n        builder.startObject(1);\n    }\n    static addByteWidth(builder, byteWidth) {\n        builder.addFieldInt32(0, byteWidth, 0);\n    }\n    static endFixedSizeBinary(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createFixedSizeBinary(builder, byteWidth) {\n        FixedSizeBinary.startFixedSizeBinary(builder);\n        FixedSizeBinary.addByteWidth(builder, byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(builder);\n    }\n}\n\n//# sourceMappingURL=fixed-size-binary.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class FixedSizeList {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFixedSizeList(bb, obj) {\n        return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFixedSizeList(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Number of list items per value\n     */\n    listSize() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    static startFixedSizeList(builder) {\n        builder.startObject(1);\n    }\n    static addListSize(builder, listSize) {\n        builder.addFieldInt32(0, listSize, 0);\n    }\n    static endFixedSizeList(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createFixedSizeList(builder, listSize) {\n        FixedSizeList.startFixedSizeList(builder);\n        FixedSizeList.addListSize(builder, listSize);\n        return FixedSizeList.endFixedSizeList(builder);\n    }\n}\n\n//# sourceMappingURL=fixed-size-list.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entries: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field.\n *\n * In a field with Map type, the field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entries\", \"key\", and \"value\", but this is\n * not enforced.\n *\n * Map\n * ```text\n *   - child[0] entries: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n * ```\n * Neither the \"entries\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n */\nexport class Map {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsMap(bb, obj) {\n        return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsMap(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Set to true if the keys within each value are sorted\n     */\n    keysSorted() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startMap(builder) {\n        builder.startObject(1);\n    }\n    static addKeysSorted(builder, keysSorted) {\n        builder.addFieldInt8(0, +keysSorted, +false);\n    }\n    static endMap(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createMap(builder, keysSorted) {\n        Map.startMap(builder);\n        Map.addKeysSorted(builder, keysSorted);\n        return Map.endMap(builder);\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { KeyValue } from './key-value.mjs';\nimport { MessageHeader } from './message-header.mjs';\nimport { MetadataVersion } from './metadata-version.mjs';\nexport class Message {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsMessage(bb, obj) {\n        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsMessage(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    version() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : MetadataVersion.V1;\n    }\n    headerType() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : MessageHeader.NONE;\n    }\n    // @ts-ignore\n    header(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    bodyLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startMessage(builder) {\n        builder.startObject(5);\n    }\n    static addVersion(builder, version) {\n        builder.addFieldInt16(0, version, MetadataVersion.V1);\n    }\n    static addHeaderType(builder, headerType) {\n        builder.addFieldInt8(1, headerType, MessageHeader.NONE);\n    }\n    static addHeader(builder, headerOffset) {\n        builder.addFieldOffset(2, headerOffset, 0);\n    }\n    static addBodyLength(builder, bodyLength) {\n        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(4, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endMessage(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static finishMessageBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedMessageBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n        Message.startMessage(builder);\n        Message.addVersion(builder, version);\n        Message.addHeaderType(builder, headerType);\n        Message.addHeader(builder, headerOffset);\n        Message.addBodyLength(builder, bodyLength);\n        Message.addCustomMetadata(builder, customMetadataOffset);\n        return Message.endMessage(builder);\n    }\n}\n\n//# sourceMappingURL=message.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * These are stored in the flatbuffer in the Type union below\n */\nexport class Null {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsNull(bb, obj) {\n        return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsNull(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startNull(builder) {\n        builder.startObject(0);\n    }\n    static endNull(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createNull(builder) {\n        Null.startNull(builder);\n        return Null.endNull(builder);\n    }\n}\n\n//# sourceMappingURL=null.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * Opaque binary data\n */\nexport class Binary {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBinary(bb, obj) {\n        return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBinary(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startBinary(builder) {\n        builder.startObject(0);\n    }\n    static endBinary(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBinary(builder) {\n        Binary.startBinary(builder);\n        return Binary.endBinary(builder);\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class Bool {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBool(bb, obj) {\n        return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBool(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startBool(builder) {\n        builder.startObject(0);\n    }\n    static endBool(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBool(builder) {\n        Bool.startBool(builder);\n        return Bool.endBool(builder);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * Unicode with UTF-8 encoding\n */\nexport class Utf8 {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsUtf8(bb, obj) {\n        return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsUtf8(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startUtf8(builder) {\n        builder.startObject(0);\n    }\n    static endUtf8(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createUtf8(builder) {\n        Utf8.startUtf8(builder);\n        return Utf8.endUtf8(builder);\n    }\n}\n\n//# sourceMappingURL=utf8.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class List {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsList(bb, obj) {\n        return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsList(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startList(builder) {\n        builder.startObject(0);\n    }\n    static endList(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createList(builder) {\n        List.startList(builder);\n        return List.endList(builder);\n    }\n}\n\n//# sourceMappingURL=list.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n */\nexport class Struct_ {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsStruct_(bb, obj) {\n        return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsStruct_(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startStruct_(builder) {\n        builder.startObject(0);\n    }\n    static endStruct_(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createStruct_(builder) {\n        Struct_.startStruct_(builder);\n        return Struct_.endStruct_(builder);\n    }\n}\n\n//# sourceMappingURL=struct_.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as flatbuffers from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport { Visitor } from '../visitor.mjs';\nimport { Null } from '../fb/null.mjs';\nimport { Int } from '../fb/int.mjs';\nimport { FloatingPoint } from '../fb/floating-point.mjs';\nimport { Binary } from '../fb/binary.mjs';\nimport { Bool } from '../fb/bool.mjs';\nimport { Utf8 } from '../fb/utf8.mjs';\nimport { Decimal } from '../fb/decimal.mjs';\nimport { Date } from '../fb/date.mjs';\nimport { Time } from '../fb/time.mjs';\nimport { Timestamp } from '../fb/timestamp.mjs';\nimport { Interval } from '../fb/interval.mjs';\nimport { List } from '../fb/list.mjs';\nimport { Struct_ as Struct } from '../fb/struct_.mjs';\nimport { Union } from '../fb/union.mjs';\nimport { DictionaryEncoding } from '../fb/dictionary-encoding.mjs';\nimport { FixedSizeBinary } from '../fb/fixed-size-binary.mjs';\nimport { FixedSizeList } from '../fb/fixed-size-list.mjs';\nimport { Map as Map_ } from '../fb/map.mjs';\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        Decimal.addBitWidth(b, node.bitWidth);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* eslint-disable brace-style */\nimport { Schema, Field } from '../../schema.mjs';\nimport { Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type.mjs';\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message.mjs';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum.mjs';\n/** @ignore */\nexport function schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\n/** @ignore */\nexport function recordBatchFromJSON(b) {\n    return new RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\n/** @ignore */\nexport function dictionaryBatchFromJSON(b) {\n    return new DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nexport function fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new Null();\n        case 'null': return new Null();\n        case 'binary': return new Binary();\n        case 'utf8': return new Utf8();\n        case 'bool': return new Bool();\n        case 'list': return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision'], t['bitWidth']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* eslint-disable brace-style */\nimport * as flatbuffers from 'flatbuffers';\nimport { Schema as _Schema } from '../../fb/schema.mjs';\nimport { Int as _Int } from '../../fb/int.mjs';\nimport { RecordBatch as _RecordBatch } from '../../fb/record-batch.mjs';\nimport { DictionaryBatch as _DictionaryBatch } from '../../fb/dictionary-batch.mjs';\nimport { Buffer as _Buffer } from '../../fb/buffer.mjs';\nimport { Field as _Field } from '../../fb/field.mjs';\nimport { FieldNode as _FieldNode } from '../../fb/field-node.mjs';\nimport { Type } from '../../fb/type.mjs';\nimport { KeyValue as _KeyValue } from '../../fb/key-value.mjs';\nimport { Endianness as _Endianness } from '../../fb/endianness.mjs';\nimport { FloatingPoint as _FloatingPoint } from '../../fb/floating-point.mjs';\nimport { Decimal as _Decimal } from '../../fb/decimal.mjs';\nimport { Date as _Date } from '../../fb/date.mjs';\nimport { Time as _Time } from '../../fb/time.mjs';\nimport { Timestamp as _Timestamp } from '../../fb/timestamp.mjs';\nimport { Interval as _Interval } from '../../fb/interval.mjs';\nimport { Union as _Union } from '../../fb/union.mjs';\nimport { FixedSizeBinary as _FixedSizeBinary } from '../../fb/fixed-size-binary.mjs';\nimport { FixedSizeList as _FixedSizeList } from '../../fb/fixed-size-list.mjs';\nimport { Map as _Map } from '../../fb/map.mjs';\nimport { Message as _Message } from '../../fb/message.mjs';\nimport { Schema, Field } from '../../schema.mjs';\nimport { toUint8Array } from '../../util/buffer.mjs';\nimport { MessageHeader, MetadataVersion } from '../../enum.mjs';\nimport { instance as typeAssembler } from '../../visitor/typeassembler.mjs';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json.mjs';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { DataType, Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type.mjs';\n/**\n * @ignore\n * @private\n **/\nexport class Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        const b = new Builder();\n        let headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === MessageHeader.DictionaryBatch; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema()));\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = MetadataVersion.V4) {\n    if (batch.compression() !== null) {\n        throw new Error('Record batch compression not implemented');\n    }\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = Math.trunc(parent.customMetadataLength()); ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type['NONE']: return new Null();\n        case Type['Null']: return new Null();\n        case Type['Binary']: return new Binary();\n        case Type['Utf8']: return new Utf8();\n        case Type['Bool']: return new Bool();\n        case Type['List']: return new List((children || [])[0]);\n        case Type['Struct_']: return new Struct(children || []);\n    }\n    switch (typeId) {\n        case Type['Int']: {\n            const t = f.type(new _Int());\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type['FloatingPoint']: {\n            const t = f.type(new _FloatingPoint());\n            return new Float(t.precision());\n        }\n        case Type['Decimal']: {\n            const t = f.type(new _Decimal());\n            return new Decimal(t.scale(), t.precision(), t.bitWidth());\n        }\n        case Type['Date']: {\n            const t = f.type(new _Date());\n            return new Date_(t.unit());\n        }\n        case Type['Time']: {\n            const t = f.type(new _Time());\n            return new Time(t.unit(), t.bitWidth());\n        }\n        case Type['Timestamp']: {\n            const t = f.type(new _Timestamp());\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type['Interval']: {\n            const t = f.type(new _Interval());\n            return new Interval(t.unit());\n        }\n        case Type['Union']: {\n            const t = f.type(new _Union());\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type['FixedSizeBinary']: {\n            const t = f.type(new _FixedSizeBinary());\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type['FixedSizeList']: {\n            const t = f.type(new _FixedSizeList());\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type['Map']: {\n            const t = f.type(new _Map());\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    const type = field.type;\n    let typeId = field.typeId;\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b);\n        typeOffset = typeAssembler.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    for (const n of nodes.slice().reverse())\n        FieldNode.encode(b, n);\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    for (const b_ of buffers.slice().reverse())\n        BufferRegion.encode(b, b_);\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (() => {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __awaiter } from \"tslib\";\nimport { MessageHeader } from '../enum.mjs';\nimport { ByteBuffer } from 'flatbuffers';\nimport { Message } from './metadata/message.mjs';\nimport { isFileHandle } from '../util/compat.mjs';\nimport { AsyncRandomAccessFile } from '../io/file.mjs';\nimport { toUint8Array } from '../util/buffer.mjs';\nimport { ByteStream, AsyncByteStream } from '../io/stream.mjs';\nimport { ArrowJSON, ITERATOR_DONE } from '../io/interfaces.mjs';\n/** @ignore */ const invalidMessageType = (type) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nexport class MessageReader {\n    constructor(source) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message === null || message === void 0 ? void 0 : message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = (bb === null || bb === void 0 ? void 0 : bb.readInt32(0)) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n                ? new AsyncRandomAccessFile(source, byteLength)\n                : new AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let r;\n            if ((r = yield this.readMetadataLength()).done) {\n                return ITERATOR_DONE;\n            }\n            // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n            // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n            // pre-v0.15 message, where the first 4 bytes are the metadata length.\n            if ((r.value === -1) &&\n                (r = yield this.readMetadataLength()).done) {\n                return ITERATOR_DONE;\n            }\n            if ((r = yield this.readMetadata(r.value)).done) {\n                return ITERATOR_DONE;\n            }\n            return r;\n        });\n    }\n    throw(value) {\n        return __awaiter(this, void 0, void 0, function* () { return yield this.source.throw(value); });\n    }\n    return(value) {\n        return __awaiter(this, void 0, void 0, function* () { return yield this.source.return(value); });\n    }\n    readMessage(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let r;\n            if ((r = yield this.next()).done) {\n                return null;\n            }\n            if ((type != null) && r.value.headerType !== type) {\n                throw new Error(invalidMessageType(type));\n            }\n            return r.value;\n        });\n    }\n    readMessageBody(bodyLength) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (bodyLength <= 0) {\n                return new Uint8Array(0);\n            }\n            const buf = toUint8Array(yield this.source.read(bodyLength));\n            if (buf.byteLength < bodyLength) {\n                throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n            }\n            // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n            // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n            return /* 1. */ (buf.byteOffset % 8 === 0) &&\n                /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n        });\n    }\n    readSchema(throwIfNull = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const type = MessageHeader.Schema;\n            const message = yield this.readMessage(type);\n            const schema = message === null || message === void 0 ? void 0 : message.header();\n            if (throwIfNull && !schema) {\n                throw new Error(nullMessage(type));\n            }\n            return schema;\n        });\n    }\n    readMetadataLength() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buf = yield this.source.read(PADDING);\n            const bb = buf && new ByteBuffer(buf);\n            const len = (bb === null || bb === void 0 ? void 0 : bb.readInt32(0)) || 0;\n            return { done: len === 0, value: len };\n        });\n    }\n    readMetadata(metadataLength) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buf = yield this.source.read(metadataLength);\n            if (!buf) {\n                return ITERATOR_DONE;\n            }\n            if (buf.byteLength < metadataLength) {\n                throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n            }\n            return { done: false, value: Message.decode(buf) };\n        });\n    }\n}\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message === null || message === void 0 ? void 0 : message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (let i = 0; i < MAGIC_STR.length; i += 1) {\n    MAGIC[i] = MAGIC_STR.codePointAt(i);\n}\n/** @ignore */\nexport function checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter } from \"tslib\";\nimport { makeData } from '../data.mjs';\nimport { Vector } from '../vector.mjs';\nimport { Struct } from '../type.mjs';\nimport { MessageHeader } from '../enum.mjs';\nimport { Footer } from './metadata/file.mjs';\nimport streamAdapters from '../io/adapters.mjs';\nimport { ByteStream, AsyncByteStream } from '../io/stream.mjs';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file.mjs';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader.mjs';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch.mjs';\nimport { ITERATOR_DONE, ReadableInterop, } from '../io/interfaces.mjs';\nimport { MessageReader, AsyncMessageReader, JSONMessageReader, checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding } from './message.mjs';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isArrowJSON, isFileHandle, isFetchResponse, isReadableDOMStream, isReadableNodeStream } from '../util/compat.mjs';\nexport class RecordBatchReader extends ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return streamAdapters.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return streamAdapters.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if (isArrowJSON(source)) {\n            return fromArrowJSON(source);\n        }\n        else if (isFileHandle(source)) {\n            return fromFileHandle(source);\n        }\n        else if (isPromise(source)) {\n            return (() => __awaiter(this, void 0, void 0, function* () { return yield RecordBatchReader.from(yield source); }))();\n        }\n        else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream(new AsyncByteStream(source));\n        }\n        return fromByteStream(new ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable(source) || isIteratorResult(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nexport class RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    readAll() { return [...this]; }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    [Symbol.asyncIterator]() { return __asyncGenerator(this, arguments, function* _a() { yield __await(yield* __asyncDelegator(__asyncValues(this[Symbol.iterator]()))); }); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    readAll() {\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const batches = new Array();\n            try {\n                for (var _b = __asyncValues(this), _c; _c = yield _b.next(), !_c.done;) {\n                    const batch = _c.value;\n                    batches.push(batch);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return batches;\n        });\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        const children = this._loadVectors(header, body, this.schema.fields);\n        const data = makeData({ type: new Struct(this.schema.fields), length: header.length, children });\n        return new RecordBatch(this.schema, data);\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            const data = this._loadVectors(header.data, body, [type]);\n            return (dictionary && isDelta ? dictionary.concat(new Vector(data)) :\n                new Vector(data)).memoize();\n        }\n        return dictionary.memoize();\n    }\n    _loadVectors(header, body, types) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message;\n        const { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    cancel() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && (this.closed = true)) {\n                yield this.reset()._reader.return();\n                this._reader = null;\n                this.dictionaries = null;\n            }\n        });\n    }\n    open(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.closed) {\n                this.autoDestroy = shouldAutoDestroy(this, options);\n                if (!(this.schema || (this.schema = (yield this._reader.readSchema())))) {\n                    yield this.cancel();\n                }\n            }\n            return this;\n        });\n    }\n    throw(value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && this.autoDestroy && (this.closed = true)) {\n                return yield this.reset()._reader.throw(value);\n            }\n            return ITERATOR_DONE;\n        });\n    }\n    return(value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && this.autoDestroy && (this.closed = true)) {\n                return yield this.reset()._reader.return(value);\n            }\n            return ITERATOR_DONE;\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.closed) {\n                return ITERATOR_DONE;\n            }\n            let message;\n            const { _reader: reader } = this;\n            while (message = yield this._readNextMessageAndValidate()) {\n                if (message.isSchema()) {\n                    yield this.reset(message.header());\n                }\n                else if (message.isRecordBatch()) {\n                    this._recordBatchIndex++;\n                    const header = message.header();\n                    const buffer = yield reader.readMessageBody(message.bodyLength);\n                    const recordBatch = this._loadRecordBatch(header, buffer);\n                    return { done: false, value: recordBatch };\n                }\n                else if (message.isDictionaryBatch()) {\n                    this._dictionaryIndex++;\n                    const header = message.header();\n                    const buffer = yield reader.readMessageBody(message.bodyLength);\n                    const vector = this._loadDictionaryBatch(header, buffer);\n                    this.dictionaries.set(header.id, vector);\n                }\n            }\n            if (this.schema && this._recordBatchIndex === 0) {\n                this._recordBatchIndex++;\n                return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n            }\n            return yield this.return();\n        });\n    }\n    _readNextMessageAndValidate(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this._reader.readMessage(type);\n        });\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        var _a;\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message === null || message === void 0 ? void 0 : message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        var _a;\n        const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message === null || message === void 0 ? void 0 : message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        var _a;\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    open(options) {\n        const _super = Object.create(null, {\n            open: { get: () => super.open }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && !this._footer) {\n                this.schema = (this._footer = yield this._readFooter()).schema;\n                for (const block of this._footer.dictionaryBatches()) {\n                    block && (yield this._readDictionaryBatch(this._dictionaryIndex++));\n                }\n            }\n            return yield _super.open.call(this, options);\n        });\n    }\n    readRecordBatch(index) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.closed) {\n                return null;\n            }\n            if (!this._footer) {\n                yield this.open();\n            }\n            const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getRecordBatch(index);\n            if (block && (yield this._handle.seek(block.offset))) {\n                const message = yield this._reader.readMessage(MessageHeader.RecordBatch);\n                if (message === null || message === void 0 ? void 0 : message.isRecordBatch()) {\n                    const header = message.header();\n                    const buffer = yield this._reader.readMessageBody(message.bodyLength);\n                    const recordBatch = this._loadRecordBatch(header, buffer);\n                    return recordBatch;\n                }\n            }\n            return null;\n        });\n    }\n    _readDictionaryBatch(index) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getDictionaryBatch(index);\n            if (block && (yield this._handle.seek(block.offset))) {\n                const message = yield this._reader.readMessage(MessageHeader.DictionaryBatch);\n                if (message === null || message === void 0 ? void 0 : message.isDictionaryBatch()) {\n                    const header = message.header();\n                    const buffer = yield this._reader.readMessageBody(message.bodyLength);\n                    const vector = this._loadDictionaryBatch(header, buffer);\n                    this.dictionaries.set(header.id, vector);\n                }\n            }\n        });\n    }\n    _readFooter() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { _handle } = this;\n            _handle._pending && (yield _handle._pending);\n            const offset = _handle.size - magicAndPadding;\n            const length = yield _handle.readInt32(offset);\n            const buffer = yield _handle.readAt(offset - length, length);\n            return Footer.decode(buffer);\n        });\n    }\n    _readNextMessageAndValidate(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._footer) {\n                yield this.open();\n            }\n            if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n                const block = this._footer.getRecordBatch(this._recordBatchIndex);\n                if (block && (yield this._handle.seek(block.offset))) {\n                    return yield this._reader.readMessage(type);\n                }\n            }\n            return null;\n        });\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nfunction readAllAsync(source) {\n    return __asyncGenerator(this, arguments, function* readAllAsync_1() {\n        const reader = yield __await(RecordBatchReader.from(source));\n        try {\n            if (!(yield __await(reader.open({ autoDestroy: false }))).closed) {\n                do {\n                    yield yield __await(reader);\n                } while (!(yield __await(reader.reset().open())).closed);\n            }\n        }\n        finally {\n            yield __await(reader.cancel());\n        }\n    });\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nfunction fromAsyncByteStream(source) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const bytes = yield source.peek((magicLength + 7) & ~7);\n        return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n            ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n            : new RecordBatchFileReader(new RecordBatchFileReaderImpl(yield source.read()))\n            : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(function () { return __asyncGenerator(this, arguments, function* () { }); }()));\n    });\n}\n/** @ignore */\nfunction fromFileHandle(source) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { size } = yield source.stat();\n        const file = new AsyncRandomAccessFile(source, size);\n        if (size >= magicX2AndPadding && checkForMagicArrowString(yield file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n        return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n    });\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __awaiter } from \"tslib\";\nimport { Table } from '../table.mjs';\nimport { isPromise } from '../util/compat.mjs';\nimport { RecordBatchReader } from './reader.mjs';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './writer.mjs';\nexport function tableFromIPC(input) {\n    const reader = RecordBatchReader.from(input);\n    if (isPromise(reader)) {\n        return (() => __awaiter(this, void 0, void 0, function* () { return new Table(yield (yield reader).readAll()); }))();\n    }\n    return new Table(reader.readAll());\n}\n/**\n * Serialize a {@link Table} to the IPC format. This function is a convenience\n * wrapper for {@link RecordBatchStreamWriter} and {@link RecordBatchFileWriter}.\n * Opposite of {@link tableFromIPC}.\n *\n * @param table The Table to serialize.\n * @param type Whether to serialize the Table as a file or a stream.\n */\nexport function tableToIPC(table, type = 'stream') {\n    return (type === 'stream' ? RecordBatchStreamWriter : RecordBatchFileWriter)\n        .writeAll(table)\n        .toUint8Array(true);\n}\n\n//# sourceMappingURL=serialization.mjs.map\n","/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n","/**\n * Copy partial data into the target message.\n *\n * Replaces fields in the target with the fields from the\n * (partial) source.\n *\n * Omitted fields are not replaced.\n * Copies all values.\n * A default value in the source will replace a value in the target.\n *\n * Message fields are recursively merged (by calling `mergePartial()`\n * of the responsible message handler). Map and repeated fields\n * are simply overwritten, not appended or merged.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if (group == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    output[name] = fieldValue.concat(); // elements are not reference types\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n","/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n","import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n","/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n","// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if (bitsHigh <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + bitsLow);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","import { int64fromString, int64toString } from \"./goog-varint\";\nfunction detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    return ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\nconst BI = detectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('ulong too small');\n                    if (value > BI.MAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & 0x80000000) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n","/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n","import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n","import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null`.\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null, `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n","import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n","const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n","import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n","import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n","import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","import { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n","import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    const msg = {};\n    Object.defineProperty(msg, MESSAGE_TYPE, { enumerable: false, value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n","// @generated by protobuf-ts 2.7.0\n// @generated from protobuf file \"schema.proto\" (package \"relationalai.protocol\", syntax proto3)\n// tslint:disable\nimport type { BinaryWriteOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryWriter } from \"@protobuf-ts/runtime\";\nimport { WireType } from \"@protobuf-ts/runtime\";\nimport type { BinaryReadOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryReader } from \"@protobuf-ts/runtime\";\nimport { UnknownFieldHandler } from \"@protobuf-ts/runtime\";\nimport type { PartialMessage } from \"@protobuf-ts/runtime\";\nimport { reflectionMergePartial } from \"@protobuf-ts/runtime\";\nimport { MESSAGE_TYPE } from \"@protobuf-ts/runtime\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * Relations are currently identified by their type signature.\n *\n * @generated from protobuf message relationalai.protocol.RelationId\n */\nexport interface RelationId {\n    /**\n     * @generated from protobuf field: repeated relationalai.protocol.RelType arguments = 1;\n     */\n    arguments: RelType[];\n}\n/**\n * Renamed from Tuple to avoid collision with julia and python `Tuple`.\n * Value types are flattened into their underlying primitive values.\n *\n * @generated from protobuf message relationalai.protocol.RelTuple\n */\nexport interface RelTuple {\n    /**\n     * @generated from protobuf field: repeated relationalai.protocol.PrimitiveValue arguments = 1;\n     */\n    arguments: PrimitiveValue[];\n}\n/**\n * Named this way to avoid collision with julia's Core.{U,}Int128.\n *\n * @generated from protobuf message relationalai.protocol.RelInt128\n */\nexport interface RelInt128 {\n    /**\n     * @generated from protobuf field: uint64 highbits = 1;\n     */\n    highbits: bigint;\n    /**\n     * @generated from protobuf field: uint64 lowbits = 2;\n     */\n    lowbits: bigint;\n}\n/**\n * @generated from protobuf message relationalai.protocol.RelUInt128\n */\nexport interface RelUInt128 {\n    /**\n     * @generated from protobuf field: uint64 highbits = 1;\n     */\n    highbits: bigint;\n    /**\n     * @generated from protobuf field: uint64 lowbits = 2;\n     */\n    lowbits: bigint;\n}\n/**\n * next available: 18\n *\n * @generated from protobuf message relationalai.protocol.PrimitiveValue\n */\nexport interface PrimitiveValue {\n    /**\n     * Type tag indicates which value field is set\n     *\n     * @generated from protobuf field: relationalai.protocol.PrimitiveType tag = 1;\n     */\n    tag: PrimitiveType;\n    /**\n     * @generated from protobuf oneof: value\n     */\n    value: {\n        oneofKind: \"int128Val\";\n        /**\n         * @generated from protobuf field: relationalai.protocol.RelInt128 int128_val = 2;\n         */\n        int128Val: RelInt128; // Not present in protobuf\n    } | {\n        oneofKind: \"int64Val\";\n        /**\n         * @generated from protobuf field: int64 int64_val = 3;\n         */\n        int64Val: bigint;\n    } | {\n        oneofKind: \"int32Val\";\n        /**\n         * @generated from protobuf field: int32 int32_val = 4;\n         */\n        int32Val: number;\n    } | {\n        oneofKind: \"int16Val\";\n        /**\n         * @generated from protobuf field: int32 int16_val = 5;\n         */\n        int16Val: number; // Not present in protobuf; int32\n    } | {\n        oneofKind: \"int8Val\";\n        /**\n         * @generated from protobuf field: int32 int8_val = 6;\n         */\n        int8Val: number; // Not present in protobuf; int32\n    } | {\n        oneofKind: \"uint128Val\";\n        /**\n         * @generated from protobuf field: relationalai.protocol.RelUInt128 uint128_val = 7;\n         */\n        uint128Val: RelUInt128; // Not present in protobuf\n    } | {\n        oneofKind: \"uint64Val\";\n        /**\n         * @generated from protobuf field: uint64 uint64_val = 8;\n         */\n        uint64Val: bigint;\n    } | {\n        oneofKind: \"uint32Val\";\n        /**\n         * @generated from protobuf field: uint32 uint32_val = 9;\n         */\n        uint32Val: number;\n    } | {\n        oneofKind: \"uint16Val\";\n        /**\n         * @generated from protobuf field: uint32 uint16_val = 10;\n         */\n        uint16Val: number; // Not present in protobuf; uint32\n    } | {\n        oneofKind: \"uint8Val\";\n        /**\n         * @generated from protobuf field: uint32 uint8_val = 11;\n         */\n        uint8Val: number; // Not present in protobuf; uint32\n    } | {\n        oneofKind: \"float64Val\";\n        /**\n         * @generated from protobuf field: double float64_val = 12;\n         */\n        float64Val: number;\n    } | {\n        oneofKind: \"float32Val\";\n        /**\n         * @generated from protobuf field: float float32_val = 13;\n         */\n        float32Val: number;\n    } | {\n        oneofKind: \"float16Val\";\n        /**\n         * @generated from protobuf field: float float16_val = 14;\n         */\n        float16Val: number; // Not present in protobuf\n    } | {\n        oneofKind: \"charVal\";\n        /**\n         * @generated from protobuf field: uint32 char_val = 15;\n         */\n        charVal: number;\n    } | {\n        oneofKind: \"boolVal\";\n        /**\n         * @generated from protobuf field: bool bool_val = 16;\n         */\n        boolVal: boolean;\n    } | {\n        oneofKind: \"stringVal\";\n        /**\n         * We use bytes for strings because proto has an encoding\n         * requirement for the proto3::string type.\n         *\n         * @generated from protobuf field: bytes string_val = 17;\n         */\n        stringVal: Uint8Array;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * @generated from protobuf message relationalai.protocol.ValueType\n */\nexport interface ValueType {\n    /**\n     * Constant types are allowed, e.g. the `64` in `decimal[64]`. They serve as type\n     * parameters.\n     *\n     * @generated from protobuf field: repeated relationalai.protocol.RelType argument_types = 1;\n     */\n    argumentTypes: RelType[];\n}\n/**\n * Every value can be used as a type.\n *\n * @generated from protobuf message relationalai.protocol.ConstantType\n */\nexport interface ConstantType {\n    /**\n     * Required\n     * This is the type of the constant and describes whatever is in the RelTuple value\n     *\n     * @generated from protobuf field: relationalai.protocol.RelType rel_type = 1;\n     */\n    relType?: RelType;\n    /**\n     * The tuple contains only the values that are not constant.\n     * E.g. for decimal[64](3.14) only 3.14 is part of the data.\n     * Required\n     *\n     * Tuple because of e.g. specialize on Uniform distribution\n     *\n     * @generated from protobuf field: relationalai.protocol.RelTuple value = 2;\n     */\n    value?: RelTuple;\n}\n/**\n * Union\n *\n * @generated from protobuf message relationalai.protocol.RelType\n */\nexport interface RelType {\n    /**\n     * @generated from protobuf field: relationalai.protocol.Kind tag = 1;\n     */\n    tag: Kind;\n    /**\n     * Only one of the following is allowed.\n     *\n     * @generated from protobuf field: relationalai.protocol.PrimitiveType primitive_type = 2;\n     */\n    primitiveType: PrimitiveType;\n    /**\n     * @generated from protobuf field: relationalai.protocol.ValueType value_type = 3;\n     */\n    valueType?: ValueType;\n    /**\n     * @generated from protobuf field: relationalai.protocol.ConstantType constant_type = 4;\n     */\n    constantType?: ConstantType;\n}\n/**\n * next available: 19\n *\n * @generated from protobuf enum relationalai.protocol.PrimitiveType\n */\nexport enum PrimitiveType {\n    /**\n     * https://developers.google.com/protocol-buffers/docs/style#enums\n     *\n     * @generated from protobuf enum value: UNSPECIFIED_TYPE = 0;\n     */\n    UNSPECIFIED_TYPE = 0,\n    /**\n     * Not present in protobuf, needs two 64-bit ints\n     *\n     * @generated from protobuf enum value: INT_128 = 1;\n     */\n    INT_128 = 1,\n    /**\n     * @generated from protobuf enum value: INT_64 = 2;\n     */\n    INT_64 = 2,\n    /**\n     * @generated from protobuf enum value: INT_32 = 3;\n     */\n    INT_32 = 3,\n    /**\n     * Not present in protobuf\n     *\n     * @generated from protobuf enum value: INT_16 = 4;\n     */\n    INT_16 = 4,\n    /**\n     * Not present in protobuf\n     *\n     * @generated from protobuf enum value: INT_8 = 5;\n     */\n    INT_8 = 5,\n    /**\n     * Not present in protobuf, needs two 64-bit ints\n     *\n     * @generated from protobuf enum value: UINT_128 = 6;\n     */\n    UINT_128 = 6,\n    /**\n     * @generated from protobuf enum value: UINT_64 = 7;\n     */\n    UINT_64 = 7,\n    /**\n     * @generated from protobuf enum value: UINT_32 = 8;\n     */\n    UINT_32 = 8,\n    /**\n     * Not present in protobuf\n     *\n     * @generated from protobuf enum value: UINT_16 = 9;\n     */\n    UINT_16 = 9,\n    /**\n     * Not present in protobuf\n     *\n     * @generated from protobuf enum value: UINT_8 = 10;\n     */\n    UINT_8 = 10,\n    /**\n     * @generated from protobuf enum value: FLOAT_64 = 11;\n     */\n    FLOAT_64 = 11,\n    /**\n     * @generated from protobuf enum value: FLOAT_32 = 12;\n     */\n    FLOAT_32 = 12,\n    /**\n     * Not present in protobuf\n     *\n     * @generated from protobuf enum value: FLOAT_16 = 13;\n     */\n    FLOAT_16 = 13,\n    /**\n     * @generated from protobuf enum value: CHAR = 14;\n     */\n    CHAR = 14,\n    /**\n     * @generated from protobuf enum value: BOOL = 15;\n     */\n    BOOL = 15,\n    /**\n     * these share the string_val field\n     *\n     * In protobuf this is really bytes.\n     *\n     * @generated from protobuf enum value: STRING = 16;\n     */\n    STRING = 16,\n    /**\n     * In protobuf this is really bytes.\n     *\n     * @generated from protobuf enum value: SYMBOL = 17;\n     */\n    SYMBOL = 17,\n    /**\n     * VariableSizeStrings are not supported as PrimitiveValues, though the type can\n     * show up in (internal) type signatures.\n     *\n     * @generated from protobuf enum value: VARIABLE_SIZE_STRING = 18;\n     */\n    VARIABLE_SIZE_STRING = 18\n}\n/**\n * @generated from protobuf enum relationalai.protocol.Kind\n */\nexport enum Kind {\n    /**\n     * https://developers.google.com/protocol-buffers/docs/style#enums\n     *\n     * @generated from protobuf enum value: UNSPECIFIED_KIND = 0;\n     */\n    UNSPECIFIED_KIND = 0,\n    /**\n     * @generated from protobuf enum value: PRIMITIVE_TYPE = 1;\n     */\n    PRIMITIVE_TYPE = 1,\n    /**\n     * @generated from protobuf enum value: VALUE_TYPE = 2;\n     */\n    VALUE_TYPE = 2,\n    /**\n     * @generated from protobuf enum value: CONSTANT_TYPE = 3;\n     */\n    CONSTANT_TYPE = 3\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass RelationId$Type extends MessageType<RelationId> {\n    constructor() {\n        super(\"relationalai.protocol.RelationId\", [\n            { no: 1, name: \"arguments\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => RelType }\n        ]);\n    }\n    create(value?: PartialMessage<RelationId>): RelationId {\n        const message = { arguments: [] };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<RelationId>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RelationId): RelationId {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* repeated relationalai.protocol.RelType arguments */ 1:\n                    message.arguments.push(RelType.internalBinaryRead(reader, reader.uint32(), options));\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: RelationId, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* repeated relationalai.protocol.RelType arguments = 1; */\n        for (let i = 0; i < message.arguments.length; i++)\n            RelType.internalBinaryWrite(message.arguments[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.RelationId\n */\nexport const RelationId = new RelationId$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RelTuple$Type extends MessageType<RelTuple> {\n    constructor() {\n        super(\"relationalai.protocol.RelTuple\", [\n            { no: 1, name: \"arguments\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => PrimitiveValue }\n        ]);\n    }\n    create(value?: PartialMessage<RelTuple>): RelTuple {\n        const message = { arguments: [] };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<RelTuple>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RelTuple): RelTuple {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* repeated relationalai.protocol.PrimitiveValue arguments */ 1:\n                    message.arguments.push(PrimitiveValue.internalBinaryRead(reader, reader.uint32(), options));\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: RelTuple, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* repeated relationalai.protocol.PrimitiveValue arguments = 1; */\n        for (let i = 0; i < message.arguments.length; i++)\n            PrimitiveValue.internalBinaryWrite(message.arguments[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.RelTuple\n */\nexport const RelTuple = new RelTuple$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RelInt128$Type extends MessageType<RelInt128> {\n    constructor() {\n        super(\"relationalai.protocol.RelInt128\", [\n            { no: 1, name: \"highbits\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 2, name: \"lowbits\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }\n        ]);\n    }\n    create(value?: PartialMessage<RelInt128>): RelInt128 {\n        const message = { highbits: 0n, lowbits: 0n };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<RelInt128>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RelInt128): RelInt128 {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* uint64 highbits */ 1:\n                    message.highbits = reader.uint64().toBigInt();\n                    break;\n                case /* uint64 lowbits */ 2:\n                    message.lowbits = reader.uint64().toBigInt();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: RelInt128, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* uint64 highbits = 1; */\n        if (message.highbits !== 0n)\n            writer.tag(1, WireType.Varint).uint64(message.highbits);\n        /* uint64 lowbits = 2; */\n        if (message.lowbits !== 0n)\n            writer.tag(2, WireType.Varint).uint64(message.lowbits);\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.RelInt128\n */\nexport const RelInt128 = new RelInt128$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RelUInt128$Type extends MessageType<RelUInt128> {\n    constructor() {\n        super(\"relationalai.protocol.RelUInt128\", [\n            { no: 1, name: \"highbits\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 2, name: \"lowbits\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }\n        ]);\n    }\n    create(value?: PartialMessage<RelUInt128>): RelUInt128 {\n        const message = { highbits: 0n, lowbits: 0n };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<RelUInt128>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RelUInt128): RelUInt128 {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* uint64 highbits */ 1:\n                    message.highbits = reader.uint64().toBigInt();\n                    break;\n                case /* uint64 lowbits */ 2:\n                    message.lowbits = reader.uint64().toBigInt();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: RelUInt128, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* uint64 highbits = 1; */\n        if (message.highbits !== 0n)\n            writer.tag(1, WireType.Varint).uint64(message.highbits);\n        /* uint64 lowbits = 2; */\n        if (message.lowbits !== 0n)\n            writer.tag(2, WireType.Varint).uint64(message.lowbits);\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.RelUInt128\n */\nexport const RelUInt128 = new RelUInt128$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PrimitiveValue$Type extends MessageType<PrimitiveValue> {\n    constructor() {\n        super(\"relationalai.protocol.PrimitiveValue\", [\n            { no: 1, name: \"tag\", kind: \"enum\", T: () => [\"relationalai.protocol.PrimitiveType\", PrimitiveType] },\n            { no: 2, name: \"int128_val\", kind: \"message\", oneof: \"value\", T: () => RelInt128 },\n            { no: 3, name: \"int64_val\", kind: \"scalar\", oneof: \"value\", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 4, name: \"int32_val\", kind: \"scalar\", oneof: \"value\", T: 5 /*ScalarType.INT32*/ },\n            { no: 5, name: \"int16_val\", kind: \"scalar\", oneof: \"value\", T: 5 /*ScalarType.INT32*/ },\n            { no: 6, name: \"int8_val\", kind: \"scalar\", oneof: \"value\", T: 5 /*ScalarType.INT32*/ },\n            { no: 7, name: \"uint128_val\", kind: \"message\", oneof: \"value\", T: () => RelUInt128 },\n            { no: 8, name: \"uint64_val\", kind: \"scalar\", oneof: \"value\", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 9, name: \"uint32_val\", kind: \"scalar\", oneof: \"value\", T: 13 /*ScalarType.UINT32*/ },\n            { no: 10, name: \"uint16_val\", kind: \"scalar\", oneof: \"value\", T: 13 /*ScalarType.UINT32*/ },\n            { no: 11, name: \"uint8_val\", kind: \"scalar\", oneof: \"value\", T: 13 /*ScalarType.UINT32*/ },\n            { no: 12, name: \"float64_val\", kind: \"scalar\", oneof: \"value\", T: 1 /*ScalarType.DOUBLE*/ },\n            { no: 13, name: \"float32_val\", kind: \"scalar\", oneof: \"value\", T: 2 /*ScalarType.FLOAT*/ },\n            { no: 14, name: \"float16_val\", kind: \"scalar\", oneof: \"value\", T: 2 /*ScalarType.FLOAT*/ },\n            { no: 15, name: \"char_val\", kind: \"scalar\", oneof: \"value\", T: 13 /*ScalarType.UINT32*/ },\n            { no: 16, name: \"bool_val\", kind: \"scalar\", oneof: \"value\", T: 8 /*ScalarType.BOOL*/ },\n            { no: 17, name: \"string_val\", kind: \"scalar\", oneof: \"value\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n    create(value?: PartialMessage<PrimitiveValue>): PrimitiveValue {\n        const message = { tag: 0, value: { oneofKind: undefined } };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<PrimitiveValue>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PrimitiveValue): PrimitiveValue {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* relationalai.protocol.PrimitiveType tag */ 1:\n                    message.tag = reader.int32();\n                    break;\n                case /* relationalai.protocol.RelInt128 int128_val */ 2:\n                    message.value = {\n                        oneofKind: \"int128Val\",\n                        int128Val: RelInt128.internalBinaryRead(reader, reader.uint32(), options, (message.value as any).int128Val)\n                    };\n                    break;\n                case /* int64 int64_val */ 3:\n                    message.value = {\n                        oneofKind: \"int64Val\",\n                        int64Val: reader.int64().toBigInt()\n                    };\n                    break;\n                case /* int32 int32_val */ 4:\n                    message.value = {\n                        oneofKind: \"int32Val\",\n                        int32Val: reader.int32()\n                    };\n                    break;\n                case /* int32 int16_val */ 5:\n                    message.value = {\n                        oneofKind: \"int16Val\",\n                        int16Val: reader.int32()\n                    };\n                    break;\n                case /* int32 int8_val */ 6:\n                    message.value = {\n                        oneofKind: \"int8Val\",\n                        int8Val: reader.int32()\n                    };\n                    break;\n                case /* relationalai.protocol.RelUInt128 uint128_val */ 7:\n                    message.value = {\n                        oneofKind: \"uint128Val\",\n                        uint128Val: RelUInt128.internalBinaryRead(reader, reader.uint32(), options, (message.value as any).uint128Val)\n                    };\n                    break;\n                case /* uint64 uint64_val */ 8:\n                    message.value = {\n                        oneofKind: \"uint64Val\",\n                        uint64Val: reader.uint64().toBigInt()\n                    };\n                    break;\n                case /* uint32 uint32_val */ 9:\n                    message.value = {\n                        oneofKind: \"uint32Val\",\n                        uint32Val: reader.uint32()\n                    };\n                    break;\n                case /* uint32 uint16_val */ 10:\n                    message.value = {\n                        oneofKind: \"uint16Val\",\n                        uint16Val: reader.uint32()\n                    };\n                    break;\n                case /* uint32 uint8_val */ 11:\n                    message.value = {\n                        oneofKind: \"uint8Val\",\n                        uint8Val: reader.uint32()\n                    };\n                    break;\n                case /* double float64_val */ 12:\n                    message.value = {\n                        oneofKind: \"float64Val\",\n                        float64Val: reader.double()\n                    };\n                    break;\n                case /* float float32_val */ 13:\n                    message.value = {\n                        oneofKind: \"float32Val\",\n                        float32Val: reader.float()\n                    };\n                    break;\n                case /* float float16_val */ 14:\n                    message.value = {\n                        oneofKind: \"float16Val\",\n                        float16Val: reader.float()\n                    };\n                    break;\n                case /* uint32 char_val */ 15:\n                    message.value = {\n                        oneofKind: \"charVal\",\n                        charVal: reader.uint32()\n                    };\n                    break;\n                case /* bool bool_val */ 16:\n                    message.value = {\n                        oneofKind: \"boolVal\",\n                        boolVal: reader.bool()\n                    };\n                    break;\n                case /* bytes string_val */ 17:\n                    message.value = {\n                        oneofKind: \"stringVal\",\n                        stringVal: reader.bytes()\n                    };\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: PrimitiveValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* relationalai.protocol.PrimitiveType tag = 1; */\n        if (message.tag !== 0)\n            writer.tag(1, WireType.Varint).int32(message.tag);\n        /* relationalai.protocol.RelInt128 int128_val = 2; */\n        if (message.value.oneofKind === \"int128Val\")\n            RelInt128.internalBinaryWrite(message.value.int128Val, writer.tag(2, WireType.LengthDelimited).fork(), options).join();\n        /* int64 int64_val = 3; */\n        if (message.value.oneofKind === \"int64Val\")\n            writer.tag(3, WireType.Varint).int64(message.value.int64Val);\n        /* int32 int32_val = 4; */\n        if (message.value.oneofKind === \"int32Val\")\n            writer.tag(4, WireType.Varint).int32(message.value.int32Val);\n        /* int32 int16_val = 5; */\n        if (message.value.oneofKind === \"int16Val\")\n            writer.tag(5, WireType.Varint).int32(message.value.int16Val);\n        /* int32 int8_val = 6; */\n        if (message.value.oneofKind === \"int8Val\")\n            writer.tag(6, WireType.Varint).int32(message.value.int8Val);\n        /* relationalai.protocol.RelUInt128 uint128_val = 7; */\n        if (message.value.oneofKind === \"uint128Val\")\n            RelUInt128.internalBinaryWrite(message.value.uint128Val, writer.tag(7, WireType.LengthDelimited).fork(), options).join();\n        /* uint64 uint64_val = 8; */\n        if (message.value.oneofKind === \"uint64Val\")\n            writer.tag(8, WireType.Varint).uint64(message.value.uint64Val);\n        /* uint32 uint32_val = 9; */\n        if (message.value.oneofKind === \"uint32Val\")\n            writer.tag(9, WireType.Varint).uint32(message.value.uint32Val);\n        /* uint32 uint16_val = 10; */\n        if (message.value.oneofKind === \"uint16Val\")\n            writer.tag(10, WireType.Varint).uint32(message.value.uint16Val);\n        /* uint32 uint8_val = 11; */\n        if (message.value.oneofKind === \"uint8Val\")\n            writer.tag(11, WireType.Varint).uint32(message.value.uint8Val);\n        /* double float64_val = 12; */\n        if (message.value.oneofKind === \"float64Val\")\n            writer.tag(12, WireType.Bit64).double(message.value.float64Val);\n        /* float float32_val = 13; */\n        if (message.value.oneofKind === \"float32Val\")\n            writer.tag(13, WireType.Bit32).float(message.value.float32Val);\n        /* float float16_val = 14; */\n        if (message.value.oneofKind === \"float16Val\")\n            writer.tag(14, WireType.Bit32).float(message.value.float16Val);\n        /* uint32 char_val = 15; */\n        if (message.value.oneofKind === \"charVal\")\n            writer.tag(15, WireType.Varint).uint32(message.value.charVal);\n        /* bool bool_val = 16; */\n        if (message.value.oneofKind === \"boolVal\")\n            writer.tag(16, WireType.Varint).bool(message.value.boolVal);\n        /* bytes string_val = 17; */\n        if (message.value.oneofKind === \"stringVal\")\n            writer.tag(17, WireType.LengthDelimited).bytes(message.value.stringVal);\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.PrimitiveValue\n */\nexport const PrimitiveValue = new PrimitiveValue$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ValueType$Type extends MessageType<ValueType> {\n    constructor() {\n        super(\"relationalai.protocol.ValueType\", [\n            { no: 1, name: \"argument_types\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => RelType }\n        ]);\n    }\n    create(value?: PartialMessage<ValueType>): ValueType {\n        const message = { argumentTypes: [] };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<ValueType>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ValueType): ValueType {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* repeated relationalai.protocol.RelType argument_types */ 1:\n                    message.argumentTypes.push(RelType.internalBinaryRead(reader, reader.uint32(), options));\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ValueType, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* repeated relationalai.protocol.RelType argument_types = 1; */\n        for (let i = 0; i < message.argumentTypes.length; i++)\n            RelType.internalBinaryWrite(message.argumentTypes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.ValueType\n */\nexport const ValueType = new ValueType$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ConstantType$Type extends MessageType<ConstantType> {\n    constructor() {\n        super(\"relationalai.protocol.ConstantType\", [\n            { no: 1, name: \"rel_type\", kind: \"message\", T: () => RelType },\n            { no: 2, name: \"value\", kind: \"message\", T: () => RelTuple }\n        ]);\n    }\n    create(value?: PartialMessage<ConstantType>): ConstantType {\n        const message = {};\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<ConstantType>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConstantType): ConstantType {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* relationalai.protocol.RelType rel_type */ 1:\n                    message.relType = RelType.internalBinaryRead(reader, reader.uint32(), options, message.relType);\n                    break;\n                case /* relationalai.protocol.RelTuple value */ 2:\n                    message.value = RelTuple.internalBinaryRead(reader, reader.uint32(), options, message.value);\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ConstantType, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* relationalai.protocol.RelType rel_type = 1; */\n        if (message.relType)\n            RelType.internalBinaryWrite(message.relType, writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n        /* relationalai.protocol.RelTuple value = 2; */\n        if (message.value)\n            RelTuple.internalBinaryWrite(message.value, writer.tag(2, WireType.LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.ConstantType\n */\nexport const ConstantType = new ConstantType$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RelType$Type extends MessageType<RelType> {\n    constructor() {\n        super(\"relationalai.protocol.RelType\", [\n            { no: 1, name: \"tag\", kind: \"enum\", T: () => [\"relationalai.protocol.Kind\", Kind] },\n            { no: 2, name: \"primitive_type\", kind: \"enum\", T: () => [\"relationalai.protocol.PrimitiveType\", PrimitiveType] },\n            { no: 3, name: \"value_type\", kind: \"message\", T: () => ValueType },\n            { no: 4, name: \"constant_type\", kind: \"message\", T: () => ConstantType }\n        ]);\n    }\n    create(value?: PartialMessage<RelType>): RelType {\n        const message = { tag: 0, primitiveType: 0 };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<RelType>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RelType): RelType {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* relationalai.protocol.Kind tag */ 1:\n                    message.tag = reader.int32();\n                    break;\n                case /* relationalai.protocol.PrimitiveType primitive_type */ 2:\n                    message.primitiveType = reader.int32();\n                    break;\n                case /* relationalai.protocol.ValueType value_type */ 3:\n                    message.valueType = ValueType.internalBinaryRead(reader, reader.uint32(), options, message.valueType);\n                    break;\n                case /* relationalai.protocol.ConstantType constant_type */ 4:\n                    message.constantType = ConstantType.internalBinaryRead(reader, reader.uint32(), options, message.constantType);\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: RelType, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* relationalai.protocol.Kind tag = 1; */\n        if (message.tag !== 0)\n            writer.tag(1, WireType.Varint).int32(message.tag);\n        /* relationalai.protocol.PrimitiveType primitive_type = 2; */\n        if (message.primitiveType !== 0)\n            writer.tag(2, WireType.Varint).int32(message.primitiveType);\n        /* relationalai.protocol.ValueType value_type = 3; */\n        if (message.valueType)\n            ValueType.internalBinaryWrite(message.valueType, writer.tag(3, WireType.LengthDelimited).fork(), options).join();\n        /* relationalai.protocol.ConstantType constant_type = 4; */\n        if (message.constantType)\n            ConstantType.internalBinaryWrite(message.constantType, writer.tag(4, WireType.LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.RelType\n */\nexport const RelType = new RelType$Type();\n","// @generated by protobuf-ts 2.7.0\n// @generated from protobuf file \"message.proto\" (package \"relationalai.protocol\", syntax proto3)\n// tslint:disable\nimport type { BinaryWriteOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryWriter } from \"@protobuf-ts/runtime\";\nimport { WireType } from \"@protobuf-ts/runtime\";\nimport type { BinaryReadOptions } from \"@protobuf-ts/runtime\";\nimport type { IBinaryReader } from \"@protobuf-ts/runtime\";\nimport { UnknownFieldHandler } from \"@protobuf-ts/runtime\";\nimport type { PartialMessage } from \"@protobuf-ts/runtime\";\nimport { reflectionMergePartial } from \"@protobuf-ts/runtime\";\nimport { MESSAGE_TYPE } from \"@protobuf-ts/runtime\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { RelationId } from \"./schema\";\n/**\n * Describes metadata of a set of relations.\n *\n * @generated from protobuf message relationalai.protocol.MetadataInfo\n */\nexport interface MetadataInfo {\n    /**\n     * @generated from protobuf field: repeated relationalai.protocol.RelationMetadata relations = 1;\n     */\n    relations: RelationMetadata[];\n}\n/**\n * Describes metadata of a single relation.\n *\n * @generated from protobuf message relationalai.protocol.RelationMetadata\n */\nexport interface RelationMetadata {\n    /**\n     * Type signature of this relation.\n     *\n     * @generated from protobuf field: relationalai.protocol.RelationId relation_id = 1;\n     */\n    relationId?: RelationId;\n    /**\n     * Identifier for the corresponding data file.\n     *\n     * @generated from protobuf field: string file_name = 2;\n     */\n    fileName: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass MetadataInfo$Type extends MessageType<MetadataInfo> {\n    constructor() {\n        super(\"relationalai.protocol.MetadataInfo\", [\n            { no: 1, name: \"relations\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => RelationMetadata }\n        ]);\n    }\n    create(value?: PartialMessage<MetadataInfo>): MetadataInfo {\n        const message = { relations: [] };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<MetadataInfo>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MetadataInfo): MetadataInfo {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* repeated relationalai.protocol.RelationMetadata relations */ 1:\n                    message.relations.push(RelationMetadata.internalBinaryRead(reader, reader.uint32(), options));\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: MetadataInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* repeated relationalai.protocol.RelationMetadata relations = 1; */\n        for (let i = 0; i < message.relations.length; i++)\n            RelationMetadata.internalBinaryWrite(message.relations[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.MetadataInfo\n */\nexport const MetadataInfo = new MetadataInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RelationMetadata$Type extends MessageType<RelationMetadata> {\n    constructor() {\n        super(\"relationalai.protocol.RelationMetadata\", [\n            { no: 1, name: \"relation_id\", kind: \"message\", T: () => RelationId },\n            { no: 2, name: \"file_name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n    create(value?: PartialMessage<RelationMetadata>): RelationMetadata {\n        const message = { fileName: \"\" };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined)\n            reflectionMergePartial<RelationMetadata>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RelationMetadata): RelationMetadata {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* relationalai.protocol.RelationId relation_id */ 1:\n                    message.relationId = RelationId.internalBinaryRead(reader, reader.uint32(), options, message.relationId);\n                    break;\n                case /* string file_name */ 2:\n                    message.fileName = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\")\n                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: RelationMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* relationalai.protocol.RelationId relation_id = 1; */\n        if (message.relationId)\n            RelationId.internalBinaryWrite(message.relationId, writer.tag(1, WireType.LengthDelimited).fork(), options).join();\n        /* string file_name = 2; */\n        if (message.fileName !== \"\")\n            writer.tag(2, WireType.LengthDelimited).string(message.fileName);\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message relationalai.protocol.RelationMetadata\n */\nexport const RelationMetadata = new RelationMetadata$Type();\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Table } from 'apache-arrow';\n\nimport { RelationId } from '../../proto/generated/schema';\n\nexport type RelValue = string | number | boolean | null | number[];\n\nexport type RelKey = {\n  type: 'RelKey';\n  name: string;\n  keys: string[];\n  values: string[];\n};\n\nexport type Relation = {\n  type: 'Relation';\n  rel_key: RelKey;\n  columns: RelValue[][];\n};\n\nexport type Model = {\n  name: string;\n  value: string;\n  type: string;\n  path?: string;\n};\n\nexport type IntegrityConstraintViolation = {\n  type: 'IntegrityConstraintViolation';\n  sources: {\n    rel_key: RelKey;\n    source: string;\n    type: string;\n  }[];\n};\n\nexport type ClientProblem = {\n  type: 'ClientProblem';\n  error_code: string;\n  is_error: boolean;\n  is_exception: boolean;\n  message: string;\n  path: string;\n  report: string;\n};\n\nexport type Problem = IntegrityConstraintViolation | ClientProblem;\n\nexport type LabeledAction = {\n  type: 'LabeledAction';\n  name: string;\n  action:\n    | QueryAction\n    | ModifyWorkspaceAction\n    | InstallAction\n    | ListSourceAction\n    | ListEdbAction;\n};\n\nexport type LabeledActionResult = {\n  type: 'LabeledActionResult';\n  name: string;\n  result:\n    | QueryActionResult\n    | ModifyWorkspaceActionResult\n    | InstallActionResult\n    | ListSourceActionResult\n    | ListEdbActionResult;\n};\n\nexport type QueryAction = {\n  type: 'QueryAction';\n  inputs: Relation[];\n  outputs: string[];\n  persist: string[];\n  source: Model;\n};\n\nexport type QueryActionResult = {\n  type: 'QueryActionResult';\n  output: Relation[];\n};\n\nexport type ModifyWorkspaceAction = {\n  type: 'ModifyWorkspaceAction';\n  delete_edb?: string;\n  delete_source?: string[];\n};\n\nexport type ModifyWorkspaceActionResult = {\n  type: 'ModifyWorkspaceActionResult';\n  delete_edb_result?: RelKey[];\n};\n\nexport type InstallAction = {\n  type: 'InstallAction';\n  sources: Model[];\n};\n\nexport type InstallActionResult = {\n  type: 'InstallActionResult';\n};\n\nexport type ListSourceAction = {\n  type: 'ListSourceAction';\n};\n\nexport type ListSourceActionResult = {\n  type: 'ListSourceActionResult';\n  sources: Model[];\n};\n\nexport type ListEdbAction = {\n  type: 'ListEdbAction';\n};\n\nexport type ListEdbActionResult = {\n  type: 'ListEdbActionResult';\n  rels: RelKey[];\n};\n\nexport enum TransactionMode {\n  OPEN = 'OPEN',\n  CREATE = 'CREATE',\n  CREATE_OVERWRITE = 'CREATE_OVERWRITE',\n  OPEN_OR_CREATE = 'OPEN_OR_CREATE',\n  CLONE = 'CLONE',\n  CLONE_OVERWRITE = 'CLONE_OVERWRITE',\n}\n\nexport type Transaction = {\n  type: 'Transaction';\n  abort: boolean;\n  dbname: string;\n  mode: TransactionMode;\n  nowait_durable: boolean;\n  readonly: boolean;\n  version: number;\n  actions: LabeledAction[];\n  computeName?: string;\n  source_dbname?: string;\n};\n\nexport type TransactionResult = {\n  type: 'TransactionResult';\n  aborted: boolean;\n  debug_level: number;\n  version: number;\n  output: Relation[];\n  problems: Problem[];\n  actions: LabeledActionResult[];\n};\n\nexport enum TransactionAsyncState {\n  CREATED = 'CREATED',\n  RUNNING = 'RUNNING',\n  CANCELLING = 'CANCELLING',\n  ABORTED = 'ABORTED',\n  COMPLETED = 'COMPLETED',\n}\n\nexport type TransactionAsyncPayload = {\n  dbname: string;\n  nowait_durable: boolean;\n  readonly: boolean;\n  engine_name?: string;\n  query: string;\n  v1_inputs: Relation[];\n  tags?: string[];\n};\n\nexport type TransactionAsync = {\n  id: string;\n  account_name: string;\n  engine_name: string;\n  database_name: string;\n  state: TransactionAsyncState;\n  created_by?: string;\n  created_on?: number;\n  finished_at?: number;\n  duration?: number;\n  read_only: boolean;\n  last_requested_interval: string;\n  response_format_version: string;\n  query: string;\n  user_agent: string;\n  abort_reason?: string;\n  tags?: string[];\n};\n\nexport type TransactionAsyncCompact = {\n  id: string;\n  state: TransactionAsyncState;\n};\n\nexport type TransactionAsyncFile = {\n  name: string;\n  // node-fetch parses json to a string\n  file: File | string;\n};\n\nexport type ArrowResult = {\n  relationId: string;\n  filename: string;\n  table: Table;\n};\n\nexport type ArrowRelation = {\n  relationId: string;\n  table: Table;\n  metadata: RelationId;\n};\n\nexport type TransactionAsyncResult = {\n  transaction: TransactionAsyncCompact | TransactionAsync;\n  problems?: Problem[];\n  results: ArrowRelation[];\n};\n\nexport type TransactionListOptions = {\n  database_name?: string | string[];\n  engine_name?: string | string[];\n  state?: TransactionAsyncState | TransactionAsyncState[];\n  tags?: string | string[];\n};\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nexport type Engine = {\n  id: string;\n  name: string;\n  account_name: string;\n  size: string;\n  region: string;\n  state: string;\n  created_by: string;\n  requested_on: string;\n  created_on: string;\n  deleted_on: string;\n};\n\nexport type EngineOptions = {\n  id?: string | string[];\n  name?: string | string[];\n  size?: string | string[];\n  state?: EngineState | EngineState[];\n};\n\nexport enum EngineSize {\n  XS = 'XS',\n  S = 'S',\n  M = 'M',\n  L = 'L',\n  XL = 'XL',\n}\n\nexport enum EngineState {\n  REQUESTED = 'REQUESTED',\n  PROVISIONING = 'PROVISIONING',\n  REGISTERING = 'REGISTERING',\n  PROVISIONED = 'PROVISIONED',\n  PROVISION_FAILED = 'PROVISION_FAILED',\n  DELETE_REQUESTED = 'DELETE_REQUESTED',\n  STOPPING = 'STOPPING',\n  DELETING = 'DELETING',\n  DELETED = 'DELETED',\n  DELETION_FAILED = 'DELETION_FAILED',\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { tableFromIPC } from 'apache-arrow';\n\nimport { MetadataInfo } from '../../proto/generated/message';\nimport { RelationId } from '../../proto/generated/schema';\nimport {\n  ArrowRelation,\n  ArrowResult,\n  LabeledAction,\n  TransactionAsyncFile,\n  TransactionAsyncResult,\n  TransactionAsyncState,\n} from '../transaction/types';\n\nexport function makeLabeledAction(\n  name: string,\n  action: LabeledAction['action'],\n) {\n  const labeledAction: LabeledAction = {\n    type: 'LabeledAction',\n    name: name,\n    action,\n  };\n\n  return labeledAction;\n}\n\nexport async function readTransactionResult(files: TransactionAsyncFile[]) {\n  const transaction = files.find(x => x.name === 'transaction');\n  const problems = files.find(x => x.name === 'problems');\n  const metadataProto = files.find(x => x.name === 'metadata.proto');\n\n  if (!transaction) {\n    throw new Error('transaction part not found');\n  }\n\n  // TODO uncomment and make TransactionAsyncResult.metadata required\n  // if (!metadataProto) {\n  //   throw new Error('metadata proto part not found');\n  // }\n\n  const metadata = metadataProto\n    ? await readProtoMetadata(metadataProto.file as File)\n    : undefined;\n\n  const txn = await readJson(transaction.file);\n  const result: TransactionAsyncResult = {\n    transaction: txn,\n    results: await makeArrowRelations(await readArrowFiles(files), metadata),\n  };\n\n  if (problems) {\n    result.problems = await readJson(problems.file);\n  }\n\n  return result;\n}\n\nexport async function readArrowFiles(files: TransactionAsyncFile[]) {\n  const results: ArrowResult[] = [];\n\n  for (const file of files) {\n    if (\n      typeof file.file !== 'string' &&\n      file.file.type === 'application/vnd.apache.arrow.stream'\n    ) {\n      const table = await tableFromIPC(file.file.stream());\n\n      results.push({\n        relationId: file.name,\n        filename: file.file.name,\n        table,\n      });\n    }\n  }\n\n  return results;\n}\n\nexport async function makeArrowRelations(\n  results: ArrowResult[],\n  metadata?: MetadataInfo,\n) {\n  const metadataMap = (metadata?.relations || []).reduce<\n    Record<string, RelationId | undefined>\n  >((memo, item) => {\n    memo[item.fileName] = item.relationId;\n\n    return memo;\n  }, {});\n\n  return results.map(r => {\n    const metadata: RelationId = metadataMap[r.filename] || { arguments: [] };\n    const relation: ArrowRelation = {\n      relationId: r.relationId,\n      table: r.table,\n      metadata,\n    };\n\n    return relation;\n  });\n}\n\nexport async function readProtoMetadata(file: File | Blob) {\n  if (!file?.arrayBuffer) {\n    throw new Error(`Unsupported metadata type: ${typeof file}`);\n  }\n\n  try {\n    const buffer = await file.arrayBuffer();\n    const data = new Uint8Array(buffer);\n\n    return MetadataInfo.fromBinary(data);\n  } catch (error: any) {\n    // TODO remove it latr\n    // old engines throw this error when there's no output\n    // so we'll just ignore this for some time\n    if (error.message === 'illegal tag: field no 0 wire type 0') {\n      return { relations: [] };\n    }\n\n    throw error;\n  }\n}\n\nasync function readJson(file: File | string) {\n  let str;\n\n  if (typeof file === 'string') {\n    str = file;\n  } else {\n    const data = await file.arrayBuffer();\n\n    str = new TextDecoder().decode(data);\n  }\n\n  return JSON.parse(str);\n}\n\nexport function isTransactionDone(state: TransactionAsyncState) {\n  return (\n    state === TransactionAsyncState.ABORTED ||\n    state === TransactionAsyncState.COMPLETED\n  );\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Base } from '../base';\nimport { makeLabeledAction } from './transactionUtils';\nimport {\n  LabeledAction,\n  Transaction,\n  TransactionMode,\n  TransactionResult,\n} from './types';\n\nconst ENDPOINT = 'transaction';\n\nexport class TransactionApi extends Base {\n  async runTransaction(\n    database: string,\n    engine: string,\n    transaction: Transaction,\n    mode = TransactionMode.OPEN,\n  ) {\n    const query = {\n      dbname: database,\n      compute_name: engine,\n      open_mode: mode,\n      region: this.region,\n    };\n\n    return await this.post<TransactionResult>(ENDPOINT, {\n      query,\n      body: transaction,\n    });\n  }\n\n  async runActions(\n    database: string,\n    engine: string,\n    actions: LabeledAction['action'][],\n    readonly = true,\n  ) {\n    const labeledActions = actions.map((action, i) =>\n      makeLabeledAction(`action-${i}`, action),\n    );\n    const transaction: Transaction = {\n      type: 'Transaction',\n      abort: false,\n      dbname: database,\n      mode: TransactionMode.OPEN,\n      nowait_durable: false,\n      readonly,\n      version: 0,\n      actions: labeledActions,\n      computeName: engine,\n    };\n\n    return await this.runTransaction(database, engine, transaction);\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Base } from '../base';\nimport { Engine, EngineOptions, EngineSize, EngineState } from './types';\n\nconst ENDPOINT = 'compute';\n\ntype ListReponse = { computes: Engine[] };\ntype SingleReponse = { compute: Engine };\ntype DeleteResponse = {\n  status: {\n    name: string;\n    state: EngineState;\n    message: string;\n  };\n};\n\nexport class EngineApi extends Base {\n  async createEngine(name: string, size: EngineSize = EngineSize.XS) {\n    const result = await this.put<SingleReponse>(ENDPOINT, {\n      body: {\n        region: this.region,\n        name,\n        size,\n      },\n    });\n\n    return result.compute;\n  }\n\n  async listEngines(options?: EngineOptions) {\n    const result = await this.get<ListReponse>(ENDPOINT, options);\n\n    return result.computes;\n  }\n\n  async getEngine(name: string) {\n    const engines = await this.listEngines({ name });\n\n    return engines[0];\n  }\n\n  async deleteEngine(name: string) {\n    const result = await this.delete<DeleteResponse>(ENDPOINT, {\n      body: { name },\n    });\n\n    return result.status;\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Base } from '../base';\nimport {\n  CompactOAuthClient,\n  OAuthClient,\n  Permission,\n  PermissionDescription,\n} from './types';\n\nconst ENDPOINT = 'oauth-clients';\n\ntype ListReponse = { clients: CompactOAuthClient[] };\ntype SingleReponse = { client: OAuthClient };\ntype DeleteResponse = {\n  client_id: string;\n  message: string;\n};\ntype ListPermissionResponse = {\n  permissions: PermissionDescription[];\n};\n\nexport class OAuthClientApi extends Base {\n  async createOAuthClient(name: string, permissions?: Permission[]) {\n    const result = await this.post<SingleReponse>(ENDPOINT, {\n      body: {\n        name,\n        permissions,\n      },\n    });\n\n    return result.client;\n  }\n\n  async listOAuthClients() {\n    const result = await this.get<ListReponse>(ENDPOINT);\n\n    return result.clients;\n  }\n\n  async getOAuthClient(clientId: string) {\n    const result = await this.get<SingleReponse>(`${ENDPOINT}/${clientId}`);\n\n    return result.client;\n  }\n\n  async updateOAuthClient(\n    clientId: string,\n    name?: string,\n    permissions?: Permission[],\n  ) {\n    const body: any = {};\n\n    if (name) {\n      body.name = name;\n    }\n\n    if (permissions) {\n      body.permissions = permissions;\n    }\n\n    const result = await this.patch<SingleReponse>(`${ENDPOINT}/${clientId}`, {\n      body,\n    });\n\n    return result.client;\n  }\n\n  async rotateOAuthClientSecret(clientId: string) {\n    const result = await this.post<SingleReponse>(\n      `${ENDPOINT}/${clientId}/rotate-secret`,\n      {},\n    );\n\n    return result.client;\n  }\n\n  async deleteOAuthClient(clientId: string) {\n    const result = await this.delete<DeleteResponse>(\n      `${ENDPOINT}/${clientId}`,\n      {},\n    );\n\n    return result;\n  }\n\n  async listPermissions() {\n    const result = await this.get<ListPermissionResponse>('permissions', {});\n\n    return result.permissions;\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Base } from '../base';\nimport {\n  readArrowFiles,\n  readProtoMetadata,\n  readTransactionResult,\n} from './transactionUtils';\nimport {\n  Problem,\n  TransactionAsync,\n  TransactionAsyncCompact,\n  TransactionAsyncFile,\n  TransactionAsyncPayload,\n  TransactionListOptions,\n} from './types';\n\nconst ENDPOINT = 'transactions';\n\ntype ListResponse = { transactions: TransactionAsync[] };\ntype SingleResponse = { transaction: TransactionAsync };\ntype CancelResponse = {\n  message?: string;\n};\n\nexport class TransactionAsyncApi extends Base {\n  async runTransactionAsync(transaction: TransactionAsyncPayload) {\n    const result = await this.post<\n      TransactionAsyncCompact | TransactionAsyncFile[]\n    >(ENDPOINT, {\n      body: transaction,\n    });\n\n    if (Array.isArray(result)) {\n      return await readTransactionResult(result);\n    }\n\n    return {\n      transaction: result,\n    };\n  }\n\n  async listTransactions(options?: TransactionListOptions) {\n    const result = await this.get<ListResponse>(ENDPOINT, options);\n\n    return result.transactions;\n  }\n\n  async getTransaction(transactionId: string) {\n    const result = await this.get<SingleResponse>(\n      `${ENDPOINT}/${transactionId}`,\n    );\n\n    return result.transaction;\n  }\n\n  async getTransactionResults(transactionId: string) {\n    const result = await this.get<TransactionAsyncFile[]>(\n      `${ENDPOINT}/${transactionId}/results`,\n    );\n\n    return await readArrowFiles(result);\n  }\n\n  async getTransactionMetadata(transactionId: string) {\n    const result = await this.request<Blob>(\n      `${ENDPOINT}/${transactionId}/metadata`,\n      {\n        method: 'GET',\n        headers: { Accept: 'application/x-protobuf' },\n      },\n    );\n\n    return readProtoMetadata(result);\n  }\n\n  async getTransactionProblems(transactionId: string) {\n    const result = await this.get<Problem[]>(\n      `${ENDPOINT}/${transactionId}/problems`,\n    );\n\n    return result;\n  }\n\n  async cancelTransaction(transactionId: string) {\n    const result = await this.post<CancelResponse>(\n      `${ENDPOINT}/${transactionId}/cancel`,\n      {},\n    );\n\n    return result || {};\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Model } from '../transaction/types';\n\nexport function makeModel(name: string, value: string, path = name) {\n  const model: Model = {\n    type: 'Source',\n    name,\n    value,\n    path,\n  };\n\n  return model;\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { makeModel } from '../model/modelUtils';\nimport { QueryAction, Relation, RelValue } from '../transaction/types';\nimport { QueryInput } from './types';\n\nexport function makeQueryAction(\n  queryString: string,\n  inputs: QueryInput[] = [],\n) {\n  const action: QueryAction = {\n    type: 'QueryAction',\n    outputs: [],\n    persist: [],\n    source: makeModel('query', queryString, ''),\n    inputs: inputs.map(input => makeQueryInput(input.name, input.value)),\n  };\n\n  return action;\n}\n\nexport const makeQueryInput = (name: string, value: RelValue) => {\n  const input: Relation = {\n    rel_key: {\n      values: [],\n      name: name,\n      keys: ['RAI_VariableSizeStrings.VariableSizeString'],\n      type: 'RelKey',\n    },\n    type: 'Relation',\n    columns: [[value]],\n  };\n\n  return input;\n};\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { TransactionApi } from '../transaction/transactionApi';\nimport { makeQueryAction } from './queryUtils';\nimport { CsvConfigSchema, CsvConfigSyntax, QueryInput } from './types';\n\nexport class QueryApi extends TransactionApi {\n  async query(\n    database: string,\n    engine: string,\n    queryString: string,\n    inputs: QueryInput[] = [],\n    readonly = true,\n  ) {\n    const action = makeQueryAction(queryString, inputs);\n\n    return await this.runActions(database, engine, [action], readonly);\n  }\n\n  async loadJson(\n    database: string,\n    engine: string,\n    relation: string,\n    json: any,\n  ) {\n    const qs = [\n      `def config:data = data`,\n      `def insert:${relation} = load_json[config]`,\n    ];\n    const inputs: QueryInput[] = [\n      {\n        name: 'data',\n        value: JSON.stringify(json),\n      },\n    ];\n\n    return this.query(database, engine, qs.join('\\n'), inputs, false);\n  }\n\n  async loadCsv(\n    database: string,\n    engine: string,\n    relation: string,\n    csv: string,\n    syntax?: CsvConfigSyntax,\n    schema?: CsvConfigSchema,\n  ) {\n    const qs = [`def config:data = data`];\n    const inputs: QueryInput[] = [\n      {\n        name: 'data',\n        value: csv,\n      },\n    ];\n\n    if (syntax) {\n      qs.push(...syntaxToRel(syntax));\n    }\n\n    if (schema) {\n      qs.push(...schemaToRel(schema));\n    }\n\n    qs.push(`def insert:${relation} = load_csv[config]`);\n\n    return this.query(database, engine, qs.join('\\n'), inputs, false);\n  }\n}\n\nfunction toRelLiteral(value: any) {\n  if (typeof value === 'string') {\n    if (value.length === 1) {\n      const escapedValue = value.replace(/'/g, \"\\\\'\");\n\n      return `'${escapedValue}'`;\n    }\n\n    const escapedValue = value.replace(/\"/g, '\\\\\"');\n\n    return `\"${escapedValue}\"`;\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 'true' : 'false';\n  }\n}\n\nfunction syntaxToRel(syntax: CsvConfigSyntax) {\n  const qs: string[] = [];\n\n  Object.keys(syntax).forEach(k => {\n    const prop = k as keyof CsvConfigSyntax;\n\n    if (prop === 'header') {\n      const headerStr = Object.keys(syntax.header!)\n        .map(key => {\n          return `(${key}, ${toRelLiteral(syntax.header![key])})`;\n        })\n        .join('; ');\n      qs.push(`def config:syntax:header = ${headerStr}`);\n    } else {\n      qs.push(`def config:syntax:${prop} = ${toRelLiteral(syntax[prop])}`);\n    }\n  });\n\n  return qs;\n}\n\nfunction schemaToRel(schema: CsvConfigSchema) {\n  const qs: string[] = [];\n\n  Object.keys(schema).forEach(colName => {\n    qs.push(`def config:schema${colName} = ${toRelLiteral(schema[colName])}`);\n  });\n\n  return qs;\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nexport type User = {\n  id: string;\n  email: string;\n  roles: UserRole[];\n  id_providers: string[];\n  status: UserStatus;\n};\n\nexport enum UserStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum UserRole {\n  USER = 'user',\n  ADMIN = 'admin',\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Base } from '../base';\nimport { User, UserRole, UserStatus } from './types';\n\nconst ENDPOINT = 'users';\n\ntype ListReponse = { users: User[] };\ntype SingleReponse = { user: User };\ntype DeleteResponse = {\n  user_id: string;\n  message: string;\n};\n\nexport class UserApi extends Base {\n  async createUser(email: string, roles: UserRole[]) {\n    const result = await this.post<SingleReponse>(ENDPOINT, {\n      body: {\n        email,\n        roles,\n      },\n    });\n\n    return result.user;\n  }\n\n  async listUsers() {\n    const result = await this.get<ListReponse>(ENDPOINT);\n\n    return result.users;\n  }\n\n  async getUser(userId: string) {\n    const result = await this.get<SingleReponse>(`${ENDPOINT}/${userId}`);\n\n    return result.user;\n  }\n\n  async updateUser(userId: string, status?: UserStatus, roles?: UserRole[]) {\n    const body: any = {};\n\n    if (status) {\n      body.status = status;\n    }\n\n    if (roles && roles.length) {\n      body.roles = roles;\n    }\n\n    const result = await this.patch<SingleReponse>(`${ENDPOINT}/${userId}`, {\n      body,\n    });\n\n    return result.user;\n  }\n\n  async enableUser(userId: string) {\n    return await this.updateUser(userId, UserStatus.ACTIVE);\n  }\n\n  async disableUser(userId: string) {\n    return await this.updateUser(userId, UserStatus.INACTIVE);\n  }\n\n  async deleteUser(userId: string) {\n    const result = await this.delete<DeleteResponse>(\n      `${ENDPOINT}/${userId}`,\n      {},\n    );\n\n    return result;\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { applyMixins } from '../utils';\nimport { Base } from './base';\nimport { DatabaseApi } from './database/databaseApi';\nimport { EdbApi } from './edb/edbApi';\nimport { EngineApi } from './engine/engineApi';\nimport { ModelApi } from './model/modelApi';\nimport { OAuthClientApi } from './oauthClient/oauthClientApi';\nimport { ExecAsyncApi } from './query/execAsyncApi';\nimport { QueryApi } from './query/queryApi';\nimport { TransactionApi } from './transaction/transactionApi';\nimport { TransactionAsyncApi } from './transaction/transactionAsyncApi';\nimport { UserApi } from './user/userApi';\n\nclass Client extends Base {}\n\n// eslint-disable-next-line no-redeclare\ninterface Client\n  extends DatabaseApi,\n    EdbApi,\n    EngineApi,\n    ModelApi,\n    OAuthClientApi,\n    ExecAsyncApi,\n    QueryApi,\n    TransactionApi,\n    TransactionAsyncApi,\n    UserApi {}\n\napplyMixins(Client, [\n  DatabaseApi,\n  EdbApi,\n  EngineApi,\n  ModelApi,\n  OAuthClientApi,\n  ExecAsyncApi,\n  QueryApi,\n  TransactionApi,\n  TransactionAsyncApi,\n  UserApi,\n]);\n\nexport default Client;\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n// See https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\nexport function applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null),\n      );\n    });\n  });\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TransactionApi } from '../transaction/transactionApi';\nimport { ListEdbAction, ModifyWorkspaceAction } from '../transaction/types';\n\nexport class EdbApi extends TransactionApi {\n  async listEdbs(database: string, engine: string) {\n    const action: ListEdbAction = {\n      type: 'ListEdbAction',\n    };\n    const result = await this.runActions(database, engine, [action]);\n\n    if (result.actions[0]?.result?.type === 'ListEdbActionResult') {\n      return result.actions[0].result.rels;\n    }\n\n    throw new Error('ListEdbActionResult is missing');\n  }\n\n  async deleteEdb(database: string, engine: string, name: string) {\n    const action: ModifyWorkspaceAction = {\n      type: 'ModifyWorkspaceAction',\n      delete_edb: name,\n    };\n    const result = await this.runActions(database, engine, [action], false);\n\n    if (result.actions[0]?.result?.type === 'ModifyWorkspaceActionResult') {\n      return result.actions[0].result.delete_edb_result;\n    }\n\n    throw new Error('ModifyWorkspaceActionResult is missing');\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TransactionApi } from '../transaction/transactionApi';\nimport {\n  InstallAction,\n  ListSourceAction,\n  Model,\n  ModifyWorkspaceAction,\n} from '../transaction/types';\n\nexport class ModelApi extends TransactionApi {\n  async installModels(database: string, engine: string, models: Model[]) {\n    const action: InstallAction = {\n      type: 'InstallAction',\n      sources: models,\n    };\n\n    return await this.runActions(database, engine, [action], false);\n  }\n\n  async listModels(database: string, engine: string) {\n    const action: ListSourceAction = {\n      type: 'ListSourceAction',\n    };\n\n    return await this.runActions(database, engine, [action]);\n  }\n\n  async getModel(database: string, engine: string, name: string) {\n    const result = await this.listModels(database, engine);\n\n    if (result.actions[0]?.result?.type === 'ListSourceActionResult') {\n      const model = result.actions[0].result.sources.find(m => m.name === name);\n\n      if (model) {\n        return model;\n      }\n    }\n\n    throw new Error(`Model '${name}' not found`);\n  }\n\n  async deleteModel(database: string, engine: string, name: string) {\n    const action: ModifyWorkspaceAction = {\n      type: 'ModifyWorkspaceAction',\n      delete_source: [name],\n    };\n    const result = await this.runActions(database, engine, [action], false);\n\n    if (result.actions[0]?.result?.type === 'ModifyWorkspaceActionResult') {\n      return result.actions[0].result;\n    }\n\n    throw new Error('ModifyWorkspaceActionResult is missing');\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { TransactionAsyncApi } from '../transaction/transactionAsyncApi';\nimport {\n  isTransactionDone,\n  makeArrowRelations,\n} from '../transaction/transactionUtils';\nimport {\n  TransactionAsyncCompact,\n  TransactionAsyncPayload,\n  TransactionAsyncResult,\n} from '../transaction/types';\nimport { makeQueryInput } from './queryUtils';\nimport { QueryInput } from './types';\n\nexport class ExecAsyncApi extends TransactionAsyncApi {\n  async execAsync(\n    database: string,\n    engine: string,\n    queryString: string,\n    inputs: QueryInput[] = [],\n    readonly = true,\n    tags: string[] = [],\n  ) {\n    const transaction: TransactionAsyncPayload = {\n      dbname: database,\n      query: queryString,\n      nowait_durable: false,\n      readonly,\n      v1_inputs: inputs.map(input => makeQueryInput(input.name, input.value)),\n      tags,\n    };\n\n    if (engine) {\n      transaction.engine_name = engine;\n    }\n\n    return await this.runTransactionAsync(transaction);\n  }\n\n  async exec(\n    database: string,\n    engine: string,\n    queryString: string,\n    inputs: QueryInput[] = [],\n    readonly = true,\n    tags: string[] = [],\n    interval = 1000, // 1 second\n    timeout = Number.POSITIVE_INFINITY,\n  ) {\n    const result = await this.execAsync(\n      database,\n      engine,\n      queryString,\n      inputs,\n      readonly,\n      tags,\n    );\n    const txnId = result.transaction.id;\n\n    if ('results' in result) {\n      return result;\n    }\n\n    return await this.pollTransaction(txnId, interval, timeout);\n  }\n\n  async pollTransaction(\n    txnId: string,\n    interval = 1000,\n    timeout = Number.POSITIVE_INFINITY,\n  ) {\n    const startedAt = Date.now();\n\n    let transaction: TransactionAsyncCompact;\n\n    await new Promise<void>((resolve, reject) => {\n      const checkState = () => {\n        setTimeout(async () => {\n          transaction = await this.getTransaction(txnId);\n\n          if (isTransactionDone(transaction.state)) {\n            resolve();\n          } else {\n            if (Date.now() - startedAt > timeout) {\n              reject(\n                new Error(\n                  `Polling transaction timeout of ${timeout}ms has been exceeded.`,\n                ),\n              );\n            }\n\n            checkState();\n          }\n        }, interval);\n      };\n\n      checkState();\n    });\n\n    const data = await Promise.all([\n      this.getTransactionMetadata(txnId),\n      this.getTransactionProblems(txnId),\n      this.getTransactionResults(txnId),\n    ]);\n    const results = await makeArrowRelations(data[2], data[0]);\n\n    const res: TransactionAsyncResult = {\n      transaction: transaction!,\n      problems: data[1],\n      results,\n    };\n\n    return res;\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nexport type Database = {\n  id: string;\n  name: string;\n  account_name: string;\n  state: DatabaseState;\n  region: string;\n  created_by: string;\n  created_on: string;\n};\n\nexport type DatabaseOptions = {\n  id?: string | string[];\n  name?: string | string[];\n  state?: DatabaseState | DatabaseState[];\n};\n\nexport enum DatabaseState {\n  CREATED = 'CREATED',\n  CREATING = 'CREATING',\n  CREATION_FAILED = 'CREATION_FAILED',\n  DELETED = 'DELETED',\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nexport type OAuthClient = {\n  id: string;\n  name: string;\n  secret: string;\n  created_on: string;\n  created_by: string;\n  permissions: Permission[];\n};\n\nexport type CompactOAuthClient = Pick<\n  OAuthClient,\n  'id' | 'name' | 'created_by' | 'created_on'\n>;\n\nexport enum Permission {\n  // engines\n  CREATE_COMPUTE = 'create:compute',\n  DELETE_COMPUTE = 'delete:compute',\n  LIST_COMPUTES = 'list:compute',\n  READ_COMPUTE = 'read:compute',\n  // databases\n  CREATE_DATABASE = 'create:database',\n  LIST_DATABASES = 'list:database',\n  UPDATE_DATABASE = 'update:database',\n  DELETE_DATABASE = 'delete:database',\n  // transactions\n  RUN_TRANSACTION = 'run:transaction',\n  LIST_TRANSACTION = 'list:transaction',\n  DELETE_TRANSACTION = 'delete:transaction',\n  READ_TRANSACTION = 'read:transaction',\n  // credits\n  READ_CREDITS_USAGE = 'read:credits_usage',\n  // oauth clients\n  CREATE_OAUTH_CLIENT = 'create:oauth_client',\n  READ_OAUTH_CLIENT = 'read:oauth_client',\n  LIST_OAUTH_CLIENTS = 'list:oauth_client',\n  UPDATE_OAUTH_CLIENT = 'update:oauth_client',\n  DELETE_OAUTH_CLIENT = 'delete:oauth_client',\n  ROTATE_OAUTH_CLIENT_SECRET = 'rotate:oauth_client_secret',\n  // users\n  CREATE_USER = 'create:user',\n  LIST_USERS = 'list:user',\n  READ_USER = 'read:user',\n  UPDATE_USER = 'update:user',\n  DELETE_USER = 'delete:user',\n  // roles\n  LIST_ROLES = 'list:role',\n  READ_ROLE = 'read:role',\n  // permissions\n  LIST_PERMISSIONS = 'list:permission',\n  // access keys\n  CREATE_ACCESS_KEY = 'create:accesskey',\n  LIST_ACCESS_KEYS = 'list:accesskey',\n}\n\nexport type PermissionDescription = {\n  name: Permission;\n  description: string;\n};\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { request } from './rest';\nimport { AccessTokenCache } from './types';\n\nexport abstract class Credentials {\n  abstract getToken(url: string): Promise<string>;\n}\n\ntype GetToken = (url: string) => Promise<string>;\n\nexport class GetTokenCredentials extends Credentials {\n  getToken: GetToken;\n\n  constructor(getToken: GetToken) {\n    super();\n\n    this.getToken = getToken;\n  }\n}\n\nclass AccessToken {\n  constructor(\n    public token: string,\n    public experiesIn: number,\n    public createdOn: number,\n  ) {}\n\n  get isExpired() {\n    const delta = Date.now() - this.createdOn;\n\n    // experiesIn stored in seconds\n    return delta / 1000 >= this.experiesIn;\n  }\n}\n\ntype TokenRequest = {\n  client_id: string;\n  client_secret: string;\n  grant_type: string;\n  audience: string;\n};\n\ntype TokenResponse = {\n  access_token: string;\n  expires_in: number;\n};\n\ntype ReadCacheFn = () => Promise<AccessTokenCache | undefined>;\ntype WriteCacheFn = (c: AccessTokenCache) => Promise<void>;\n\nexport class ClientCredentials extends Credentials {\n  clientId: string;\n  clientSecret: string;\n  clientCredentialsUrl: string;\n  accessToken?: AccessToken;\n\n  constructor(\n    clientId: string,\n    clientSecret: string,\n    clientCredentialsUrl: string,\n    private readCache?: ReadCacheFn,\n    private writeCache?: WriteCacheFn,\n  ) {\n    super();\n\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.clientCredentialsUrl = clientCredentialsUrl;\n  }\n\n  async getToken(requestedUrl: string) {\n    await this.readTokenFromCache();\n\n    if (this.accessToken && !this.accessToken.isExpired) {\n      return this.accessToken.token;\n    }\n\n    return this.requestToken(requestedUrl);\n  }\n\n  private async readTokenFromCache() {\n    if (!this.accessToken && this.readCache) {\n      const cache = await this.readCache();\n\n      if (cache) {\n        this.accessToken = new AccessToken(\n          cache.access_token,\n          cache.expires_in,\n          cache.created_on,\n        );\n      }\n    }\n  }\n\n  private async requestToken(requestedUrl: string) {\n    const parsedUrl = new URL(requestedUrl);\n    const body: TokenRequest = {\n      client_id: this.clientId,\n      client_secret: this.clientSecret,\n      grant_type: 'client_credentials',\n      // ensure the audience contains the protocol scheme\n      audience: `https://${parsedUrl.hostname}`,\n    };\n\n    const data = await request<TokenResponse>(this.clientCredentialsUrl, {\n      method: 'POST',\n      body,\n    });\n\n    const token: AccessTokenCache = {\n      access_token: data.access_token,\n      expires_in: data.expires_in,\n      created_on: Date.now(),\n    };\n\n    this.accessToken = new AccessToken(\n      token.access_token,\n      token.expires_in,\n      token.created_on,\n    );\n\n    if (this.writeCache) {\n      await this.writeCache(token);\n    }\n\n    return this.accessToken.token;\n  }\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport Decimal from 'decimal.js';\n\nimport {\n  Kind,\n  PrimitiveType,\n  PrimitiveValue,\n  RelType,\n} from '../proto/generated/schema';\nimport {\n  ConstantValue,\n  RelTypeDef,\n  RelTypedValue,\n  ValueTypeValue,\n} from './types';\n\nDecimal.config({ precision: 31 });\n\n// Rata Die milliseconds for 1970-01-01T00:00:00.\n// Date and DateTime types are represented as days and milliseconds\n// respectively since 1 AD, following ISO 8601, which is the first\n// year in the proleptic Gregorian calendar. JavaScript represents\n// Date types as milliseconds since the UNIX epoch.\nconst UNIXEPOCH = 62135683200000;\nconst MILLISECONDS_PER_DAY = 24 * 60 * 60 * 1000;\nconst intRegEx = /^Int(\\d+)$/;\nconst uintRegEx = /^UInt(\\d+)$/;\nconst floatRegEx = /^Float(\\d+)$/;\nconst decimalRegEx = /^FixedPointDecimals.FixedDecimal{Int(\\d+), (\\d+)}$/;\nconst rationalRegEx = /^Rational{Int(\\d+)}$/;\n\nexport function getTypeDef(type: string): RelTypeDef {\n  if (type.startsWith(':')) {\n    return {\n      type: 'Constant',\n      name: 'Symbol',\n      value: { type: 'String', value: type },\n    };\n  }\n\n  if (type.includes('(') && !type.startsWith('(')) {\n    return {\n      type: 'Constant',\n      name: type,\n      value: { type: 'String', value: type },\n    };\n  }\n\n  if (type === 'String') {\n    return {\n      type: 'String',\n    };\n  }\n\n  if (type === 'Bool') {\n    return {\n      type: 'Bool',\n    };\n  }\n\n  if (type === 'Char') {\n    return {\n      type: 'Char',\n    };\n  }\n\n  if (type === 'Dates.DateTime') {\n    return {\n      type: 'DateTime',\n    };\n  }\n\n  if (type === 'Dates.Date') {\n    return {\n      type: 'Date',\n    };\n  }\n\n  if (type === 'Dates.Year') {\n    return {\n      type: 'Year',\n    };\n  }\n\n  if (type === 'Dates.Month') {\n    return {\n      type: 'Month',\n    };\n  }\n\n  if (type === 'Dates.Week') {\n    return {\n      type: 'Week',\n    };\n  }\n\n  if (type === 'Dates.Day') {\n    return {\n      type: 'Day',\n    };\n  }\n\n  if (type === 'Dates.Hour') {\n    return {\n      type: 'Hour',\n    };\n  }\n\n  if (type === 'Dates.Minute') {\n    return {\n      type: 'Minute',\n    };\n  }\n\n  if (type === 'Dates.Second') {\n    return {\n      type: 'Second',\n    };\n  }\n\n  if (type === 'Dates.Millisecond') {\n    return {\n      type: 'Millisecond',\n    };\n  }\n\n  if (type === 'Dates.Microsecond') {\n    return {\n      type: 'Microsecond',\n    };\n  }\n\n  if (type === 'Dates.Nanosecond') {\n    return {\n      type: 'Nanosecond',\n    };\n  }\n\n  if (type === 'HashValue') {\n    return {\n      type: 'Hash',\n    };\n  }\n\n  if (type === 'Missing') {\n    return {\n      type: 'Missing',\n    };\n  }\n\n  if (type === 'FilePos') {\n    return {\n      type: 'FilePos',\n    };\n  }\n\n  const intMatch = type.match(intRegEx);\n\n  if (intMatch && intMatch.length === 2) {\n    const bits = intMatch[1];\n    const type = `Int${bits}`;\n\n    return {\n      type: type as any,\n    };\n  }\n\n  const uintMatch = type.match(uintRegEx);\n\n  if (uintMatch && uintMatch.length === 2) {\n    const bits = uintMatch[1];\n    return {\n      type: `UInt${bits}` as any,\n    };\n  }\n\n  const floatMatch = type.match(floatRegEx);\n\n  if (floatMatch && floatMatch.length === 2) {\n    const bits = floatMatch[1];\n\n    return {\n      type: `Float${bits}` as any,\n    };\n  }\n\n  const decimalMatch = type.match(decimalRegEx);\n\n  if (decimalMatch && decimalMatch.length === 3) {\n    const bits = Number.parseInt(decimalMatch[1]);\n    const places = Number.parseInt(decimalMatch[2]);\n\n    return {\n      type: `Decimal${bits}` as any,\n      places,\n    };\n  }\n\n  const rationalMatch = type.match(rationalRegEx);\n\n  if (rationalMatch && rationalMatch.length === 2) {\n    const bits = rationalMatch[1];\n\n    return {\n      type: `Rational${bits}` as any,\n    };\n  }\n\n  return {\n    type: 'Unknown',\n    name: type,\n  };\n}\n\nexport function getTypeDefFromProtobuf(type: RelType): RelTypeDef {\n  if (\n    type.tag === Kind.CONSTANT_TYPE &&\n    type.constantType?.value &&\n    type.constantType?.relType\n  ) {\n    const typeDef = getTypeDefFromProtobuf(type.constantType.relType);\n\n    if (typeDef.type !== 'ValueType') {\n      const values = type.constantType.value.arguments.map(mapPrimitiveValue);\n      const value = convertValue(\n        typeDef,\n        values.length === 1 ? values[0] : values,\n      );\n\n      return {\n        type: 'Constant',\n        name:\n          typeDef.type === 'String'\n            ? 'Symbol'\n            : `${typeDef.type}(${getDisplayValue(typeDef, value)})`,\n        value: {\n          ...typeDef,\n          value,\n        } as RelTypedValue,\n      };\n    } else {\n      const value = unflattenContantValue(\n        typeDef,\n        type.constantType.value.arguments,\n      );\n\n      return {\n        type: 'Constant',\n        name: `${typeDef.type}(${getDisplayValue(typeDef, value)})`,\n        value: {\n          ...typeDef,\n          value: convertValue(typeDef, value),\n        } as RelTypedValue,\n      };\n    }\n  }\n\n  if (type.tag === Kind.PRIMITIVE_TYPE) {\n    switch (type.primitiveType) {\n      case PrimitiveType.SYMBOL:\n      case PrimitiveType.STRING:\n        return {\n          type: 'String',\n        };\n      case PrimitiveType.CHAR:\n        return {\n          type: 'Char',\n        };\n      case PrimitiveType.BOOL:\n        return {\n          type: 'Bool',\n        };\n      case PrimitiveType.INT_8:\n        return {\n          type: 'Int8',\n        };\n      case PrimitiveType.INT_16:\n        return {\n          type: 'Int16',\n        };\n      case PrimitiveType.INT_32:\n        return {\n          type: 'Int32',\n        };\n      case PrimitiveType.INT_64:\n        return {\n          type: 'Int64',\n        };\n      case PrimitiveType.INT_128:\n        return {\n          type: 'Int128',\n        };\n      case PrimitiveType.UINT_8:\n        return {\n          type: 'UInt8',\n        };\n      case PrimitiveType.UINT_16:\n        return {\n          type: 'UInt16',\n        };\n      case PrimitiveType.UINT_32:\n        return {\n          type: 'UInt32',\n        };\n      case PrimitiveType.UINT_64:\n        return {\n          type: 'UInt64',\n        };\n      case PrimitiveType.UINT_128:\n        return {\n          type: 'UInt128',\n        };\n      case PrimitiveType.FLOAT_16:\n        return {\n          type: 'Float16',\n        };\n      case PrimitiveType.FLOAT_32:\n        return {\n          type: 'Float32',\n        };\n      case PrimitiveType.FLOAT_64:\n        return {\n          type: 'Float64',\n        };\n      // TODO should we throw an error here?\n    }\n  }\n\n  if (type.tag === Kind.VALUE_TYPE && type.valueType) {\n    const typeDef = {\n      type: 'ValueType',\n      // TODO add name?\n      typeDefs: type.valueType.argumentTypes.map(t =>\n        getTypeDefFromProtobuf(t),\n      ),\n    } as const;\n\n    return mapValueType(typeDef);\n  }\n\n  // TODO should we keep it or just throw an error?\n  return {\n    type: 'Unknown',\n  };\n}\n\nexport function convertValue<T extends RelTypedValue>(\n  typeDef: RelTypeDef,\n  value: any,\n): T['value'] {\n  switch (typeDef.type) {\n    case 'String':\n    case 'Bool':\n      return value;\n    case 'Char':\n      return String.fromCodePoint(value);\n    case 'DateTime':\n      return new Date(Number(value) - UNIXEPOCH);\n    case 'Date':\n      return new Date(Number(value) * MILLISECONDS_PER_DAY - UNIXEPOCH);\n    case 'Year':\n    case 'Month':\n    case 'Week':\n    case 'Day':\n    case 'Hour':\n    case 'Minute':\n    case 'Second':\n    case 'Millisecond':\n    case 'Microsecond':\n    case 'Nanosecond':\n      return value;\n    case 'Missing':\n      return null;\n    case 'FilePos':\n      return value;\n    case 'Hash':\n      return uint128ToBigInt(Array.from(value));\n    case 'Int8':\n    case 'Int16':\n    case 'Int32':\n    case 'Int64':\n      return value;\n    case 'Int128':\n      return int128ToBigInt(Array.from(value));\n    case 'UInt8':\n    case 'UInt16':\n    case 'UInt32':\n    case 'UInt64':\n      return value;\n    case 'UInt128':\n      return uint128ToBigInt(Array.from(value));\n    case 'Float16':\n    case 'Float32':\n    case 'Float64':\n      return value;\n    case 'Decimal16':\n    case 'Decimal32':\n    case 'Decimal64':\n      return new Decimal(value.toString()).dividedBy(\n        Math.pow(10, typeDef.places),\n      );\n    case 'Decimal128': {\n      const val = int128ToBigInt(Array.from(value));\n\n      return new Decimal(val.toString()).dividedBy(\n        Math.pow(10, typeDef.places),\n      );\n    }\n    case 'Rational8':\n    case 'Rational16':\n    case 'Rational32':\n    case 'Rational64': {\n      value = Array.from(value);\n\n      return {\n        numerator: value[0],\n        denominator: value[1],\n      };\n    }\n    case 'Rational128': {\n      value = Array.from(value);\n\n      return {\n        numerator: int128ToBigInt(Array.from(value[0])),\n        denominator: int128ToBigInt(Array.from(value[1])),\n      };\n    }\n    case 'Constant': {\n      return typeDef.value.value;\n    }\n    case 'ValueType': {\n      const nonConstantTypeDefs = typeDef.typeDefs.filter(\n        td => td.type !== 'Constant',\n      );\n      let val = value?.toArray ? value.toArray() : value;\n\n      // TODO add explanation comment\n      // inlined value types? is that the proper term?\n      if (nonConstantTypeDefs.length === 1) {\n        val = [val];\n      }\n\n      return nonConstantTypeDefs.map((td, index) => {\n        return convertValue(td, val[index]);\n      });\n    }\n    case 'Unknown':\n      return value && value.toJSON ? value.toJSON() : value;\n  }\n}\n\nexport function getDisplayValue(\n  typeDef: RelTypeDef,\n  value: RelTypedValue['value'],\n): string {\n  const val = {\n    ...typeDef,\n    value,\n  } as RelTypedValue;\n\n  if (typeDef.type === 'Constant') {\n    return getDisplayValue(typeDef.value, value);\n  }\n\n  switch (val.type) {\n    case 'String':\n      return JSON.stringify(val.value).slice(1, -1);\n    case 'Bool':\n      return val.value ? 'true' : 'false';\n    case 'Char':\n      return val.value;\n    case 'DateTime':\n      return val.value.toISOString();\n    case 'Date':\n      return val.value.toISOString().split('T')[0];\n    case 'Year':\n    case 'Month':\n    case 'Week':\n    case 'Day':\n    case 'Hour':\n    case 'Minute':\n    case 'Second':\n    case 'Millisecond':\n    case 'Microsecond':\n    case 'Nanosecond':\n    case 'Int8':\n    case 'Int16':\n    case 'Int32':\n    case 'Int64':\n    case 'Int128':\n    case 'UInt8':\n    case 'UInt16':\n    case 'UInt32':\n    case 'UInt64':\n    case 'UInt128':\n    case 'FilePos':\n    case 'Hash':\n      return val.value.toString();\n    case 'Missing':\n      return 'missing';\n    case 'Float16':\n    case 'Float32':\n    case 'Float64':\n      return val.value % 1 === 0 ? val.value + '.0' : val.value.toString();\n    case 'Decimal16':\n    case 'Decimal32':\n    case 'Decimal64':\n    case 'Decimal128':\n      return val.value.toFixed(val.places);\n    case 'Rational8':\n    case 'Rational16':\n    case 'Rational32':\n    case 'Rational64':\n    case 'Rational128':\n      return `${val.value.numerator}/${val.value.denominator}`;\n    case 'ValueType': {\n      const nonConstantTypeDefs = val.typeDefs.filter(\n        td => td.type !== 'Constant',\n      );\n\n      return nonConstantTypeDefs\n        .map((td, index) => {\n          const displayValue = getDisplayValue(td, val.value[index]);\n\n          return td.type === 'ValueType' ? `(${displayValue})` : displayValue;\n        })\n        .join(', ');\n    }\n    case 'Unknown': {\n      const _value = val.value as any;\n\n      if (typeof _value === 'object') {\n        return Object.keys(_value)\n          .map(key => `${_value[key]}`)\n          .join(', ');\n      }\n\n      // probably inlined value type\n      return _value;\n    }\n  }\n}\n\nfunction int128ToBigInt(tuple: bigint[]) {\n  return (BigInt.asIntN(64, tuple[1]) << BigInt(64)) | tuple[0];\n}\n\nfunction uint128ToBigInt(tuple: bigint[]) {\n  return (BigInt.asUintN(64, tuple[1]) << BigInt(64)) | tuple[0];\n}\n\nfunction mapPrimitiveValue(val: PrimitiveValue) {\n  switch (val.value.oneofKind) {\n    case 'stringVal':\n      return `:${new TextDecoder().decode(val.value.stringVal)}`;\n    case 'charVal':\n      return val.value.charVal;\n    case 'boolVal':\n      return val.value.boolVal;\n    case 'int8Val':\n      return val.value.int8Val;\n    case 'int16Val':\n      return val.value.int16Val;\n    case 'int32Val':\n      return val.value.int32Val;\n    case 'int64Val':\n      return val.value.int64Val;\n    case 'int128Val':\n      return [val.value.int128Val.lowbits, val.value.int128Val.highbits];\n    case 'uint8Val':\n      return val.value.uint8Val;\n    case 'uint16Val':\n      return val.value.uint16Val;\n    case 'uint32Val':\n      return val.value.uint32Val;\n    case 'uint64Val':\n      return val.value.uint64Val;\n    case 'uint128Val':\n      return [val.value.uint128Val.lowbits, val.value.uint128Val.highbits];\n    case 'float16Val':\n      return val.value.float16Val;\n    case 'float32Val':\n      return val.value.float32Val;\n    case 'float64Val':\n      return val.value.float64Val;\n  }\n\n  throw new Error('Unknown primitive value');\n}\n\nfunction mapValueType(typeDef: Omit<ValueTypeValue, 'value'>): RelTypeDef {\n  const relNames = typeDef.typeDefs\n    .slice(0, 3)\n    .filter(\n      td => td.type === 'Constant' && td.value.type === 'String',\n    ) as ConstantValue[];\n\n  if (\n    relNames.length !== 3 ||\n    !(relNames[0].value.value === ':rel' && relNames[1].value.value === ':base')\n  ) {\n    return typeDef;\n  }\n\n  const standardValueType = (relNames[2].value.value as string).slice(1);\n\n  switch (standardValueType) {\n    case 'DateTime':\n    case 'Date':\n    case 'Year':\n    case 'Month':\n    case 'Week':\n    case 'Day':\n    case 'Hour':\n    case 'Minute':\n    case 'Second':\n    case 'Millisecond':\n    case 'Microsecond':\n    case 'Nanosecond':\n    case 'FilePos':\n    case 'Missing':\n    case 'Hash':\n      return {\n        type: standardValueType,\n      };\n    case 'FixedDecimal': {\n      if (\n        typeDef.typeDefs.length === 6 &&\n        typeDef.typeDefs[3].type === 'Constant' &&\n        typeDef.typeDefs[4].type === 'Constant'\n      ) {\n        const bits = Number(typeDef.typeDefs[3].value.value);\n        const places = Number(typeDef.typeDefs[4].value.value);\n\n        if (bits === 16 || bits === 32 || bits === 64 || bits === 128) {\n          return {\n            type: `Decimal${bits}`,\n            places: places,\n          };\n        }\n      }\n      break;\n    }\n    case 'Rational': {\n      if (\n        typeDef.typeDefs.length === 4 &&\n        typeDef.typeDefs[3].type === 'ValueType'\n      ) {\n        const tp = typeDef.typeDefs[3];\n\n        if (tp.typeDefs.length === 2) {\n          switch (tp.typeDefs[0].type) {\n            case 'Int8':\n              return { type: 'Rational8' };\n            case 'Int16':\n              return { type: 'Rational16' };\n            case 'Int32':\n              return { type: 'Rational32' };\n            case 'Int64':\n              return { type: 'Rational64' };\n            case 'Int128':\n              return { type: 'Rational128' };\n          }\n        }\n      }\n    }\n  }\n\n  return typeDef;\n}\n\ntype PValue = ReturnType<typeof mapPrimitiveValue>;\ntype NestedPrimitiveValue = PValue | NestedPrimitiveValue[];\n\nexport function unflattenContantValue(\n  typeDef: RelTypeDef,\n  value: PrimitiveValue[],\n) {\n  const values = value.map(mapPrimitiveValue);\n  const res: NestedPrimitiveValue[] = [];\n\n  const walk = (typeDef: RelTypeDef, result: any[]) => {\n    if (typeDef.type === 'ValueType') {\n      const r: any[] = [];\n      result.push(r);\n\n      typeDef.typeDefs.forEach(td => walk(td, r));\n    } else if (typeDef.type !== 'Constant') {\n      result.push(values.splice(0, 1)[0]);\n    }\n  };\n\n  walk(typeDef, res);\n\n  return res[0];\n}\n","/**\n * Copyright 2021 RelationalAI, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nimport { StructRowProxy, Table } from 'apache-arrow';\nimport { Table as PrintTable } from 'console-table-printer';\n\nimport { ArrowRelation } from '../api/transaction/types';\nimport { Kind, PrimitiveType, RelType } from '../proto/generated/schema';\nimport {\n  convertValue,\n  getDisplayValue,\n  getTypeDef,\n  getTypeDefFromProtobuf,\n} from './resultUtils';\nimport { RelTypeDef, RelTypedValue } from './types';\n\nexport interface ResultColumn {\n  /**\n   * Returns type definition of the column\n   *\n   * @returns Type definition.\n   */\n  typeDef: RelTypeDef;\n\n  /**\n   * Returns an iterator over column values.\n   *\n   * @returns An iterator over column values.\n   */\n  [Symbol.iterator](): IterableIterator<RelTypedValue['value']>;\n\n  /**\n   * Returns column values as an array\n   *\n   * @returns An array of column values.\n   */\n  values: () => RelTypedValue['value'][];\n\n  /**\n   * Return a value at the given index.\n   *\n   * @param {string} index Row index.\n   * @returns Value or undefined if the index is out of range.\n   */\n  get: (index: number) => RelTypedValue['value'] | undefined;\n\n  /**\n   * Number of values in the column.\n   *\n   * @returns Number of values.\n   */\n  readonly length: number;\n}\n\ninterface IteratorOf<T> {\n  [Symbol.iterator](): IterableIterator<T>;\n  values: () => T[];\n  readonly length: number;\n}\n\ntype ColumnDef = {\n  typeDef: RelTypeDef;\n  metadata: RelType;\n  arrowIndex?: number;\n};\n\n/**\n * ResultTable provides an interface over {@link ArrowRelation} that maps Rel\n * types to their corresponding JavaScript equivalents.\n */\nexport class ResultTable implements IteratorOf<RelTypedValue['value'][]> {\n  private table: Table;\n  private colDefs: ColumnDef[];\n\n  /**\n   * Instantiate a new ResultTable instance.\n   *\n   * @example\n   *   cosnt result = await client.exec('database', 'engine', 'def output = 123, \"test\"')\n   *   cosnt table = new ResultTable(result.results[0]);\n   *\n   *   console.log(table.values()); // Prints [[123n, \"test\"]];\n   *\n   * @param relation Arrow relation\n   */\n  constructor(private relation: ArrowRelation) {\n    this.table = relation.table;\n\n    const isProtoMetadataAvailable = !!relation.metadata.arguments.filter(\n      t => t.tag !== Kind.UNSPECIFIED_KIND,\n    ).length;\n    const types = !isProtoMetadataAvailable\n      ? relation.relationId.split('/').filter(x => x)\n      : relation.metadata.arguments;\n\n    let arrowIndex = 0;\n\n    this.colDefs = types.map(t => {\n      const typeDef =\n        typeof t === 'string' ? getTypeDef(t) : getTypeDefFromProtobuf(t);\n\n      const colDef: ColumnDef = {\n        typeDef,\n        metadata:\n          typeof t === 'object'\n            ? t\n            : // TODO get rid of it when removing JSON metadata based implementation\n              {\n                tag: Kind.UNSPECIFIED_KIND,\n                primitiveType: PrimitiveType.UNSPECIFIED_TYPE,\n              },\n      };\n\n      if (typeDef.type !== 'Constant') {\n        colDef.arrowIndex = arrowIndex;\n        arrowIndex++;\n      }\n\n      return colDef;\n    });\n  }\n\n  /**\n   * Return an array of type definitions per column. Shortcut for column.typeDef.\n   *\n   * @returns An array of type definitions.\n   */\n  typeDefs() {\n    return this.colDefs.map(c => c.typeDef);\n  }\n\n  /**\n   * The number of columns in this table.\n   *\n   * @returns The number of columns.\n   */\n  get columnLength() {\n    return this.colDefs.length;\n  }\n\n  /**\n   * Return an array of columns.\n   *\n   * @returns An array of columns.\n   */\n  columns() {\n    const columns = [];\n\n    for (let i = 0; i < this.columnLength; i++) {\n      columns.push(this.columnAt(i));\n    }\n\n    return columns;\n  }\n\n  /**\n   * Return column at the given index.\n   *\n   * @param index The column index.\n   * @returns The column, or undefined if the index is out of range.\n   */\n  columnAt(index: number) {\n    const colDef = this.colDefs[index];\n\n    if (!colDef) {\n      throw new Error(`Couldn't find column by index`);\n    }\n    const table = this.table;\n    const length = isFullySpecialized(this.colDefs) ? 1 : this.table.numRows;\n\n    const column: ResultColumn = {\n      get length() {\n        return length;\n      },\n      get typeDef() {\n        return colDef.typeDef;\n      },\n      *[Symbol.iterator]() {\n        if (colDef.typeDef.type === 'Constant') {\n          for (let i = 0; i < length; i++) {\n            yield convertValue(colDef.typeDef, null);\n          }\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const arrowColumn = table.getChildAt(colDef.arrowIndex!);\n\n          if (!arrowColumn) {\n            throw new Error(`Couldn't find column by index`);\n          }\n\n          for (const val of arrowColumn) {\n            yield convertValue(colDef.typeDef, val);\n          }\n        }\n      },\n      values() {\n        return Array.from(this);\n      },\n      get(index: number) {\n        if (index < 0 || index >= length) {\n          return;\n        }\n\n        if (colDef.typeDef.type === 'Constant') {\n          return convertValue(colDef.typeDef, null);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const arrowColumn = table.getChildAt(colDef.arrowIndex!)!;\n\n          return convertValue(colDef.typeDef, arrowColumn.get(index));\n        }\n      },\n    };\n\n    return column;\n  }\n\n  /**\n   * Return a new table containing only specified columns.\n   *\n   * @param begin The beginning of the specified portion of the Table.\n   * @param end The end of the specified portion of the Table. This is\n   *   exclusive of the element at the index 'end'.\n   * @returns A new ResultTable.\n   */\n  sliceColumns(begin: number | undefined, end?: number | undefined) {\n    const newColDefs = this.colDefs.slice(begin, end);\n    const arrowColNames: any[] = [];\n\n    newColDefs.forEach(colDef => {\n      if (colDef.arrowIndex !== undefined) {\n        arrowColNames.push(this.table.schema.names[colDef.arrowIndex]);\n      }\n    });\n\n    const relationId = this.relation.relationId\n      .split('/')\n      .filter(t => t)\n      .slice(begin, end)\n      .join('/');\n    const slicedTable = this.table.select(arrowColNames);\n\n    return new ResultTable({\n      relationId: `/${relationId}`,\n      table: slicedTable,\n      metadata: { arguments: newColDefs.map(cd => cd.metadata) },\n    });\n  }\n\n  /**\n   * The number of rows in this table.\n   *\n   * @returns The number of rows.\n   */\n  get length() {\n    if (isFullySpecialized(this.colDefs)) {\n      return 1;\n    }\n\n    return this.table.numRows;\n  }\n\n  /**\n   * Return an iterator over rows.\n   *\n   * @returns An iterator over rows\n   */\n  *[Symbol.iterator]() {\n    if (isFullySpecialized(this.colDefs)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      yield this.get(0)!;\n    }\n\n    for (const arrowRow of this.table) {\n      yield arrowRowToValues(arrowRow, this.colDefs);\n    }\n  }\n\n  /**\n   * Return an array of rows.\n   *\n   * @returns An array of rows.\n   */\n  values() {\n    return Array.from(this);\n  }\n\n  /**\n   * Return row at the given index.\n   *\n   * @param {string} index Row index.\n   * @returns The row or undefined if the index is out of range.\n   */\n  get(index: number) {\n    if (isFullySpecialized(this.colDefs) && index === 0) {\n      return this.colDefs.map(c => {\n        return convertValue(c.typeDef, null);\n      });\n    }\n\n    const arrowRow = this.table.get(index);\n\n    if (arrowRow) {\n      return arrowRowToValues(arrowRow, this.colDefs);\n    }\n  }\n\n  /**\n   * Return a new table that's a sub-section of this table.\n   *\n   * @param begin The beginning of the specified portion of the Table.\n   * @param end The end of the specified portion of the Table. This is\n   *   exclusive of the element at the index 'end'.\n   * @returns A new ResultTable.\n   */\n  slice(begin: number | undefined, end?: number | undefined) {\n    const slicedTable = this.table.slice(begin, end);\n\n    return new ResultTable({\n      relationId: this.relation.relationId,\n      table: slicedTable,\n      metadata: this.relation.metadata,\n    });\n  }\n\n  /**\n   * Prints this table using console.log.\n   *\n   * Note: it uses getDisplayValue function to convert values to strings.\n   */\n  print() {\n    const pTable = new PrintTable({\n      columns: this.colDefs.map((colDef, i) => ({\n        name: i.toString(),\n        title: colDef.typeDef.name || colDef.typeDef.type,\n      })),\n    });\n\n    this.values().forEach(row => {\n      const printRow: Record<number, string> = {};\n\n      row.forEach((val, index) => {\n        const { typeDef } = this.colDefs[index];\n        printRow[index] = getDisplayValue(typeDef, val);\n      });\n\n      pTable.addRow(printRow);\n    });\n\n    pTable.printTable();\n  }\n\n  /**\n   * Return a new table containing only physical columns. Specialized columns\n   * are not included.\n   *\n   * @returns A new ResultTable.\n   */\n  physical() {\n    const relationId = this.relation.relationId\n      .split('/')\n      .filter(t => t.length && getTypeDef(t).type !== 'Constant')\n      .join('/');\n\n    return new ResultTable({\n      relationId: `/${relationId}`,\n      table: this.table,\n      metadata: {\n        arguments: this.colDefs\n          .filter(cd => cd.typeDef.type !== 'Constant')\n          .map(cd => cd.metadata),\n      },\n    });\n  }\n\n  /**\n   * Return Arrow Table that's being used internally\n   *\n   * @returns Arrow Table\n   */\n  arrow() {\n    return this.table;\n  }\n}\n\nfunction arrowRowToValues(arrowRow: StructRowProxy, colDefs: ColumnDef[]) {\n  const arr = arrowRow.toArray();\n  const row = colDefs.map(colDef => {\n    if (colDef.typeDef.type === 'Constant') {\n      return convertValue(colDef.typeDef, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return convertValue(colDef.typeDef, arr[colDef.arrowIndex!]);\n    }\n  });\n\n  return row;\n}\n\nfunction isFullySpecialized(colDefs: ColumnDef[]) {\n  return colDefs.length && colDefs.every(c => c.typeDef.type === 'Constant');\n}\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","renderTable","printTable","Table","console_table_printer_1","default","internal_table_printer_1","enumerable","get","printSimpleTable","renderSimpleTable","internal_table_1","table_helpers_1","constructor","options","table","addColumn","column","addColumns","columns","addRow","text","rowOptions","convertRawRowOptionsToStandard","addRows","toBeInsertedRows","tableRendered","console","log","render","rawColumnToInternalColumn","objIfExists","table_constants_1","key","val","assign","name","title","color","maxLen","minLen","alignment","DEFAULT_ROW_ALIGNMENT","colored_console_line_1","string_utils_1","table_pre_processors_1","renderOneLine","tableStyle","currentLineIndex","widthLimitedColumnsArray","isHeader","row","colorMap","line","addCharsWithColor","DEFAULT_ROW_FONT_COLOR","vertical","forEach","textForThisLine","length","cellText","DEFAULT_HEADER_FONT_COLOR","textWithPadding","DEFAULT_COLUMN_LEN","renderConsole","renderWidthLimitedLines","getWidthLimitedColumnsArray","totalLines","values","reduce","a","b","Math","max","ret","singleLine","push","preProcessColumns","preProcessRows","undefined","titleWithPadding","DEFAULT_HEADER_ALIGNMENT","map","m","accumulator","currentValue","styledText","renderTableTitle","renderTableHorizontalBorders","headerTop","createHeaderAsRow","createRow","concat","headerBottom","renderTableHeaders","rows","renderRow","row_","lastRowIndex","indexOf","separator","rowSeparator","renderRowSeparator","tableBottom","renderTableEnding","join","input_converter_1","DEFAULT_ROW_SORT_FUNC","DEFAULT_ROW_FILTER_FUNC","DEFAULT_TABLE_STYLE","filterFunction","sortFunction","enabledColumns","disabledColumns","computedColumns","DEFAULT_ROW_SEPARATOR","DEFAULT_COLOR_MAP","Array","initSimple","initDetailed","_a","style","sort","filter","createColumnFromRow","colNames","col","keys","includes","createColumFromOnlyName","textOrObj","createColumFromComputedColumn","toBeInsertedColumns","toBeInsertedColumn","toBeInsertedRow","computedColumn","function","createComputedColumnsIfNecessary","enableColumnsIfNecessary","disableColumnsIfNecessary","findLenOfColumn","findColumnWidth","newRows","r","r1","r2","red","green","yellow","blue","magenta","cyan","white","crimson","white_bold","reset","colorAnsi","simple_wcswidth_1","colorRegex","str","wcswidth","replace","stripAnsi","biggestWordInSentence","limitWidth","console_utils_1","columnLen","curTextSize","leftPadding","floor","rightPadding","repeat","inpStr","width","spaceSeparatedStrings","split","now","cnt","strWithoutSpace","consoleWidth","COLORS","ALIGNMENTS","left","mid","right","other","createTableHorizontalBorders","column_lengths","len","slice","columnId","columnTitle","acc","createRowFn","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","toStringTag","digitsToString","d","i","k","ws","indexOfLastWord","w","getZeroString","checkInt32","min","Error","checkRoundingDigits","rm","repeating","di","rd","ceil","convertBase","baseIn","baseOut","j","arrL","arr","strL","charAt","reverse","absoluteValue","abs","x","s","finalise","e","clampedTo","clamp","Ctor","NaN","gt","cmp","comparedTo","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","isZero","tinyPow","toString","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","n","rep","t","t3","t3plusx","isFinite","toExponential","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","sub","xe","xLTy","pop","shift","getBase10Exponent","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","guard","sum","c","c0","numerator","x1","String","parseDecimal","search","substring","charCodeAt","parseOther","divisor","isFloat","p","test","toLowerCase","isHyperbolic","u","pi","atan2","config","obj","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","arguments","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","prototype","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","hasOwnProperty","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","call","decode","input","tokens","match","module","encodedURI","TypeError","replaceMap","exec","result","entries","customDecodeURIComponent","predicate","isArr","isArray","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","strict","encodeURIComponent","keysSorter","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","trim","parseBooleans","parse","query","arrayFormat","arrayFormatSeparator","formatter","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","create","param","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","wcwidth","wcswidth_1","wcwidth_1","ucs","tableSize","first","last","pwcs","charCode","non_spacing_chars_1","binary_search_1","string","separatorIndex","toUpperCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","o","prop","ApiError","message","status","details","response","super","TransactionError","msg","JSON","VERSION","isNode","process","versions","node","addDefaultHeaders","headers","sdkUserAgent","defaultHeaders","Accept","parsedUrl","URL","hostname","async","request","opts","method","body","window","highWaterMark","fullUrl","fetch","globalThis","error","errorMsg","contentType","responseBody","responseClone","json","blob","formData","files","entry","file","parseMultipart","cause","onResponse","ok","type","statusText","makeError","Base","region","baseUrl","_onResponse","scheme","host","port","path","credentials","getToken","authorization","ENDPOINT","__awaiter","thisArg","_arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","__await","__asyncGenerator","asyncIterator","g","verb","resume","fulfill","settle","f","__asyncDelegator","iterator","__asyncValues","__values","MetadataVersion","Precision","MessageHeader","Type","BufferType","IntervalUnit","TimeUnit","DateUnit","UnionMode","valueToString","toPrimitive","ArrayBuffer","isView","BigInt64Array","BigUint64Array","_","decoder","TextDecoder","decodeUtf8","buffer","encoder","TextEncoder","encodeUtf8","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BYTES_PER_ELEMENT","static","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","isFunction","isObject","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isNumber","isFetchResponse","isReadableDOMStream","isReadableInterop","isReadableNodeStream","isBoolean","SharedArrayBuf","SharedArrayBuffer","memcpy","target","source","targetByteOffset","sourceByteLength","byteLength","targetByteLength","dst","Uint8Array","byteOffset","src","joinUint8Arrays","chunks","size","xOffset","yOffset","xLen","yLen","collapseContiguousByteRanges","sliced","offset","POSITIVE_INFINITY","subarray","toArrayBufferView","ArrayBufferViewCtor","bytes","from","toInt32Array","Int32Array","toUint8Array","pump","toArrayBufferViewAsyncIterator","ArrayCtor","wrap","buffers","it","emit","toUint8ArrayAsyncIterator","isArrowBigNumSymbol","for","BigNum","setPrototypeOf","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","signed","words","negative","number","word","bignumToString","bignumToBigInt","decimalToString","base64","base32","Uint16Array","checks","hint","BN","isSigned","Int8Array","Int16Array","new","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","proto","typeId","Null","Int","Float","Binary","Utf8","Bool","Date","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Map","Dictionary","isUnion","mode","NONE","children","ArrayType","Int_","bitWidth","Int32","HALF","SINGLE","Float32Array","DOUBLE","Float64Array","scale","Date_","unit","Time_","Timestamp_","timezone","Interval_","child","valueType","valueField","Union_","typeIds","typeIdToChildIndex","idx","byteWidth","listSize","Map_","keysSorted","keyType","childType","getId","atomicDictionaryId","dictionary","indices","id","isOrdered","low","strideForType","Visitor","visitMany","nodes","visit","getVisitFn","throwIfNotFound","visitor","getVisitFnByTypeId","inferDType","visitNull","_node","_args","visitBool","visitInt","visitFloat","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","visitTimestamp","visitTime","visitDecimal","visitList","visitStruct","visitUnion","visitDictionary","visitInterval","visitFixedSizeList","visitMap","dtype","fn","Int8","visitInt8","Int16","visitInt16","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","f64","u32","uint16ToFloat64","h","expo","sigf","SetVisitor","wrapSet","data","_1","_2","setValid","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","valueOffsets","setInt","setFloat","setFloat16","float64ToUint16","setDateDay","setEpochMsToDays","setDateMillisecond","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","childIndex","instance","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","stride","itr","end","childSetters","Vector","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","kParent","kRowIndex","StructRow","parent","rowIndex","Proxy","StructRowProxyHandler","toArray","StructRowIterator","childFields","numChildren","defineProperties","configurable","writable","isExtensible","deleteProperty","preventExtensions","ownKeys","has","findIndex","getOwnPropertyDescriptor","Reflect","GetVisitor","wrapGet","getValid","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_data","_index","decimal","begin","MapRow","kKeys","kVals","memoize","MapRowProxyHandler","MapRowIterator","vals","keyIndex","numKeys","tmp","clampRange","lhs","rhs","isNaNFast","createElementComparator","valueOfSearch","compareArrayLike","comparators","createSubElementsComparator","createMapComparator","createArrayLikeComparator","createVectorComparator","allowEmpty","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","return","ChunkedIterator","numChunks","getChunkIterator","chunkIndex","chunkIterator","computeChunkNullCounts","nullCount","chunk","computeChunkOffsets","offsets","sliceChunks","slices","to","binarySearch","isChunkedValid","wrapChunkedCall1","chunkedFn","_offsets","wrapChunkedCall2","wrapChunkedIndexOf","chunkedIndexOf","fromIndex","total","element","byte","bit","getBit","packBools","BitIterator","context","byteIndex","popcnt_bit_range","rhsInside","lhsInside","pos","view","DataView","popcnt_uint32","getUint32","getUint16","getUint8","popcnt_array","uint32","IndexOfVisitor","indexOfValue","searchElement","nullBitmap","isValid","indexOfNull","indexOfUnion","IteratorVisitor","vectorIterator","vector","inner","VectorIterator","GetByteLengthVisitor","____","getByteLength","getDenseUnionByteLength","getSparseUnionByteLength","start","visitorsByTypeId","vectorPrototypesByTypeId","flatMap","some","unchunkedData","_byteLength","_nullCount","VectorName","others","flat","memo","array","getChild","getChildAt","isMemoized","MemoizedVector","newData","cloned","unmemoize","isConcatSpreadable","T","cache","cachedValue","nullable","_changeLengthAndBackfillNullBitmap","childStride","_sliceBuffers","_sliceChildren","newLength","bitmap","fill","alignedSize","truncateBitmap","VALIDITY","TYPE","OFFSET","DATA","freeze","MakeDataVisitor","props","fields","metadata","dictionaries","generateDictionaryMap","names","select","fieldNames","Set","selectAt","fieldIndices","curFields","mergeMaps","newFields","f2","newDictionaries","Field","m1","m2","TypeComparator","compareSchemas","schema","compareManyFields","every","compareFields","field","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","compareTime","compareUnion","compareInterval","ensureSameLengthData","_dictionaries","collectDictionaries","numCols","numRows","setChild","setChildAt","columnNames","columnIndices","subset","maxLength","nullBitmapSize","_InternalEmptyPlaceholderRecordBatch","distributeVectorsIntoRecordBatches","vecs","cols","batches","numBatches","batchLength","numColumns","distributeChildren","uniformlyDistributeChunksAcrossRecordBatches","unwrap","batch","empty","nameToIndex","columnName","oldToNew","newIdx","Block","bb","bb_pos","__init","readInt64","metaDataLength","readInt32","bodyLength","builder","prep","writeInt64","pad","writeInt32","int32","float32","float64","isLittleEndian","Long","high","ZERO","toFloat64","Encoding","Endianness","DictionaryKind","ByteBuffer","bytes_","position_","byte_size","clear","position","setPosition","capacity","readInt8","readUint8","readInt16","readUint16","readUint32","readUint64","readFloat32","readFloat64","writeInt8","writeUint8","writeInt16","writeUint16","writeUint32","writeUint64","writeFloat32","writeFloat64","getBufferIdentifier","fromCharCode","__offset","vtable_offset","vtable","__union","__string","opt_encoding","UTF8_BYTES","codePoint","__union_with_string","__indirect","__vector","__vector_len","__has_identifier","ident","createLong","createScalarList","listAccessor","listLength","createObjList","unpack","Builder","opt_initial_size","initial_size","minalign","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","string_maps","allocate","space","forceDefaults","dataBuffer","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","finishSizePrefixed","requiredField","table_start","vtable_start","startVector","elem_size","num_elems","endVector","createSharedString","createString","utf8","createObjectOffset","pack","createObjectOffsetList","list","createStructOffsetList","startFunc","KeyValue","optionalEncoding","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","startInt","addBitWidth","addIsSigned","endInt","DictionaryEncoding","indexType","dictionaryKind","DenseArray","indexTypeOffset","typeType","childrenLength","customMetadata","customMetadataLength","nameOffset","typeOffset","dictionaryOffset","childrenOffset","numElems","customMetadataOffset","endianness","Little","fieldsLength","features","featuresLength","fieldsOffset","featuresOffset","startSchema","addEndianness","addFields","addCustomMetadata","addFeatures","endSchema","Footer","version","dictionariesLength","recordBatches","recordBatchesLength","schemaOffset","dictionariesOffset","recordBatchesOffset","Footer_","V4","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","OffHeapFooter","numRecordBatches","rb","FileBlock","numDictionaries","db","dictionaryBatchesOffset","block","getRecordBatch","getDictionaryBatch","_footer","fileBlock","fromIterable","cmd","threw","bufferLength","toArrayBufferViewIterator","throw","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","stream","events","event","onEvent","race","evt","destroy","cleanup","toDOMStream","toNodeStream","reader","catch","closed","cancel","reason","read","handler","ITERATOR_DONE","ArrowJSON","_json","ReadableInterop","tee","_getDOMStream","pipe","_getNodeStream","pipeTo","pipeThrough","duplex","_DOMStream","_nodeStream","AsyncQueue","_values","resolvers","_closedPromise","_closedPromiseResolve","write","_ensureOpen","abort","_error","close","peek","AsyncByteQueue","sync","e_1","e_1_1","ByteStream","ByteStreamSource","AsyncByteStream","AsyncByteStreamSource","RandomAccessFile","readAt","getInt32","seek","nBytes","AsyncRandomAccessFile","_handle","_pending","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","_times","L","R","product","_plus","hex","out_buffer","fromString","posn","group","parseInt","multiple","negate","this_high","other_high","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","readTypeIds","readDictionary","nextBufferRange","_type","JSONVectorLoader","sources","convertArray","joined","binaryDataFromJSON","BodyCompressionMethod","CompressionType","BodyCompression","codec","LZ4_FRAME","BUFFER","startBodyCompression","addCodec","addMethod","endBodyCompression","Buffer","FieldNode","null_count","nodesLength","buffersLength","compression","nodesOffset","buffersOffset","compressionOffset","isDelta","dataOffset","startFloatingPoint","addPrecision","endFloatingPoint","startDecimal","addScale","endDecimal","startDate","addUnit","endDate","startTime","endTime","timezoneOffset","startTimestamp","addTimezone","endTimestamp","startInterval","endInterval","typeIdsLength","typeIdsArray","typeIdsOffset","startUnion","addMode","addTypeIds","endUnion","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","startFixedSizeList","addListSize","endFixedSizeList","startMap","addKeysSorted","endMap","headerType","header","headerOffset","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","startNull","endNull","startBinary","endBinary","startBool","endBool","startUtf8","endUtf8","startList","endList","startStruct_","endStruct_","startDictionaryEncoding","addId","addIsOrdered","addIndexType","endDictionaryEncoding","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","_field","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","Message","_version","_headerType","_createHeader","_bodyLength","Schema","RecordBatch","DictionaryBatch","messageHeaderFromJSON","_message","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","_nodes","_buffers","_length","_isDelta","_id","decodeFieldChildren","decodeCustomMetadata","decodeIndexType","decodeFieldType","childOffsets","childrenVectorOffset","metadataOffset","dictType","dictMeta","fieldOffsets","fieldsVectorOffset","platformIsLittleEndian","_schema","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","nodesVectorOffset","b_","buffersVectorOffset","decodeFieldNodes","bufferRegions","decodeBuffers","dictionaryBatch","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","readMessage","readMessageBody","readSchema","throwIfNull","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC_STR","MAGIC","codePointAt","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","RecordBatchReader","impl","_impl","autoDestroy","isFile","isSync","isAsync","isStream","open","opening","readRecordBatch","objectMode","writableStrategy","readableStrategy","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAllSync","readAllAsync","readAll","RecordBatchReaderImpl","_recordBatchIndex","_loadRecordBatch","_loadVectors","_loadDictionaryBatch","types","_reader","shouldAutoDestroy","_readNextMessageAndValidate","_readFooter","_readDictionaryBatch","rest","_super","self","tableFromIPC","UnknownFieldHandler","WireType","reflectionMergePartial","info","fieldValue","output","localName","oneof","oneofKind","kind","mergePartial","V","symbol","onRead","typeName","fieldNo","wireType","is","no","onWrite","writer","raw","all","uf","MESSAGE_TYPE","lowerCamelCase","snakeCase","capNext","sb","ScalarType","LongType","RepeatType","normalizeFieldInfo","jsonName","NO","opt","isOneofGroup","any","ReflectionTypeCheck","prepare","req","known","oneofs","depth","allowExcessProperties","find","repeated","scalars","scalar","INT32","messages","mapKeys","K","isAssignable","longType","argType","UINT64","FIXED64","INT64","SFIXED64","SINT64","BIGINT","NUMBER","BOOL","STRING","BYTES","FLOAT","FIXED32","SFIXED32","SINT32","UINT32","typeofJsonValue","encTable","decTable","varint64read","lowBits","highBits","assertBounds","middleByte","varint64write","lo","hi","hasNext","splitBits","hasMoreBits","TWO_PWR_32_DBL","int64fromString","dec","add1e6digit","digit1e6","int64toString","bitsLow","bitsHigh","digitA","digitB","digitC","decimalFrom1e7","digit1e7","needLeadingZeros","partial","varint32write","varint32read","readBytes","BI","dv","getBigInt64","getBigUint64","setBigInt64","setBigUint64","MIN","MAX","UMIN","UMAX","C","detectBi","assertBi","bi","RE_DECIMAL_STR","SharedPbLong","isSafeInteger","PbULong","toBigInt","setInt32","PbLong","pbl","assert","condition","assertInt32","assertUInt32","assertFloat32","reflectionLongConvert","long","ReflectionJsonReader","fMap","fieldsInput","fieldName","jsonValue","what","oneofsHandled","jsonKey","ignoreUnknownFields","fieldObj","jsonObjKey","jsonObjValue","internalJsonRead","enum","fieldArr","jsonItem","localEnumName","enumNumber","NEGATIVE_INFINITY","float","base64Str","es","bytePos","groupPos","base64decode","ReflectionJsonWriter","useProtoFieldName","emitDefaultValues","jsonObj","entryKey","entryValue","messageType","enumInfo","enumAsInteger","jsonArr","optional","internalJsonWrite","ed","ulong","base64encode","reflectionScalarDefault","ReflectionBinaryReader","fieldNoToField","readUnknownField","skip","LengthDelimited","internalBinaryRead","mapKey","mapVal","mapEntry","bool","keyRaw","double","int64","uint64","fixed64","fixed32","sfixed32","sfixed64","sint32","sint64","ReflectionBinaryWriter","emitDefault","PACKED","packed","writeUnknownFields","fork","keyValue","internalBinaryWrite","isDefault","scalarInfo","Varint","Bit64","Bit32","defaultsWrite","prettySpaces","defaultsRead","objectValues","primitiveEq","ba","repeatedPrimitiveEq","repeatedMsgEq","writerFactory","BinaryWriter","textEncoder","stack","prev","setFloat32","setFloat64","setUint32","readerFactory","BinaryReader","textDecoder","varint64","fatal","StartGroup","EndGroup","RangeError","zze","getFloat32","getFloat64","MessageType","defaultCheckDepth","refTypeCheck","refJsonReader","refJsonWriter","refBinReader","refBinWriter","reflectionCreate","val_a","val_b","reflectionEquals","fromBinary","binaryReadOptions","fromJson","jsonReadOptions","fromJsonString","toJson","jsonWriteOptions","toJsonString","binaryWriteOptions","PrimitiveType","Kind","RelationId","RelType","RelTuple","PrimitiveValue","RelInt128","highbits","lowbits","RelUInt128","int128Val","int64Val","int32Val","int16Val","int8Val","uint128Val","uint64Val","uint32Val","uint16Val","uint8Val","float64Val","float32Val","float16Val","charVal","boolVal","stringVal","ValueType","argumentTypes","ConstantType","relType","primitiveType","constantType","MetadataInfo","RelationMetadata","relations","fileName","relationId","TransactionMode","TransactionAsyncState","EngineSize","EngineState","readArrowFiles","results","filename","makeArrowRelations","metadataMap","readProtoMetadata","arrayBuffer","readJson","TransactionApi","database","engine","transaction","OPEN","dbname","compute_name","open_mode","post","actions","readonly","labeledActions","action","makeLabeledAction","nowait_durable","computeName","runTransaction","TransactionAsyncApi","problems","metadataProto","readTransactionResult","transactions","transactionId","makeModel","makeQueryInput","rel_key","toRelLiteral","UserStatus","UserRole","Client","derivedCtor","cloneDatabase","put","source_name","databases","listDatabases","delete","runActions","rels","delete_edb","delete_edb_result","XS","compute","computes","listEngines","models","listModels","model","delete_source","permissions","client","clients","clientId","patch","inputs","tags","v1_inputs","engine_name","runTransactionAsync","timeout","execAsync","txnId","pollTransaction","startedAt","checkState","setTimeout","state","getTransaction","ABORTED","COMPLETED","getTransactionMetadata","getTransactionProblems","getTransactionResults","outputs","persist","makeQueryAction","relation","qs","csv","syntax","headerStr","syntaxToRel","colName","schemaToRel","email","roles","user","users","userId","updateUser","ACTIVE","INACTIVE","baseCtor","getOwnPropertyNames","DatabaseState","Permission","Credentials","GetTokenCredentials","AccessToken","experiesIn","createdOn","isExpired","ClientCredentials","readCache","writeCache","clientSecret","clientCredentialsUrl","accessToken","requestedUrl","readTokenFromCache","requestToken","access_token","expires_in","created_on","client_id","client_secret","grant_type","audience","UNIXEPOCH","intRegEx","uintRegEx","floatRegEx","decimalRegEx","rationalRegEx","getTypeDef","intMatch","uintMatch","floatMatch","decimalMatch","places","rationalMatch","getTypeDefFromProtobuf","CONSTANT_TYPE","typeDef","mapPrimitiveValue","convertValue","getDisplayValue","unflattenContantValue","PRIMITIVE_TYPE","SYMBOL","CHAR","INT_8","INT_16","INT_32","INT_64","INT_128","UINT_8","UINT_16","UINT_32","UINT_64","UINT_128","FLOAT_16","FLOAT_32","FLOAT_64","VALUE_TYPE","relNames","typeDefs","td","standardValueType","bits","tp","mapValueType","fromCodePoint","tuple","int128ToBigInt","nonConstantTypeDefs","toISOString","displayValue","_value","res","walk","splice","ResultTable","colDefs","UNSPECIFIED_KIND","arrowIndex","colDef","UNSPECIFIED_TYPE","columnLength","columnAt","isFullySpecialized","arrowColumn","sliceColumns","newColDefs","arrowColNames","slicedTable","cd","arrowRow","arrowRowToValues","print","pTable","printRow","physical","arrow"],"sourceRoot":""}